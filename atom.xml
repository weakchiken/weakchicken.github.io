<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dou Qing</title>
  
  <subtitle>~人间有万紫千红~&lt;br&gt;~唯你是我情之所钟~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-24T12:38:28.080Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rday8</title>
    <link href="http://yoursite.com/2019/09/24/Rday8/"/>
    <id>http://yoursite.com/2019/09/24/Rday8/</id>
    <published>2019-09-23T16:00:00.000Z</published>
    <updated>2019-09-24T12:38:28.080Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday8"><a href="#Rday8" class="headerlink" title="Rday8"></a><center>Rday8</center></h1><p><center>BFS<br><img src="https://i.loli.net/2019/09/24/Ook9eRKapGCy1H7.jpg" alt><br><a id="more"></a></center></p><h2 id="Catch-him"><a href="#Catch-him" class="headerlink" title="Catch him"></a>Catch him</h2><p>在美式足球中，四分卫负责指挥整只球队的进攻战术和跑位，以及给接球员传球的任务。四分卫是一只球队进攻组最重要的球员，而且一般身体都相对比较弱小，所以通常球队会安排5-7名大汉来保护他，其中站在四分卫前方、排成一线的5名球员称为进攻锋线，他们通常都是135公斤左右的壮汉。<br>对防守方来说，攻击对手的四分卫当然是最直接的限制对手进攻的方法。如果效果好，就可以在对方四分卫传球之前将其按翻在地，称之为擒杀。擒杀是最好的鼓舞防守队士气的方法，因为对方连传球的机会都没有，进攻就结束了，还必须倒退一些距离开球。凶狠的擒杀甚至能够将对方的四分卫弄伤，从而迫使对方更换这个进攻核心。<br>在本题中，输入给出准备擒杀四分卫的防守球员的位置、对方每个进攻锋线球员的位置以及对方四分卫的位置，你的任务是求出这名准备擒杀的防守球员至少要移动多少步，才能够擒杀对方四分卫。<br>假设对方进攻锋线和四分卫在这个过程中都不会移动。只有1名防守球员，防守球员只要碰到对方四分卫就算擒杀。<br>所有的球员都是一块连续的、不中空的2维区域。防守球员不可以从进攻锋线的身体上穿过，也不可以从界外穿过(只能走空地)。<br>防守队员不可以转动身体，只能平移。防守队员的身体所有部分向同一个方向(上、下、左、右)移动1格的过程叫做1步。</p><p><code>Input</code><br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入包含多组数据。每组数据第一行都是两个整数H，W(<span class="number">0</span>&lt;H,W&lt;=<span class="number">100</span>)，表示整个区域的高度和宽度，H=W=<span class="number">0</span>表示输入结束。接下来有H行，每行W个字符。每个字符如果是’.’，表示这里是空地，如果是’O’，表示是进攻锋线队员的身体，如果是’D’，表示是准备擒杀的防守球员的身体，如果是’Q’，表示是四分卫的身体。</span><br><span class="line">输入保证符合上面的条件。防守球员的身体总共不超过<span class="number">20</span>格。</span><br></pre></td></tr></table></figure><p></p><p><code>Output</code><br>对每组数据，输出包含擒杀所需最少步数的一行。如果不能擒杀，输出带’Impossible’的一行。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="selector-class">.Q</span>....</span><br><span class="line">QQ..OO</span><br><span class="line"><span class="selector-class">.OO</span>..O</span><br><span class="line">..<span class="selector-class">.O</span><span class="selector-class">.O</span></span><br><span class="line">OO<span class="selector-class">.O</span>..</span><br><span class="line">....DD</span><br><span class="line"><span class="number">7</span> <span class="number">7</span></span><br><span class="line"><span class="selector-class">.Q</span>.....</span><br><span class="line">QQ<span class="selector-class">.OOO</span>.</span><br><span class="line">..<span class="selector-class">.O</span>...</span><br><span class="line">O......</span><br><span class="line">OO.<span class="selector-class">.OO</span>.</span><br><span class="line"><span class="selector-class">.O</span>.....</span><br><span class="line">.....DD</span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line">Impossible</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p><code>题意</code>:<br>首先我们移动的是一个由好多格子或者单个格子组成的一个D（防守队员）。如果我们每一个点都进行移动的话未免有点太尴尬，而且<code>vis[][]</code>判断是否走过该点的判断也不是很好写，这个时候我们需要一个抽象的想法：我们把这一坨D的最先出现的D（两层for遍历的情况下）当做一个头，我们移动头即可，那么我们怎样细节上处理这个题目呢？<br>如果我们有了一个标尺：“头” 之后呢，我们vis【】【】数组也就好处理了，对于头走过的点，标记上即可，那么他的身子要怎样移动呢？<br>我们都学过一个名词叫做：“相对”，关系可以相对，力可以相对，那么位子也可以相对。<br>对于这样的一个图：<br>ODO<br>ODO<br>ODD<br>我们规定第一个出现的D也就是坐标为（0,1）的点作为这个一坨D的头，我们可以通过头这样找到其他的身体部分：<br>（0,1）+（1，0）=（1,1）找到第二个出现的D，（0,1）+（2,0）=（2,1）找到第三个出现的D，（0,1）+（2,1）=（2,2）找到最后一个D。<br>那么我们可以通过保存（1,0）（2,0）（2,1）这三个x，y的相对位子值来通过“头”找到他们的身子。<br>这个时候小问题处理完毕了，我们就可以确定答题思路了：<br>用头漫无目的的BFS，每一次找到一个能走的位子都判断一下身子能否也可以达到相对位子，当然我们的“头”找到了Q的时候不要直接输出步数，我们还要判断他的身子能否走到合法的位子。同理，如果“身子”找到了Q的时候也不要直接输出步数，我们要确定所有身子的组成都能走到合法的位子才行</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e3</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x, y, step;</span><br><span class="line">&#125;now, nex;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> fang[<span class="number">25</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">char</span> a[maxx][maxx];</span><br><span class="line"><span class="keyword">int</span> vis[maxx][maxx];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>][<span class="number">2</span>] = &#123;</span><br><span class="line"><span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">-1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">-1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">vis[x][y] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line">now.x = x;</span><br><span class="line">now.y = y;</span><br><span class="line">now.step = <span class="number">0</span>;</span><br><span class="line">q.push(now);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">now = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line">nex.x = now.x + d[i][<span class="number">0</span>];</span><br><span class="line">nex.y = now.y + d[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(nex.x &gt;= <span class="number">0</span> &amp;&amp; nex.y &gt;= <span class="number">0</span> &amp;&amp; nex.x &lt; n &amp;&amp; nex.y &lt; m &amp;&amp; vis[nex.x][nex.y] == <span class="number">0</span> &amp;&amp; a[nex.x][nex.y] != <span class="string">'O'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到头部</span></span><br><span class="line"><span class="keyword">if</span>(a[nex.x][nex.y] == <span class="string">'Q'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//找头部附近的其他身体部分 并且判断是否合法</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> xx = nex.x + fang[j][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> yy = nex.y + fang[j][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(xx &gt;= <span class="number">0</span> &amp;&amp; yy &gt;= <span class="number">0</span> &amp;&amp; xx &lt; n &amp;&amp; yy &lt; m &amp;&amp; a[xx][yy] != <span class="string">'O'</span>) <span class="keyword">continue</span>;</span><br><span class="line">flag = <span class="number">0</span>;<span class="comment">//不合法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; now.step + <span class="number">1</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> flag1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> xx = nex.x + fang[j][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> yy = nex.y + fang[j][<span class="number">1</span>];</span><br><span class="line"><span class="comment">//如果某个身子的部分碰到了Q，这个时候不要break，也要继续判断其他身子是否合法。</span></span><br><span class="line"><span class="keyword">if</span>(xx &gt;= <span class="number">0</span> &amp;&amp; yy &gt;= <span class="number">0</span> &amp;&amp; xx &lt; n &amp;&amp; yy &lt; m &amp;&amp; a[xx][yy] == <span class="string">'Q'</span>) flag1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(xx &gt;= <span class="number">0</span> &amp;&amp; yy &gt;= <span class="number">0</span> &amp;&amp; xx &lt; n &amp;&amp; yy &lt; m &amp;&amp; a[xx][yy] != <span class="string">'O'</span>) <span class="keyword">continue</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; now.step + <span class="number">1</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">vis[nex.x][nex.y] = <span class="number">1</span>;</span><br><span class="line">nex.step = now.step + <span class="number">1</span>;</span><br><span class="line">q.push(nex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sx, sy;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="string">'D'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到头</span></span><br><span class="line"><span class="keyword">if</span>(cnt == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sx = i;</span><br><span class="line">sy = j;</span><br><span class="line">cnt = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//记录身体的其他部分</span></span><br><span class="line">fang[cnt][<span class="number">0</span>] = i - sx;</span><br><span class="line">fang[cnt][<span class="number">1</span>] = j - sy;</span><br><span class="line">cnt ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bfs(sx, sy);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday8&quot;&gt;&lt;a href=&quot;#Rday8&quot; class=&quot;headerlink&quot; title=&quot;Rday8&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday8&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;BFS&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/24/Ook9eRKapGCy1H7.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday7</title>
    <link href="http://yoursite.com/2019/09/23/Rday7/"/>
    <id>http://yoursite.com/2019/09/23/Rday7/</id>
    <published>2019-09-22T16:00:00.000Z</published>
    <updated>2019-09-24T12:43:03.357Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday7"><a href="#Rday7" class="headerlink" title="Rday7"></a><center>Rday7</center></h1><p><center>单调栈<br><img src="https://i.loli.net/2019/09/24/UOwHZCzjYupB4xo.jpg" alt><br><code>待补</code><br><a id="more"></a></center></p><h2 id="Bad-Hair-Day"><a href="#Bad-Hair-Day" class="headerlink" title="Bad Hair Day"></a>Bad Hair Day</h2><p>Some of Farmer John’s N cows (1 ≤ N ≤ 80,000) are having a bad hair day! Since each cow is self-conscious about her messy hairstyle, FJ wants to count the number of other cows that can see the top of other cows’ heads.</p><p>Each cow i has a specified height hi (1 ≤ hi ≤ 1,000,000,000) and is standing in a line of cows all facing east (to the right in our diagrams). Therefore, cow i can see the tops of the heads of cows in front of her (namely cows i+1, i+2, and so on), for as long as these cows are strictly shorter than cow i.</p><p>Consider this example:</p><pre><code>=</code></pre><p>= =<br>= - = Cows facing right –&gt;<br>= = =<br>= - = = =<br>= = = = = =<br>1 2 3 4 5 6<br>Cow#1 can see the hairstyle of cows #2, 3, 4<br>Cow#2 can see no cow’s hairstyle<br>Cow#3 can see the hairstyle of cow #4<br>Cow#4 can see no cow’s hairstyle<br>Cow#5 can see the hairstyle of cow 6<br>Cow#6 can see no cows at all!</p><p>Let ci denote the number of cows whose hairstyle is visible from cow i; please compute the sum of c1 through cN.For this example, the desired is answer 3 + 0 + 1 + 0 + 1 + 0 = 5.</p><p><code>Input</code><br>Line 1: The number of cows, N.<br>Lines 2..N+1: Line i+1 contains a single integer that is the height of cow i.<br><code>Output</code><br>Line 1: A single integer that is the sum of c 1 through cN.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p></p><h2 id="Largest-Rectangle-in-a-Histogram"><a href="#Largest-Rectangle-in-a-Histogram" class="headerlink" title="Largest Rectangle in a Histogram"></a>Largest Rectangle in a Histogram</h2><p>A histogram is a polygon composed of a sequence of rectangles aligned at a common base line. The rectangles have equal widths but may have different heights. For example, the figure on the left shows the histogram that consists of rectangles with the heights 2, 1, 4, 5, 1, 3, 3, measured in units where 1 is the width of the rectangles:<br><img src="https://i.loli.net/2019/09/24/GzlrdbAyqe6Ws8R.gif" alt><br>Usually, histograms are used to represent discrete distributions, e.g., the frequencies of characters in texts. Note that the order of the rectangles, i.e., their heights, is important. Calculate the area of the largest rectangle in a histogram that is aligned at the common base line, too. The figure on the right shows the largest aligned rectangle for the depicted histogram.<br><code>Input</code><br>The input contains several test cases. Each test case describes a histogram and starts with an integer n, denoting the number of rectangles it is composed of. You may assume that 1&lt;=n&lt;=100000. Then follow n integers h1,…,hn, where 0&lt;=hi&lt;=1000000000. These numbers denote the heights of the rectangles of the histogram in left-to-right order. The width of each rectangle is 1. A zero follows the input for the last test case.<br><code>Output</code><br>For each test case output on a single line the area of the largest rectangle in the specified histogram. Remember that this rectangle must be aligned at the common base line.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">7</span> <span class="number">2</span> <span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">1000</span> <span class="number">1000</span> <span class="number">1000</span> <span class="number">1000</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">4000</span></span><br><span class="line">Hint</span><br><span class="line">Huge input, scanf is recommended.</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday7&quot;&gt;&lt;a href=&quot;#Rday7&quot; class=&quot;headerlink&quot; title=&quot;Rday7&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday7&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;单调栈&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/24/UOwHZCzjYupB4xo.jpg&quot; alt&gt;&lt;br&gt;&lt;code&gt;待补&lt;/code&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday6</title>
    <link href="http://yoursite.com/2019/09/22/Rday6/"/>
    <id>http://yoursite.com/2019/09/22/Rday6/</id>
    <published>2019-09-21T16:00:00.000Z</published>
    <updated>2019-09-24T12:38:13.532Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --><h1 id="Rday6"><a href="#Rday6" class="headerlink" title="Rday6"></a><center>Rday6</center></h1><p><center>小比赛<br><img src="https://i.loli.net/2019/09/24/cNGnrfLZgy6uk4d.jpg" alt><br><a id="more"></a></center></p><h2 id="Connecting-Vertices"><a href="#Connecting-Vertices" class="headerlink" title="Connecting Vertices"></a>Connecting Vertices</h2><p>There are n points marked on the plane. The points are situated in such a way that they form a regular polygon (marked points are its vertices, and they are numbered in counter-clockwise order). You can draw n - 1 segments, each connecting any two marked points, in such a way that all points have to be connected with each other (directly or indirectly).</p><p>But there are some restrictions. Firstly, some pairs of points cannot be connected directly and have to be connected undirectly. Secondly, the segments you draw must not intersect in any point apart from the marked points (that is, if any two segments intersect and their intersection is not a marked point, then the picture you have drawn is invalid).</p><p>How many ways are there to connect all vertices with n - 1 segments? Two ways are considered different iff there exist some pair of points such that a segment is drawn between them in the first way of connection, but it is not drawn between these points in the second one. Since the answer might be large, output it modulo 109 + 7.</p><p><code>Input</code><br>The first line contains one number n (3 ≤ n ≤ 500) — the number of marked points.</p><p>Then n lines follow, each containing n elements. ai, j (j-th element of line i) is equal to 1 iff you can connect points i and j directly (otherwise ai, j = 0). It is guaranteed that for any pair of points ai, j = aj, i, and for any point ai, i = 0.</p><p><code>Output</code><br>Print the number of ways to connect points modulo 109 + 7.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">12</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>:<br>题解：<br>区间dpdp<br>f[i][j]f[i][j]表示ii到jj有边且构成树的方案数<br>g[i][j]g[i][j]表示ii到jj无边且构成树的方案数<br>转移：枚举i,ji,j左右端点，kk是断点<br>f[i][j]+=∑j−1k=i(f[i][k]+g[i][k])∗(f[k+1][j]+g[k+1][j])f[i][j]+=∑k=ij−1(f[i][k]+g[i][k])∗(f[k+1][j]+g[k+1][j])<br>g[i][j]+=∑j−1k=i+1f[k][j]∗(f[i][k]+g[i][k])g[i][j]+=∑k=i+1j−1f[k][j]∗(f[i][k]+g[i][k])<br>初始化只要f[i][j]=1f[i][j]=1就可以了</p><p>code:<br></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">const int <span class="symbol">N</span>=<span class="number">1005</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">int n;</span><br><span class="line">ll a[<span class="symbol">N</span>][<span class="symbol">N</span>],f[<span class="symbol">N</span>][<span class="symbol">N</span>],g[<span class="symbol">N</span>][<span class="symbol">N</span>];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            scanf(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    for(int len=<span class="number">2</span>;len&lt;=n;len++)</span><br><span class="line">        for(int i=<span class="number">1</span>;i+len<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int j=i+len<span class="number">-1</span>;</span><br><span class="line">            for(int k=i;k&lt;j;k++)</span><br><span class="line">                if(a[i][j])</span><br><span class="line">                    f[i][j]=(f[i][j]+(f[i][k]+g[i][k])*(f[k+<span class="number">1</span>][j]+g[k+<span class="number">1</span>][j])<span class="comment">%mod)%mod;</span></span><br><span class="line">            for(int k=i+<span class="number">1</span>;k&lt;j;k++)</span><br><span class="line">                if(a[k][j])</span><br><span class="line">                    g[i][j]=(g[i][j]+f[k][j]*(f[i][k]+g[i][k])<span class="comment">%mod)%mod;</span></span><br><span class="line">        &#125;</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,(f[<span class="number">1</span>][n]+g[<span class="number">1</span>][n])<span class="comment">%mod);</span></span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Local-Extrema"><a href="#Local-Extrema" class="headerlink" title="Local Extrema"></a>Local Extrema</h2><p>You are given an array a. Some element of this array ai is a local minimum iff it is strictly less than both of its neighbours (that is, ai &lt; ai - 1 and ai &lt; ai + 1). Also the element can be called local maximum iff it is strictly greater than its neighbours (that is, ai &gt; ai - 1 and ai &gt; ai + 1). Since a1 and an have only one neighbour each, they are neither local minima nor local maxima.</p><p>An element is called a local extremum iff it is either local maximum or local minimum. Your task is to calculate the number of local extrema in the given array.</p><p><code>Input</code><br>The first line contains one integer n (1 ≤ n ≤ 1000) — the number of elements in array a.</p><p>The second line contains n integers a1, a2, …, an (1 ≤ ai ≤ 1000) — the elements of array a.</p><p><code>Output</code><br>Print the number of local extrema in the given array.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>:<br>签到题，按照题意写就行了<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i ++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; t - <span class="number">1</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(((a[i] &lt; a[i - <span class="number">1</span>]) &amp;&amp; (a[i] &lt; a[i + <span class="number">1</span>])) || ((a[i] &gt; a[i - <span class="number">1</span>]) &amp;&amp; (a[i] &gt; a[i + <span class="number">1</span>])))</span><br><span class="line">&#123;</span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Xor-MST"><a href="#Xor-MST" class="headerlink" title="Xor-MST"></a>Xor-MST</h2><p>You are given a complete undirected graph with n vertices. A number ai is assigned to each vertex, and the weight of an edge between vertices i and j is equal to ai xor aj.</p><p>Calculate the weight of the minimum spanning tree in this graph.</p><p><code>Input</code><br>The first line contains n (1 ≤ n ≤ 200000) — the number of vertices in the graph.</p><p>The second line contains n integers a1, a2, …, an (0 ≤ ai &lt; 230) — the numbers assigned to the vertices.</p><p><code>Output</code><br>Print one number — the weight of the minimum spanning tree in the graph.</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">8</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><p><code>题意</code>:<br>不妨从高到低贪心，我们把最高位按01分开两半分治，跨越两半的就在trie上贪心，这样做是O(nlog2n)O(n\log^2n)O(nlog 2n)的<br>dalao’s code:<br></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,st,ed) for (int i=st;i&lt;=ed;++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> drp(i,st,ed) for (int i=st;i&gt;=ed;--i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> copy(x,t) memcpy(x,t,sizeof(x))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">2147483647</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> rec[N*<span class="number">35</span>][<span class="number">2</span>],<span class="built_in">size</span>[N*<span class="number">35</span>],tot;</span><br><span class="line"><span class="keyword">int</span> a[N],s[N];</span><br><span class="line"></span><br><span class="line">std:: vector &lt;<span class="keyword">int</span>&gt; v1,v2;</span><br><span class="line"></span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">read</span>() &#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,v=<span class="number">1</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="built_in">for</span> (;ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>;v=(ch==<span class="string">'-'</span>)?(<span class="number">-1</span>):(v),ch=getchar());</span><br><span class="line"><span class="built_in">for</span> (;ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>,ch=getchar());</span><br><span class="line"><span class="built_in">return</span> x*v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> ins(<span class="keyword">int</span> v) &#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">drp(i,<span class="number">29</span>,<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">size</span>[x]++;</span><br><span class="line"><span class="keyword">int</span> tar=(v&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">if</span> (!rec[x][tar]) &#123;</span><br><span class="line">rec[x][tar]=++tot;</span><br><span class="line">rec[tot][<span class="number">0</span>]=rec[tot][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">size</span>[tot]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x=rec[x][tar];</span><br><span class="line">&#125; <span class="built_in">size</span>[x]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL ask(<span class="keyword">int</span> v) &#123;</span><br><span class="line">LL res=<span class="number">0</span>; <span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">drp(i,<span class="number">29</span>,<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> tar=(v&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">if</span> (<span class="built_in">size</span>[rec[x][tar]]) &#123;</span><br><span class="line">x=rec[x][tar];</span><br><span class="line">&#125; <span class="built_in">else</span> &#123;</span><br><span class="line">x=rec[x][!tar];</span><br><span class="line">res+=(<span class="number">1</span>LL&lt;&lt;i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> solve(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> p) &#123;</span><br><span class="line"><span class="built_in">if</span> (l&gt;=r||p&lt;<span class="number">0</span>) <span class="built_in">return</span> ;</span><br><span class="line">rep(i,l,r) <span class="built_in">if</span> ((a[s[i]]&gt;&gt;p)&amp;<span class="number">1</span>) &#123;</span><br><span class="line">v1.push_back(s[i]);</span><br><span class="line">&#125; <span class="built_in">else</span> v2.push_back(s[i]);</span><br><span class="line"><span class="built_in">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v1.<span class="built_in">size</span>();++i) s[l+i]=v1[i];</span><br><span class="line"><span class="keyword">int</span> mid=v1.<span class="built_in">size</span>()+l;</span><br><span class="line"><span class="built_in">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v2.<span class="built_in">size</span>();++i) s[mid+i]=v2[i];</span><br><span class="line">tot=<span class="number">1</span>; rec[<span class="number">1</span>][<span class="number">0</span>]=rec[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">rep(i,l,mid<span class="number">-1</span>) ins(a[s[i]]);</span><br><span class="line">LL mn=INF;</span><br><span class="line">rep(i,mid,r) mn=std:: <span class="built_in">min</span>(mn,ask(a[s[i]]));</span><br><span class="line"><span class="built_in">if</span> (v1.<span class="built_in">size</span>()&amp;&amp;v2.<span class="built_in">size</span>()) ans+=mn;</span><br><span class="line">v1.<span class="built_in">clear</span>(); v2.<span class="built_in">clear</span>();</span><br><span class="line">solve(l,mid<span class="number">-1</span>,p<span class="number">-1</span>); solve(mid,r,p<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">read</span>(),mx=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n) &#123;</span><br><span class="line">a[i]=<span class="built_in">read</span>();</span><br><span class="line">mx=std:: <span class="built_in">max</span>(mx,(<span class="keyword">int</span>)log2(a[i]));</span><br><span class="line">s[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">solve(<span class="number">1</span>,n,mx);</span><br><span class="line">printf(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line"><span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Buggy-Robot"><a href="#Buggy-Robot" class="headerlink" title="Buggy Robot"></a>Buggy Robot</h2><p>Ivan has a robot which is situated on an infinite grid. Initially the robot is standing in the starting cell (0, 0). The robot can process commands. There are four types of commands it can perform:</p><p>U — move from the cell (x, y) to (x, y + 1);<br>D — move from (x, y) to (x, y - 1);<br>L — move from (x, y) to (x - 1, y);<br>R — move from (x, y) to (x + 1, y).<br>Ivan entered a sequence of n commands, and the robot processed it. After this sequence the robot ended up in the starting cell (0, 0), but Ivan doubts that the sequence is such that after performing it correctly the robot ends up in the same cell. He thinks that some commands were ignored by robot. To acknowledge whether the robot is severely bugged, he needs to calculate the maximum possible number of commands that were performed correctly. Help Ivan to do the calculations!</p><p><code>Input</code><br>The first line contains one number n — the length of sequence of commands entered by Ivan (1 ≤ n ≤ 100).</p><p>The second line contains the sequence itself — a string consisting of n characters. Each character can be U, D, L or R.</p><p><code>Output</code><br>Print the maximum possible number of commands from the sequence the robot could perform to end up in the starting cell.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span></span><br><span class="line">LDUR</span><br><span class="line">Output</span><br><span class="line"><span class="number">4</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span></span><br><span class="line">RRRUU</span><br><span class="line">Output</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">6</span></span><br><span class="line">LLRRRR</span><br><span class="line">Output</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>最大能够执行的命令数量</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> t, maxnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>, ans3 = <span class="number">0</span>, ans4 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span>(c == <span class="string">'L'</span>) ans1 ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="string">'R'</span>) ans2 ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="string">'U'</span>) ans3 ++;</span><br><span class="line"><span class="keyword">else</span> ans4 ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> min1 = min(ans1, ans2);</span><br><span class="line"><span class="keyword">int</span> min2 = min(ans3, ans4);</span><br><span class="line">ans = (min1 + min2) * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(min1 != <span class="number">0</span> || min2 != <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="K-Dominant-Character"><a href="#K-Dominant-Character" class="headerlink" title="K-Dominant Character"></a>K-Dominant Character</h2><p>You are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.</p><p>You have to find minimum k such that there exists at least one k-dominant character.</p><p><code>Input</code><br>The first line contains string s consisting of lowercase Latin letters (1 ≤ |s| ≤ 100000).</p><p><code>Output</code><br>Print one number — the minimum value of k such that there exists at least one k-dominant character.<br></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line">abacaba</span><br><span class="line"><span class="keyword">Output</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Input</span><br><span class="line">zzzzz</span><br><span class="line"><span class="keyword">Output</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">Input</span><br><span class="line">abcde</span><br><span class="line"><span class="keyword">Output</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>给你一个长度为n字符串，求最小的长度m，使得字符串中所有长度为m的子字符串中均包含某一种字符。<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],n;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;x;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(!a[i]) vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;n;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">a[s[i-x]-<span class="string">'a'</span>]--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++) <span class="keyword">if</span>(!a[j]) vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">mp[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(check(m)) r=m<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l=m+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,r+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Maximum-Subsequence"><a href="#Maximum-Subsequence" class="headerlink" title="Maximum Subsequence"></a>Maximum Subsequence</h2><p>You are given an array a consisting of n integers, and additionally an integer m. You have to choose some sequence of indices b1, b2, …, bk (1 ≤ b1 &lt; b2 &lt; … &lt; bk ≤ n) in such a way that the value of is maximized. Chosen sequence can be empty.</p><p>Print the maximum possible value of .</p><p><code>Input</code><br>The first line contains two integers n and m (1 ≤ n ≤ 35, 1 ≤ m ≤ 109).</p><p>The second line contains n integers a1, a2, …, an (1 ≤ ai ≤ 109).</p><p><code>Output</code><br>Print the maximum possible value of .<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">2</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">3</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span> <span class="number">20</span></span><br><span class="line"><span class="number">199</span> <span class="number">41</span> <span class="number">299</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">19</span></span><br><span class="line">Note</span><br><span class="line">In the first example you can choose a sequence b = &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, so the sum  is equal to <span class="number">7</span> (and that's <span class="number">3</span> after taking it modulo <span class="number">4</span>).</span><br><span class="line"></span><br><span class="line">In the second example you can choose a sequence b = &#123;<span class="number">3</span>&#125;.</span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>给你一个大小为n的数组和一个数m，求从数组中挑出任意多个数（可以为零，不可以重复），计算出<br><img src="https://i.loli.net/2019/09/24/4HIPl9zdQGTV7ES.png" alt="20190924202510.png"><br>的最大值，其中k为选出的数的个数。</p><p>超大背包，将所有物品平均分成两部分，然后枚举所有状态。再枚举某一堆物品的所有值，二分从另一堆查找最优解即可。<br></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></span><br><span class="line">const <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line">const <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll <span class="string">q[maxn]</span>,p[maxn];</span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">ll n,<span class="keyword">m</span>;</span><br><span class="line">scanf(<span class="string">"%lld %lld"</span>,&amp;n,&amp;<span class="keyword">m</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">scanf(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">a[i]%=<span class="keyword">m</span>;</span><br><span class="line">&#125;</span><br><span class="line">ll <span class="keyword">x</span>=n/<span class="number">2</span>;</span><br><span class="line">ll N=<span class="number">1</span>&lt;&lt;<span class="keyword">x</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="keyword">x</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>) sum=(sum+a[j])%m;</span><br><span class="line">&#125;</span><br><span class="line">p[i]=sum;</span><br><span class="line">&#125;</span><br><span class="line">N=<span class="number">1</span>&lt;&lt;(n-<span class="keyword">x</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-<span class="keyword">x</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>) sum=(sum+a[j+<span class="keyword">x</span>])%m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">q[i]</span>=sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">sort</span>(<span class="keyword">q</span>,<span class="keyword">q</span>+N);</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>&lt;&lt;<span class="keyword">x</span>;i++)&#123;</span><br><span class="line">ll <span class="keyword">pos</span>=lower_bound(<span class="keyword">q</span>,<span class="keyword">q</span>+N,<span class="keyword">m</span>-<span class="number">1</span>-p[i])-<span class="keyword">q</span>;</span><br><span class="line">res=max(res,(p[i]+<span class="string">q[pos]</span>)%m);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">pos</span>) res=max(res,(p[i]+<span class="string">q[pos-1]</span>)%m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Alomost-Identity-Permutations"><a href="#Alomost-Identity-Permutations" class="headerlink" title="Alomost Identity Permutations"></a>Alomost Identity Permutations</h2><p>A permutation p of size n is an array such that every integer from 1 to n occurs exactly once in this array.</p><p>Let’s call a permutation an almost identity permutation iff there exist at least n - k indices i (1 ≤ i ≤ n) such that pi = i.</p><p>Your task is to count the number of almost identity permutations for given numbers n and k.</p><p><code>Input</code><br>The first line contains two integers n and k (4 ≤ n ≤ 1000, 1 ≤ k ≤ 4).</p><p><code>Output</code><br>Print the number of almost identity permutations for given n and k.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">input</span><br><span class="line"><span class="number">4</span> <span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">4</span> <span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">7</span></span><br><span class="line">input</span><br><span class="line"><span class="number">5</span> <span class="number">3</span></span><br><span class="line">output</span><br><span class="line"><span class="number">31</span></span><br><span class="line">input</span><br><span class="line"><span class="number">5</span> <span class="number">4</span></span><br><span class="line">output</span><br><span class="line"><span class="number">76</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>问n个数的全排列中，有多少排列满足∑pi=i的值大于等于n−k。<br>k≤4，枚举即可。</p><p>对于k=1 , res=1;<br>对于k=2 , res=C2n<br>对于k=3 , res=C3n∗2<br>对于k=4 , res=C4n∗9<br>上面每一行的意义在于：从n个数中挑出k个数，每种选法又分别多少种方案使得∑ki=1pi=1 的值为0。<br>code:<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></span><br><span class="line">const int <span class="attribute">maxn</span>=3000000+10;</span><br><span class="line">const int <span class="attribute">INF</span>=0x3f3f3f3f;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">ll n,k;</span><br><span class="line">scanf(<span class="string">"%lld %lld"</span>,&amp;n,&amp;k);</span><br><span class="line">ll <span class="attribute">cur</span>=n;</span><br><span class="line">ll <span class="attribute">res</span>=1;</span><br><span class="line">ll <span class="attribute">fac</span>=1;</span><br><span class="line"><span class="keyword">for</span>(ll <span class="attribute">i</span>=2;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="attribute">fac</span>=fac*i;</span><br><span class="line"><span class="attribute">cur</span>=cur*(n-i+1)/i;</span><br><span class="line"><span class="keyword">if</span>(<span class="attribute">i</span>==2) res+=cur;</span><br><span class="line"><span class="keyword">if</span>(<span class="attribute">i</span>==3) res+=cur<span class="number">*2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="attribute">i</span>==4) res+=cur<span class="number">*9</span>;</span><br><span class="line">&#125;</span><br><span class="line">printf(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Alyona-and-Spreadsheet"><a href="#Alyona-and-Spreadsheet" class="headerlink" title="Alyona and Spreadsheet"></a>Alyona and Spreadsheet</h2><p>During the lesson small girl Alyona works with one famous spreadsheet computer program and learns how to edit tables.</p><p>Now she has a table filled with integers. The table consists of n rows and m columns. By ai, j we will denote the integer located at the i-th row and the j-th column. We say that the table is sorted in non-decreasing order in the column j if ai, j ≤ ai + 1, j for all i from 1 to n - 1.</p><p>Teacher gave Alyona k tasks. For each of the tasks two integers l and r are given and Alyona has to answer the following question: if one keeps the rows from l to r inclusive and deletes all others, will the table be sorted in non-decreasing order in at least one column? Formally, does there exist such j that ai, j ≤ ai + 1, j for all i from l to r - 1 inclusive.</p><p>Alyona is too small to deal with this task and asks you to help!</p><p><code>Input</code><br>The first line of the input contains two positive integers n and m (1 ≤ n·m ≤ 100 000) — the number of rows and the number of columns in the table respectively. Note that your are given a constraint that bound the product of these two integers, i.e. the number of elements in the table.</p><p>Each of the following n lines contains m integers. The j-th integers in the i of these lines stands for ai, j (1 ≤ ai, j ≤ 109).</p><p>The next line of the input contains an integer k (1 ≤ k ≤ 100 000) — the number of task that teacher gave to Alyona.</p><p>The i-th of the next k lines contains two integers li and ri (1 ≤ li ≤ ri ≤ n).</p><p><code>Output</code><br>Print “Yes” to the i-th line of the output if the table consisting of rows from li to ri inclusive is sorted in non-decreasing order in at least one column. Otherwise, print “No”.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">input</span><br><span class="line"><span class="number">5</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="number">5</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> <span class="number">4</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br><span class="line">output</span><br><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">Note</span><br><span class="line">In the sample, the whole table is not sorted in any column. However, rows <span class="number">1</span>–<span class="number">3</span> are sorted in column <span class="number">1</span>, while rows <span class="number">4</span>–<span class="number">5</span> are sorted in column <span class="number">3.</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>从n∗m的矩阵中挑出从第l行到第r行，问在这(r−l+1)∗m的矩阵中是否存在某一列，使得这一列的元素按序号从小到大非递减。</p><p>前缀和即可。计算每一行某个元素前面的所有的元素能够非递增的最小的起点，由于n，m的值未定，所以必须用一维数组来保存。</p><p>在查找<code>[l,r]</code>行时，只需要看第r行的m个元素是否存在某个元素，他所在的非递减序列的起点小于等于l即可，由于不能用for循环查询，所以需要前缀和。<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll b[maxn];</span><br><span class="line">ll res[maxn];</span><br><span class="line">ll dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,m,q,l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">ll pos=<span class="number">1</span>;</span><br><span class="line">res[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[m*(i<span class="number">-1</span>)+j]&gt;=a[(i<span class="number">-2</span>)*m+j]) res[(i<span class="number">-1</span>)*m+j]=pos;<span class="comment">//非递减</span></span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//递减的话就是一个新的起点</span></span><br><span class="line">res[m*(i<span class="number">-1</span>)+j]=i;</span><br><span class="line">pos=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&gt;<span class="number">1</span>) res[m*(i<span class="number">-1</span>)+j]=min(res[m*(i<span class="number">-1</span>)+j],res[m*(i<span class="number">-1</span>)+j<span class="number">-1</span>]);\\计算前缀最小值</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;l,&amp;r);</span><br><span class="line"><span class="keyword">if</span>(res[r*m]&lt;=l) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Shell-Game"><a href="#Shell-Game" class="headerlink" title="Shell Game"></a>Shell Game</h2><p>Bomboslav likes to look out of the window in his room and watch lads outside playing famous shell game. The game is played by two persons: operator and player. Operator takes three similar opaque shells and places a ball beneath one of them. Then he shuffles the shells by swapping some pairs and the player has to guess the current position of the ball.</p><p>Bomboslav noticed that guys are not very inventive, so the operator always swaps the left shell with the middle one during odd moves (first, third, fifth, etc.) and always swaps the middle shell with the right one during even moves (second, fourth, etc.).</p><p>Let’s number shells from 0 to 2 from left to right. Thus the left shell is assigned number 0, the middle shell is 1 and the right shell is 2. Bomboslav has missed the moment when the ball was placed beneath the shell, but he knows that exactly n movements were made by the operator and the ball was under shell x at the end. Now he wonders, what was the initial position of the ball?</p><p><code>Input</code><br>The first line of the input contains an integer n (1 ≤ n ≤ 2·109) — the number of movements made by the operator.</p><p>The second line contains a single integer x (0 ≤ x ≤ 2) — the index of the shell where the ball was found after n movements.</p><p><code>Output</code><br>Print one integer from 0 to 2 — the index of the shell where the ball was initially placed.<br></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Note</span><br><span class="line">In <span class="keyword">the</span> <span class="keyword">first</span> sample, <span class="keyword">the</span> ball was initially placed beneath <span class="keyword">the</span> <span class="keyword">middle</span> <span class="built_in">shell</span> <span class="keyword">and</span> <span class="keyword">the</span> operator completed <span class="literal">four</span> movements.</span><br><span class="line"></span><br><span class="line">During <span class="keyword">the</span> <span class="keyword">first</span> move operator swapped <span class="keyword">the</span> left <span class="built_in">shell</span> <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">middle</span> <span class="built_in">shell</span>. The ball is now under <span class="keyword">the</span> left <span class="built_in">shell</span>.</span><br><span class="line">During <span class="keyword">the</span> <span class="keyword">second</span> move operator swapped <span class="keyword">the</span> <span class="keyword">middle</span> <span class="built_in">shell</span> <span class="keyword">and</span> <span class="keyword">the</span> <span class="literal">right</span> <span class="literal">one</span>. The ball is still under <span class="keyword">the</span> left <span class="built_in">shell</span>.</span><br><span class="line">During <span class="keyword">the</span> <span class="keyword">third</span> move operator swapped <span class="keyword">the</span> left <span class="built_in">shell</span> <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">middle</span> <span class="built_in">shell</span> again. The ball is again <span class="keyword">in</span> <span class="keyword">the</span> <span class="keyword">middle</span>.</span><br><span class="line">Finally, <span class="keyword">the</span> operators swapped <span class="keyword">the</span> <span class="keyword">middle</span> <span class="built_in">shell</span> <span class="keyword">and</span> <span class="keyword">the</span> <span class="literal">right</span> <span class="built_in">shell</span>. The ball is now beneath <span class="keyword">the</span> <span class="literal">right</span> <span class="built_in">shell</span>.</span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>三个杯子，初始某个杯子中有一个小球，经过n次下列操作后，小球在第x号杯子（0，1，2号）：</p><p>此次操作次数的序号为第奇数次，交换0号和1号杯子。<br>此次操作次数的序号为第偶数次，交换1号和2号杯子。<br>问初始小球在那个杯子。</p><p>模拟后发现，每6次操作一个循环，因此n mod 6后模拟计算即可。</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> res[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">n%=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) swap(a[<span class="number">0</span>],a[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span> swap(a[<span class="number">1</span>],a[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[m]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Hanoi-Factory"><a href="#Hanoi-Factory" class="headerlink" title="Hanoi Factory"></a>Hanoi Factory</h2><p>Of course you have heard the famous task about Hanoi Towers, but did you know that there is a special factory producing the rings for this wonderful game? Once upon a time, the ruler of the ancient Egypt ordered the workers of Hanoi Factory to create as high tower as possible. They were not ready to serve such a strange order so they had to create this new tower using already produced rings.</p><p>There are n rings in factory’s stock. The i-th ring has inner radius ai, outer radius bi and height hi. The goal is to select some subset of rings and arrange them such that the following conditions are satisfied:</p><p>Outer radiuses form a non-increasing sequence, i.e. one can put the j-th ring on the i-th ring only if bj ≤ bi.<br>Rings should not fall one into the the other. That means one can place ring j on the ring i only if bj &gt; ai.<br>The total height of all rings used should be maximum possible.<br><code>Input</code><br>The first line of the input contains a single integer n (1 ≤ n ≤ 100 000) — the number of rings in factory’s stock.</p><p>The i-th of the next n lines contains three integers ai, bi and hi (1 ≤ ai, bi, hi ≤ 109, bi &gt; ai) — inner radius, outer radius and the height of the i-th ring respectively.</p><p><code>Output</code><br>Print one integer — the maximum height of the tower that can be obtained.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">7</span> <span class="number">3</span></span><br><span class="line">output</span><br><span class="line"><span class="number">6</span></span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">4</span></span><br><span class="line">Note</span><br><span class="line">In the first sample, the optimal solution is to take all the rings and put them on each other in order <span class="number">3</span>, <span class="number">2</span>, <span class="number">1.</span></span><br><span class="line"></span><br><span class="line">In the second sample, one can put the ring <span class="number">3</span> on the ring <span class="number">4</span> and get the tower of height <span class="number">3</span>, or put the ring <span class="number">1</span> on the ring <span class="number">2</span> and get the tower of height <span class="number">4.</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>给你n个圆环，每个圆环有一个外径和内径，现在将这些圆环堆起来，满足上面的圆环外径bi≤bj且bi&gt;aj 其中aj,bj分别为下面一个圆环的内径和外径。问最高能将这些圆环堆多高。</p><p>一个简单的模拟题。。。（我居然写了一下午的区间更新查询线段树）</p><p>按照圆环外径从大到小排序，如果外径相同按照内径从大到小排序，然后按照顺序模拟即可，如果当前这个圆环放不到前面这个圆环，就继续往前面找，直到找到为止（这里可以用一个数组保存每个圆环找到的位置。<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll l,r,h;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">friend</span> <span class="keyword">operator</span>&lt;(node i,node j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i.r==j.r) <span class="keyword">return</span> i.l&gt;j.l;</span><br><span class="line">        <span class="keyword">return</span> i.r&gt;j.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line">ll res[maxn];</span><br><span class="line">ll pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;a[i].l,&amp;a[i].r,&amp;a[i].h);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    res[<span class="number">1</span>]=a[<span class="number">1</span>].h;</span><br><span class="line">    <span class="keyword">int</span> cur=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!(a[cur].l&lt;a[i].r &amp;&amp; a[i].r&lt;=a[cur].r) &amp;&amp; cur) cur=pre[cur];</span><br><span class="line">        res[i]=res[cur]+a[i].h;</span><br><span class="line">        pre[i]=cur;</span><br><span class="line">        cur=i;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans=max(ans,res[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Cloud-of-Hashtags"><a href="#Cloud-of-Hashtags" class="headerlink" title="Cloud of Hashtags"></a>Cloud of Hashtags</h2><p>Vasya is an administrator of a public page of organization “Mouse and keyboard” and his everyday duty is to publish news from the world of competitive programming. For each news he also creates a list of hashtags to make searching for a particular topic more comfortable. For the purpose of this problem we define hashtag as a string consisting of lowercase English letters and exactly one symbol ‘#’ located at the beginning of the string. The length of the hashtag is defined as the number of symbols in it without the symbol ‘#’.</p><p>The head administrator of the page told Vasya that hashtags should go in lexicographical order (take a look at the notes section for the definition).</p><p>Vasya is lazy so he doesn’t want to actually change the order of hashtags in already published news. Instead, he decided to delete some suffixes (consecutive characters at the end of the string) of some of the hashtags. He is allowed to delete any number of characters, even the whole string except for the symbol ‘#’. Vasya wants to pick such a way to delete suffixes that the total number of deleted symbols is minimum possible. If there are several optimal solutions, he is fine with any of them.</p><p><code>Input</code><br>The first line of the input contains a single integer n (1 ≤ n ≤ 500 000) — the number of hashtags being edited now.</p><p>Each of the next n lines contains exactly one hashtag of positive length.</p><p>It is guaranteed that the total length of all hashtags (i.e. the total length of the string except for characters ‘#’) won’t exceed 500 000.</p><p><code>Output</code><br>Print the resulting hashtags in any of the optimal solutions.<br></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="comment">#book</span></span><br><span class="line"><span class="comment">#bigtown</span></span><br><span class="line"><span class="comment">#big</span></span><br><span class="line">output</span><br><span class="line"><span class="comment">#b</span></span><br><span class="line"><span class="comment">#big</span></span><br><span class="line"><span class="comment">#big</span></span><br><span class="line">input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="comment">#book</span></span><br><span class="line"><span class="comment">#cool</span></span><br><span class="line"><span class="comment">#cold</span></span><br><span class="line">output</span><br><span class="line"><span class="comment">#book</span></span><br><span class="line"><span class="comment">#co</span></span><br><span class="line"><span class="comment">#cold</span></span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment">#car</span></span><br><span class="line"><span class="comment">#cart</span></span><br><span class="line"><span class="comment">#art</span></span><br><span class="line"><span class="comment">#at</span></span><br><span class="line">output</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#art</span></span><br><span class="line"><span class="comment">#at</span></span><br><span class="line">input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="comment">#apple</span></span><br><span class="line"><span class="comment">#apple</span></span><br><span class="line"><span class="comment">#fruit</span></span><br><span class="line">output</span><br><span class="line"><span class="comment">#apple</span></span><br><span class="line"><span class="comment">#apple</span></span><br><span class="line"><span class="comment">#fruit</span></span><br><span class="line">Note</span><br><span class="line">Word a1, a2, ..., am <span class="keyword">of</span> <span class="built_in">length</span> m <span class="keyword">is</span> lexicographically <span class="keyword">not</span> <span class="keyword">greater than</span> <span class="built_in">word</span> b1, b2, ..., bk <span class="keyword">of</span> <span class="built_in">length</span> k, <span class="keyword">if</span> one <span class="keyword">of</span> two conditions hold:</span><br><span class="line"></span><br><span class="line"><span class="keyword">at</span> <span class="keyword">first</span> position i, such <span class="keyword">that</span> ai ≠ bi, <span class="keyword">the</span> <span class="built_in">character</span> ai goes earlier <span class="keyword">in</span> <span class="keyword">the</span> alphabet than <span class="built_in">character</span> bi, i.e. a has smaller <span class="built_in">character</span> than b <span class="keyword">in</span> <span class="keyword">the</span> <span class="keyword">first</span> position <span class="keyword">where</span> they differ;</span><br><span class="line"><span class="keyword">if</span> there <span class="keyword">is</span> no such position i <span class="keyword">and</span> m ≤ k, i.e. <span class="keyword">the</span> <span class="keyword">first</span> <span class="built_in">word</span> <span class="keyword">is</span> a prefix <span class="keyword">of</span> <span class="keyword">the</span> <span class="keyword">second</span> <span class="keyword">or</span> two <span class="built_in">words</span> are <span class="keyword">equal</span>.</span><br><span class="line">The sequence <span class="keyword">of</span> <span class="built_in">words</span> <span class="keyword">is</span> said <span class="keyword">to</span> be sorted <span class="keyword">in</span> lexicographical order <span class="keyword">if</span> each <span class="built_in">word</span> (except <span class="keyword">the</span> <span class="keyword">last</span> one) <span class="keyword">is</span> lexicographically <span class="keyword">not</span> <span class="keyword">greater than</span> <span class="keyword">the</span> next <span class="built_in">word</span>.</span><br><span class="line"></span><br><span class="line">For <span class="keyword">the</span> <span class="built_in">words</span> consisting <span class="keyword">of</span> lowercase English letters <span class="keyword">the</span> lexicographical order coincides <span class="keyword">with</span> <span class="keyword">the</span> alphabet <span class="built_in">word</span> order <span class="keyword">in</span> <span class="keyword">the</span> dictionary.</span><br><span class="line"></span><br><span class="line">According <span class="keyword">to</span> <span class="keyword">the</span> <span class="keyword">above</span> definition, <span class="keyword">if</span> a hashtag consisting <span class="keyword">of</span> one <span class="built_in">character</span> '<span class="comment">#' it is lexicographically not greater than any other valid hashtag. That's why in the third sample we can't keep first two hashtags unchanged and shorten the other two.</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>有n个新闻标题，你要删除最少的字符，使得最后所有的标题按照输入顺序字典序升序排列。并输出删除后的新闻标题。</p><p>首先知道如果两个标题的字典序比较为降序，那么一定是要删除前面的那个标题，使得那个标题字典序变小。所以我们从后往前删除，能够保证每个标题删除的字符数量最少。</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="built_in">string</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> len[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">len[i]=a[i].length();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=min(len[i],len[i+<span class="number">1</span>]);j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i][j]&lt;a[i+<span class="number">1</span>][j]) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[i][j]&gt;a[i+<span class="number">1</span>][j])&#123;</span><br><span class="line">    a[i][j]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;a[i][j]!=<span class="string">'\0'</span>;j++)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Game-of-Credit-Cards"><a href="#Game-of-Credit-Cards" class="headerlink" title="Game of Credit Cards"></a>Game of Credit Cards</h2><p>After the fourth season Sherlock and Moriary have realized the whole foolishness of the battle between them and decided to continue their competitions in peaceful game of Credit Cards.</p><p>Rules of this game are simple: each player bring his favourite n-digit credit card. Then both players name the digits written on their cards one by one. If two digits are not equal, then the player, whose digit is smaller gets a flick (knock in the forehead usually made with a forefinger) from the other player. For example, if n = 3, Sherlock’s card is 123 and Moriarty’s card has number 321, first Sherlock names 1 and Moriarty names 3 so Sherlock gets a flick. Then they both digit 2 so no one gets a flick. Finally, Sherlock names 3, while Moriarty names 1 and gets a flick.</p><p>Of course, Sherlock will play honestly naming digits one by one in the order they are given, while Moriary, as a true villain, plans to cheat. He is going to name his digits in some other order (however, he is not going to change the overall number of occurences of each digit). For example, in case above Moriarty could name 1, 2, 3 and get no flicks at all, or he can name 2, 3 and 1 to give Sherlock two flicks.</p><p>Your goal is to find out the minimum possible number of flicks Moriarty will get (no one likes flicks) and the maximum possible number of flicks Sherlock can get from Moriarty. Note, that these two goals are different and the optimal result may be obtained by using different strategies.</p><p><code>Input</code><br>The first line of the input contains a single integer n (1 ≤ n ≤ 1000) — the number of digits in the cards Sherlock and Moriarty are going to use.</p><p>The second line contains n digits — Sherlock’s credit card number.</p><p>The third line contains n digits — Moriarty’s credit card number.</p><p><code>Output</code><br>First print the minimum possible number of flicks Moriarty will get. Then print the maximum possible number of flicks that Sherlock can get from Moriarty.<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">input</span><br><span class="line">3</span><br><span class="line">123</span><br><span class="line">321</span><br><span class="line">output</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">input</span><br><span class="line">2</span><br><span class="line">88</span><br><span class="line">00</span><br><span class="line">output</span><br><span class="line">2</span><br><span class="line">0</span><br><span class="line">Note</span><br><span class="line">First sample is elaborated <span class="keyword">in</span> the problem statement. <span class="keyword">In</span> the second sample, there is <span class="literal">no</span> way Moriarty can avoid getting two flicks.</span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>S 某,M某分别有一张序号长度为n的信用卡，他们定了一个规则：比赛分为n局，每局S某，M某从n个数字中分别不重复的取出一个数字，谁的数字小谁得一分，平局不算分。<br>问如果随机排列这些数字，S某可能的最高得分和M某可能的最低得分分别为多少。</p><p>模拟题，算最高分时只要从小到大让S某牌去压M某小于自己当前牌大小的牌即可。算最低分时，只要从大到小让M某去压S某大于等于自己当前牌大小的牌即可。</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,s,t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">a[s[i]-<span class="string">'0'</span>]++;</span><br><span class="line">b[t[i]-<span class="string">'0'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res1=<span class="number">0</span>,res2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">sum+=a[i];</span><br><span class="line">res1+=min(b[i],sum);</span><br><span class="line">sum-=min(b[i],sum);</span><br><span class="line">&#125;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">res2+=min(a[i],sum);</span><br><span class="line">sum-=min(a[i],sum);</span><br><span class="line">sum+=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,n-res1,res2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday6&quot;&gt;&lt;a href=&quot;#Rday6&quot; class=&quot;headerlink&quot; title=&quot;Rday6&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday6&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;小比赛&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/24/cNGnrfLZgy6uk4d.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday5</title>
    <link href="http://yoursite.com/2019/09/21/Rday5/"/>
    <id>http://yoursite.com/2019/09/21/Rday5/</id>
    <published>2019-09-20T16:00:00.000Z</published>
    <updated>2019-09-22T03:40:11.920Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday5"><a href="#Rday5" class="headerlink" title="Rday5"></a><center>Rday5</center></h1><p><center>练习<br><img src="https://i.loli.net/2019/09/22/s5J1YkhltrKGSfq.jpg" alt><br><a id="more"></a></center></p><h2 id="2048-Game"><a href="#2048-Game" class="headerlink" title="2048 Game"></a>2048 Game</h2><p>You are playing a variation of game 2048. Initially you have a multiset s of n integers. Every integer in this multiset is a power of two.</p><p>You may perform any number (possibly, zero) operations with this multiset.</p><p>During each operation you choose two equal integers from s, remove them from s and insert the number equal to their sum into s.</p><p>For example, if s={1,2,1,1,4,2,2} and you choose integers 2 and 2, then the multiset becomes {1,1,1,4,4,2}.</p><p>You win if the number 2048 belongs to your multiset. For example, if s={1024,512,512,4} you can win as follows: choose 512 and 512, your multiset turns into {1024,1024,4}. Then choose 1024 and 1024, your multiset turns into {2048,4} and you win.</p><p>You have to determine if you can win this game.</p><p>You have to answer q independent queries.</p><p><code>Input</code><br>The first line contains one integer q (1≤q≤100) – the number of queries.</p><p>The first line of each query contains one integer n (1≤n≤100) — the number of elements in multiset.</p><p>The second line of each query contains n integers s1,s2,…,sn (1≤si≤229) — the description of the multiset. It is guaranteed that all elements of the multiset are powers of two.</p><p><code>Output</code><br>For each query print YES if it is possible to obtain the number 2048 in your multiset, and NO otherwise.</p><p>You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line">6</span><br><span class="line">4</span><br><span class="line">1024 512 64 512</span><br><span class="line">1</span><br><span class="line">2048</span><br><span class="line">3</span><br><span class="line">64 512 2</span><br><span class="line">2</span><br><span class="line">4096 4</span><br><span class="line">7</span><br><span class="line">2048 2 2048 2048 2048 2048 2048</span><br><span class="line">2</span><br><span class="line">2048 4096</span><br><span class="line">Output</span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"></span><br><span class="line">Note</span><br><span class="line"><span class="keyword">In</span> the first query you can win as follows: choose 512 <span class="keyword">and</span> 512, <span class="keyword">and</span> s turns into &#123;1024,64,1024&#125;. Then choose 1024 <span class="keyword">and</span> 1024, <span class="keyword">and</span> s turns into &#123;2048,64&#125; <span class="keyword">and</span> you win.</span><br><span class="line"></span><br><span class="line"><span class="keyword">In</span> the second query s contains 2048 initially.</span><br></pre></td></tr></table></figure><p></p><p><code>题意</code><br>根据所给的数字集合，判断里面的数字相加是否是2048就可以了<br>可以先排一下序，因为都是2的幂数，所以可以放心的直接相加就行了</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">sort(a, a + n, cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; <span class="number">2048</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sum += a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum == <span class="number">2048</span> || a[i] == <span class="number">2048</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Perfect-Team"><a href="#Perfect-Team" class="headerlink" title="Perfect Team"></a>Perfect Team</h2><p>You may have already known that a standard ICPC team consists of exactly three members. The perfect team however has more restrictions. A student can have some specialization: coder or mathematician. She/he can have no specialization, but can’t have both at the same time.</p><p>So the team is considered perfect if it includes at least one coder, at least one mathematician and it consists of exactly three members.</p><p>You are a coach at a very large university and you know that c of your students are coders, m are mathematicians and x have no specialization.</p><p>What is the maximum number of full perfect teams you can distribute them into?</p><p>Note that some students can be left without a team and each student can be a part of no more than one team.</p><p>You are also asked to answer q independent queries.</p><p><code>Input</code><br>The first line contains a single integer q (1≤q≤104) — the number of queries.</p><p>Each of the next q lines contains three integers c, m and x (0≤c,m,x≤108) — the number of coders, mathematicians and students without any specialization in the university, respectively.</p><p>Note that the no student is both coder and mathematician at the same time.</p><p><code>Output</code><br>Print q integers — the i-th of them should be the answer to the i query in the order they are given in the input. The answer is the maximum number of full perfect teams you can distribute your students into.<br></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line">6</span><br><span class="line">1<span class="number"> 1 </span>1</span><br><span class="line">3<span class="number"> 6 </span>0</span><br><span class="line">0<span class="number"> 0 </span>0</span><br><span class="line">0<span class="number"> 1 </span>1</span><br><span class="line">10<span class="number"> 1 </span>10</span><br><span class="line">4<span class="number"> 4 </span>1</span><br><span class="line">Output</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">Note</span><br><span class="line">In the first example here are how teams are formed:</span><br><span class="line"></span><br><span class="line">the only team of<span class="number"> 1 </span>coder,<span class="number"> 1 </span>mathematician and<span class="number"> 1 </span>without specialization;</span><br><span class="line">all three teams consist of<span class="number"> 1 </span>coder and<span class="number"> 2 </span>mathematicians;</span><br><span class="line">no teams can be formed;</span><br><span class="line">no teams can be formed;</span><br><span class="line">one team consists of<span class="number"> 1 </span>coder,<span class="number"> 1 </span>mathematician and<span class="number"> 1 </span>without specialization, the rest aren't able to form any team;</span><br><span class="line">one team consists of<span class="number"> 1 </span>coder,<span class="number"> 1 </span>mathematician and<span class="number"> 1 </span>without specialization, one consists of<span class="number"> 2 </span>coders and<span class="number"> 1 </span>mathematician and one consists of<span class="number"> 1 </span>coder and<span class="number"> 2 </span>mathematicians.</span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>：<br>这道题重点是判断一下数学家和编译员的人数，如果为0，是肯定组不成的<br>不为0的话，要判断数学家和编译员的人数之中最小的值和最小能够组成完美队伍的值之间，取最小值</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c, m, x;<span class="comment">//c是程序员,m是数学家,x是无专业人</span></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; c &gt;&gt; m &gt;&gt; x;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(c == <span class="number">0</span> || m == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> minx = min(c, m);</span><br><span class="line"><span class="keyword">int</span> len = (c + m + x) / <span class="number">3</span>;</span><br><span class="line">ans = min(minx, len);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday5&quot;&gt;&lt;a href=&quot;#Rday5&quot; class=&quot;headerlink&quot; title=&quot;Rday5&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday5&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;练习&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/22/s5J1YkhltrKGSfq.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday4</title>
    <link href="http://yoursite.com/2019/09/20/Rday4/"/>
    <id>http://yoursite.com/2019/09/20/Rday4/</id>
    <published>2019-09-19T16:00:00.000Z</published>
    <updated>2019-09-22T03:42:59.965Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday4"><a href="#Rday4" class="headerlink" title="Rday4"></a><center>Rday4</center></h1><p><center>DFS<br><img src="https://i.loli.net/2019/09/22/SMbO7pZvnEswer4.jpg" alt><br><a id="more"></a></center></p><h2 id="Oil-Deposits"><a href="#Oil-Deposits" class="headerlink" title="Oil Deposits"></a>Oil Deposits</h2><p>应该可以算是入门题吧</p><p>The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or not the plot contains oil. A plot containing oil is called a pocket. If two pockets are adjacent, then they are part of the same oil deposit. Oil deposits can be quite large and may contain numerous pockets. Your job is to determine how many different oil deposits are contained in a grid.<br><code>Input</code><br>The input file contains one or more grids. Each grid begins with a line containing m and n, the number of rows and columns in the grid, separated by a single space. If m = 0 it signals the end of the input; otherwise 1 &lt;= m &lt;= 100 and 1 &lt;= n &lt;= 100. Following this are m lines of n characters each (not counting the end-of-line characters). Each character corresponds to one plot, and is either <code>*&#39;, representing the absence of oil, or</code>@’, representing an oil pocket.<br><code>Output</code><br>For each grid, output the number of distinct oil deposits. Two different pockets are part of the same oil deposit if they are adjacent horizontally, vertically, or diagonally. An oil deposit will not contain more than 100 pockets.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line">*</span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line">*@*@*</span><br><span class="line">**@**</span><br><span class="line">*@*@*</span><br><span class="line"><span class="number">1</span> <span class="number">8</span></span><br><span class="line">@@****@*</span><br><span class="line"><span class="number">5</span> <span class="number">5</span></span><br><span class="line">****@</span><br><span class="line">*@@*@</span><br><span class="line">*@**@</span><br><span class="line">@@@*@</span><br><span class="line">@@**@</span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>:<br>存图，套用一下DFS大概模板就行了</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">101</span>;</span><br><span class="line"><span class="keyword">char</span> a[mod][mod];</span><br><span class="line"><span class="keyword">int</span> vis[mod][mod];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">8</span>][<span class="number">2</span>] = &#123;</span><br><span class="line"><span class="number">-1</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">-1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">-1</span>, <span class="number">-1</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">-1</span>,</span><br><span class="line"><span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">1</span>, <span class="number">-1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">0</span> || y &lt; <span class="number">0</span> || x &gt;=n || y &gt;= m)</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"><span class="keyword">int</span> xx, yy;</span><br><span class="line"><span class="comment">//vis[x][y] = 1;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line">xx = x + d[i][<span class="number">0</span>];</span><br><span class="line">yy = y + d[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(xx &gt;= <span class="number">0</span> &amp;&amp; yy &gt;= <span class="number">0</span> &amp;&amp; xx &lt; n &amp;&amp; yy &lt; m &amp;&amp; a[xx][yy] != <span class="string">'*'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[xx][yy] = <span class="string">'*'</span>;</span><br><span class="line">DFS(xx, yy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sx, sy;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m) &amp;&amp; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//memset(vis, 0, sizeof(vis));</span></span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="string">'@'</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ans ++;</span><br><span class="line">DFS(i, j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday4&quot;&gt;&lt;a href=&quot;#Rday4&quot; class=&quot;headerlink&quot; title=&quot;Rday4&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday4&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;DFS&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/22/SMbO7pZvnEswer4.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday3</title>
    <link href="http://yoursite.com/2019/09/19/Rday3/"/>
    <id>http://yoursite.com/2019/09/19/Rday3/</id>
    <published>2019-09-19T12:28:13.900Z</published>
    <updated>2019-09-19T13:07:47.151Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday3"><a href="#Rday3" class="headerlink" title="Rday3"></a><center>Rday3</center></h1><p><center>贪心<br><img src="https://i.loli.net/2019/09/19/DPw7vCkIsJiFX4x.jpg" alt><br><a id="more"></a></center></p><h2 id="排队接水"><a href="#排队接水" class="headerlink" title="排队接水"></a>排队接水</h2><p><code>题目描述</code><br>有n个人在一个水龙头前排队接水，假如每个人接水的时间为Ti，请编程找出这n个人排队的一种顺序，使得n个人的平均等待时间最小。</p><p><code>输入格式</code><br>输入文件共两行，第一行为n；第二行分别表示第1个人到第n个人每人的接水时间T1，T2，…，Tn，每个数据之间有1个空格。</p><p><code>输出格式</code><br>输出文件有两行，第一行为一种排队顺序，即1到n的一种排列；第二行为这种排列方案下的平均等待时间(输出结果精确到小数点后两位)。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入输出样例</span><br><span class="line">输入</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">56</span> <span class="number">12</span> <span class="number">1</span> <span class="number">99</span> <span class="number">1000</span> <span class="number">234</span> <span class="number">33</span> <span class="number">55</span> <span class="number">99</span> <span class="number">812</span></span><br><span class="line">输出</span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">7</span> <span class="number">8</span> <span class="number">1</span> <span class="number">4</span> <span class="number">9</span> <span class="number">6</span> <span class="number">10</span> <span class="number">5</span></span><br><span class="line"><span class="number">291.90</span></span><br><span class="line"></span><br><span class="line">说明/提示</span><br><span class="line">n&lt;=<span class="number">1000</span></span><br><span class="line">ti&lt;=<span class="number">1e6</span>，不保证ti不重复</span><br><span class="line">当ti重复时，按照输入顺序即可（sort是可以的）</span><br></pre></td></tr></table></figure><p></p><p><code>题意</code>:<br>求最短的节水时间，看完题意分析可知，这题就是说单个人节水快的人先接水，这样后面人等的时间也就比较短了，这样最后平均下来的时间也会比较短<br>我见好多解法都是结构体解的，下面的解法利用一个巧妙地思维解，没有运用到结构体<br>因为数据是在1000之内的，所以可以乘上个1001，这样后面排序的时候序号不干扰排序<br>后面的结果%1001是序号，/1001是时间</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, x;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">        <span class="comment">//接水人所用的时间</span></span><br><span class="line">a[i] = x * <span class="number">1001</span> + i;</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="number">1</span>, a + t + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i] % <span class="number">1001</span>);</span><br><span class="line">        <span class="comment">//表示其他人需要等的时间</span></span><br><span class="line">sum += a[i] / <span class="number">1001</span> * (t - i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">double</span> ans = sum / t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday3&quot;&gt;&lt;a href=&quot;#Rday3&quot; class=&quot;headerlink&quot; title=&quot;Rday3&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday3&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;贪心&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/19/DPw7vCkIsJiFX4x.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday2</title>
    <link href="http://yoursite.com/2019/09/18/Rday2/"/>
    <id>http://yoursite.com/2019/09/18/Rday2/</id>
    <published>2019-09-18T10:50:05.421Z</published>
    <updated>2019-09-18T10:58:30.990Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday2"><a href="#Rday2" class="headerlink" title="Rday2"></a><center>Rday2</center></h1><p><center>二分<br><img src="https://i.loli.net/2019/09/18/EinVaYqpMs4rvxl.jpg" alt="timg.jpg"><br><a id="more"></a></center></p><h2 id="Strange-fuction"><a href="#Strange-fuction" class="headerlink" title="Strange fuction"></a>Strange fuction</h2><p>Now, here is a fuction:<br>F(x) = 6 <em>x^7+8</em>x^6+7<em>x^3+5</em>x^2-y*x (0 &lt;= x &lt;=100)<br>Can you find the minimum value when x is between 0 and 100.<br><code>Input</code><br>The first line of the input contains an integer T(1&lt;=T&lt;=100) which means the number of test cases. Then T lines follow, each line has only one real numbers Y.(0 &lt; Y &lt;1e10)<br><code>Output</code><br>Just the minimum value (accurate up to 4 decimal places),when x is between 0 and 100.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">-74.4291</span></span><br><span class="line"><span class="number">-178.8534</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>：<br></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这道题就是一个数学思维题</span><br><span class="line">相当于y是个常数求 F(<span class="keyword">x</span>) = <span class="number">6</span> * <span class="keyword">x</span>^<span class="number">7</span>+<span class="number">8</span>*<span class="keyword">x</span>^<span class="number">6</span>+<span class="number">7</span>*<span class="keyword">x</span>^<span class="number">3</span>+<span class="number">5</span>*<span class="keyword">x</span>^<span class="number">2</span>-y*<span class="keyword">x</span> (<span class="number">0</span> &lt;= <span class="keyword">x</span> &lt;=<span class="number">100</span>)这个函数的最小值，令F' = <span class="number">0</span>，得出<span class="keyword">x</span>，y的方程，</span><br><span class="line">用二分法解方程得<span class="keyword">x</span><span class="number">0</span>(易证得<span class="keyword">x</span><span class="number">0</span>&gt;=<span class="number">0</span> &amp;&amp; <span class="keyword">x</span><span class="number">0</span>&lt;=<span class="number">100</span>)，则F'(<span class="keyword">x</span><span class="number">0</span>) = <span class="number">0</span>,由F'' 在[<span class="number">0</span><span class="number">-100</span>]上恒大于<span class="number">0</span>，</span><br><span class="line">所以F'在[<span class="number">0</span><span class="number">-100</span>]上单增，所以F'(<span class="keyword">x</span>)&lt;<span class="number">0</span>(<span class="keyword">x</span>&lt;<span class="keyword">x</span><span class="number">0</span>),F'(<span class="keyword">x</span>)&gt;<span class="number">0</span>(<span class="keyword">x</span>&gt;<span class="keyword">x</span><span class="number">0</span>),所以F(<span class="keyword">x</span>)在<span class="keyword">x</span>=<span class="keyword">x</span><span class="number">0</span>处取得最小值，所以本题主要就是二分求解方程的<span class="keyword">x</span><span class="number">0</span>，然后直接带入<span class="keyword">x</span><span class="number">0</span>，y计算即可。</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> mod = <span class="number">1e-6</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">qiu_y</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">42</span> * <span class="built_in">pow</span>(x, <span class="number">6.0</span>) + <span class="number">48</span> * <span class="built_in">pow</span>(x, <span class="number">5.0</span>) + <span class="number">21</span> * <span class="built_in">pow</span>(x, <span class="number">2.0</span>) + <span class="number">10</span> * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">6</span> * <span class="built_in">pow</span>(x, <span class="number">7</span>) + <span class="number">8</span> * <span class="built_in">pow</span>(x, <span class="number">6</span>) + <span class="number">7</span> * <span class="built_in">pow</span>(x, <span class="number">3</span>) + <span class="number">5</span> * <span class="built_in">pow</span>(x, <span class="number">2</span>) - x * y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">double</span> l, r, mid, y, res;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; y;</span><br><span class="line">l = <span class="number">0.0</span>, r = <span class="number">100.0</span>;</span><br><span class="line"><span class="keyword">while</span>(r - l &gt; mod)</span><br><span class="line">&#123;</span><br><span class="line">mid = (r + l) / <span class="number">2</span>;</span><br><span class="line">res = qiu_y(mid);</span><br><span class="line"><span class="keyword">if</span>(res &lt; y)</span><br><span class="line">&#123;</span><br><span class="line">l = mid + <span class="number">1e-8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r = mid - <span class="number">1e-8</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%0.4lf\n"</span>,f(mid, y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday2&quot;&gt;&lt;a href=&quot;#Rday2&quot; class=&quot;headerlink&quot; title=&quot;Rday2&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday2&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;二分&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/18/EinVaYqpMs4rvxl.jpg&quot; alt=&quot;timg.jpg&quot;&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Rday1</title>
    <link href="http://yoursite.com/2019/09/17/Rday1.0/"/>
    <id>http://yoursite.com/2019/09/17/Rday1.0/</id>
    <published>2019-09-17T11:39:08.450Z</published>
    <updated>2019-09-17T11:48:07.470Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Rday1"><a href="#Rday1" class="headerlink" title="Rday1"></a><center>Rday1</center></h1><p><center>树的直径<br><img src="https://i.loli.net/2019/09/17/jJzVFLI5mY3kHfb.jpg" alt><br><a id="more"></a></center></p><h2 id="Roads-in-the-North"><a href="#Roads-in-the-North" class="headerlink" title="Roads in the North"></a>Roads in the North</h2><p>Building and maintaining roads among communities in the far North is an expensive business. With this in mind, the roads are build such that there is only one route from a village to a village that does not pass through some other village twice.<br>Given is an area in the far North comprising a number of villages and roads among them such that any village can be reached by road from any other village. Your job is to find the road distance between the two most remote villages in the area.</p><p>The area has up to 10,000 villages connected by road segments. The villages are numbered from 1.<br><code>Input</code><br>Input to the problem is a sequence of lines, each containing three positive integers: the number of a village, the number of a different village, and the length of the road segment connecting the villages in kilometers. All road segments are two-way.<br><code>Output</code><br>You are to output a single integer: the road distance between the two most remote villages in the area.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">6</span> <span class="number">3</span> <span class="number">9</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span> <span class="number">8</span></span><br><span class="line"><span class="number">6</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">22</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code>：<br>首先分析题意，表示的是一个村落到另一个村落的距离并且带有权值，自然可以想到并查集或者树的直径，再加上所求的是最远的两个村落之间的最大的费用，可以知道，这道题就是求树的直径<br>树的直径做法：跑两边BFS就可以了，其中BFS表示找到一端的端点<br>整体做法：先vector存图，然后用队列和pair来写BFS，这个和模板有点相识，运用相关思想可解</p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[maxx];</span><br><span class="line"><span class="keyword">int</span> dis[maxx];</span><br><span class="line"><span class="keyword">int</span> en;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;v[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span> dis);</span><br><span class="line">vis[x] = <span class="number">1</span>;</span><br><span class="line">q.push(x);</span><br><span class="line">en = <span class="number">0</span>;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> f = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(dis[f] &gt; ans)</span><br><span class="line">&#123;</span><br><span class="line">ans = dis[f];</span><br><span class="line">en = f;</span><br><span class="line">&#125;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v[f].size(); i ++)</span><br><span class="line">&#123;</span><br><span class="line">t = v[f][i];</span><br><span class="line"><span class="keyword">if</span>(vis[t.first] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">vis[t.first] = <span class="number">1</span>;</span><br><span class="line">dis[t.first] = t.second + dis[f];</span><br><span class="line">q.push(t.first);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> en;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v[i].size(); i ++) v[i].clear();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n, &amp;m, &amp;k)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">v[n].push_back(make_pair(m, k));</span><br><span class="line">v[m].push_back(make_pair(n, k));</span><br><span class="line">&#125;</span><br><span class="line">bfs(<span class="number">1</span>);</span><br><span class="line">bfs(en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Rday1&quot;&gt;&lt;a href=&quot;#Rday1&quot; class=&quot;headerlink&quot; title=&quot;Rday1&quot;&gt;&lt;/a&gt;&lt;center&gt;Rday1&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;树的直径&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/17/jJzVFLI5mY3kHfb.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="review" scheme="http://yoursite.com/categories/ACM/review/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>css基础</title>
    <link href="http://yoursite.com/2019/09/13/css/"/>
    <id>http://yoursite.com/2019/09/13/css/</id>
    <published>2019-09-12T16:00:00.000Z</published>
    <updated>2019-09-13T09:24:00.670Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="css基础"><a href="#css基础" class="headerlink" title="css基础"></a><center>css基础</center></h1><p><center>时隔这么久了，更新一下css的内容，哈哈<br><img src="https://i.loli.net/2019/09/13/LBEjduKyVqQvpTC.jpg" alt><br><a id="more"></a></center></p><h1 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h1><p>众所周知，网页设计是由html+css+js组成的<br>今天就了解一下css吧，也就是”网页化妆师”<br><a href="https://www.runoob.com/css/css-tutorial.html" target="_blank" rel="noopener">细致链接</a></p><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><h3 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>CSS 的选择器是 CSS最基础也是最重要的一个知识点。</span><br><span class="line"><span class="number">2.</span>选择器的权重：谁的权力大，就听谁的，同理，选择器权重也是一样，谁的权重值高，应用谁的</span><br><span class="line"><span class="number">3.</span>用途：用于准确的选中元素，并赋予样式</span><br></pre></td></tr></table></figure><h3 id="选择器分类"><a href="#选择器分类" class="headerlink" title="选择器分类"></a>选择器分类</h3><p>类（class）选择器：<br>通过标签的 class 属性 ，选择对应的元素 借助了一个类的概念，一处定义，可以多处使用</p><p>id选择器：<br>通过标签的 id 属性，选择 对应的元素 注意：id选择器唯一</p><p>群组选择器：<br>群组选择器是可以同时选择多个标签的选择器</p><p>层次选择器：<br>层次选择器分为，子代、后代、相邻和兄弟等四种选择器</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">子代选择器：&gt;    eg：.<span class="keyword">div</span>&gt;ul</span><br><span class="line">后代选择器：一个空格    eg：.<span class="keyword">div</span> ul</span><br><span class="line">相邻选择器：只能选择与当前选择的标签的下一个，不包括上一个，用+表示   eg：.top+.contont</span><br><span class="line">兄弟选择器：只能选择当前选择器的下面的同一层次的选择器，不包括前面的，用~表示    eg：.top~contont</span><br><span class="line">属性选择器：一般用于自定义   eg:有一个&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  使用的时候为 .<span class="keyword">div</span>[<span class="built_in">class</span>=<span class="string">"box"</span>]</span><br><span class="line">分组选择器：用,隔开就行了</span><br><span class="line">伪类选择器：首先是link,其次是hover,然后是visited,然后是actived</span><br></pre></td></tr></table></figure><h3 id="选择器优先级"><a href="#选择器优先级" class="headerlink" title="选择器优先级"></a>选择器优先级</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Id选择器 &gt; <span class="class"><span class="keyword">class</span> 选择器 &gt; 元素选择器</span></span><br><span class="line"></span><br><span class="line">​Id选择器：<span class="number">100</span> &gt; <span class="class"><span class="keyword">class</span> 选择器：10 &gt; 元素选择器：1</span></span><br></pre></td></tr></table></figure><h4 id="伪类选择器："><a href="#伪类选择器：" class="headerlink" title="伪类选择器："></a>伪类选择器：</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>link：未访问过的样式</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>visited：访问过后的样式</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>hover：划过的样式</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>active：激活的样式</span><br></pre></td></tr></table></figure><p><code>用法</code><br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line"><span class="undefined">            background: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="undefined">            background: skyblue;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        a&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-decoration</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line"><span class="undefined">            color: yellow;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="undefined">            color: green;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>&gt;</span>lalla<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h3 id="CSS字体-文本"><a href="#CSS字体-文本" class="headerlink" title="CSS字体/文本"></a>CSS字体/文本</h3><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">字体<span class="built_in">font</span>-family</span><br><span class="line">字体大小<span class="built_in">font</span>-<span class="built_in">size</span></span><br><span class="line">字体样式<span class="built_in">font</span>-style</span><br><span class="line">字体粗细<span class="built_in">font</span>-weight</span><br><span class="line">字体大小写<span class="built_in">font</span>-<span class="built_in">variant</span></span><br><span class="line">复合样式<span class="built_in">font</span></span><br></pre></td></tr></table></figure><h3 id="文本常用样式："><a href="#文本常用样式：" class="headerlink" title="文本常用样式："></a>文本常用样式：</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对齐方式<span class="built_in">text</span>-align</span><br><span class="line">首行缩进<span class="built_in">text</span>-indent</span><br><span class="line">文本线<span class="built_in">text</span>-decoration</span><br><span class="line">字距letter-spacing</span><br><span class="line">词距<span class="keyword">word</span>-spacing</span><br><span class="line">行高<span class="built_in">line</span>-<span class="built_in">height</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;css基础&quot;&gt;&lt;a href=&quot;#css基础&quot; class=&quot;headerlink&quot; title=&quot;css基础&quot;&gt;&lt;/a&gt;&lt;center&gt;css基础&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;时隔这么久了，更新一下css的内容，哈哈&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/09/13/LBEjduKyVqQvpTC.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
      <category term="css" scheme="http://yoursite.com/categories/html/css/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>集训中学到的方法</title>
    <link href="http://yoursite.com/2019/08/30/%E9%9B%86%E8%AE%AD%E4%B8%AD%E5%AD%A6%E5%88%B0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/30/集训中学到的方法/</id>
    <published>2019-08-29T16:00:00.000Z</published>
    <updated>2019-08-18T15:38:10.143Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --><h1 id="学习就该如贪心！！一直向前-！"><a href="#学习就该如贪心！！一直向前-！" class="headerlink" title="学习就该如贪心！！一直向前~！"></a><center>学习就该如贪心！！一直向前~！</center></h1><p><center>记录一些会用到并且好用的函数<br>或者是容易混淆的知识点<br><code>持续更新</code><br><a id="more"></a></center></p><p>有关acm中精度的问题：<br><a href="https://www.cnblogs.com/crazyacking/p/4668471.html" target="_blank" rel="noopener">https://www.cnblogs.com/crazyacking/p/4668471.html</a></p><h2 id="STL的定义方式："><a href="#STL的定义方式：" class="headerlink" title="STL的定义方式："></a>STL的定义方式：</h2><p>set/stack/queue/vector &lt;int/string&gt; 定义名称；<br><code>set</code>有自动排序的功能(从小到大)</p><blockquote><p>set里面用的是平衡二叉搜索树（也就是红黑树）维护</p></blockquote><p>string 字符串名称；<br>map&lt;string/int, int/string&gt; 名称；</p><h3 id="set的迭代器："><a href="#set的迭代器：" class="headerlink" title="set的迭代器："></a>set的迭代器：</h3><p>set<int>:: iterator it;<br>这个it是为指针用法<br>eg：<br>it = st.begin();<br>cout &lt;&lt; <em>it;<br>it ++;<br>for(; it != st.end(); it ++)<br>{<br>cout &lt;&lt; “ “ &lt;&lt; </em>it;<br>}</int></p><h3 id="map的迭代器："><a href="#map的迭代器：" class="headerlink" title="map的迭代器："></a>map的迭代器：</h3><p>map&lt;string, int&gt; :: iterator mp;<br>这个mp用法要用mp -&gt; first 或者mp -&gt; second 来表示<br>eg：<br>map&lt;string, int&gt; :: iterator it1;<br>map&lt;string, node&gt; :: iterator it2;<br>for(it2 = mp.begin(); it2 != mp.end(); it2 ++)<br>{<br>cout &lt;&lt; it2 -&gt; first &lt;&lt; endl;<br>for(it1 = mp[it2 -&gt; first].count.begin(); it1 != mp[it2 -&gt; first].count.end(); it1 ++)<br>{<br>cout &lt;&lt; “|—-“ &lt;&lt; it1 -&gt; first &lt;&lt; “(“ &lt;&lt; it1 -&gt; second &lt;&lt; “)” &lt;&lt; endl;<br>}<br>}</p><h3 id="嵌套map用法可以为"><a href="#嵌套map用法可以为" class="headerlink" title="嵌套map用法可以为"></a>嵌套map用法可以为</h3><p>struct node{<br>map&lt;string, int&gt; count;<br>};</p><p>map&lt;string, node&gt; mp;</p><p>用的时候为：mp[string].count[string] ++;或者一些操作</p><h2 id="二分查找–binary-search的用法"><a href="#二分查找–binary-search的用法" class="headerlink" title="二分查找–binary_search的用法"></a>二分查找–binary_search的用法</h2><p>头文件 <code>#include &lt;algorithm&gt;</code></p><p>使用方法：<br></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>.函数模板：binary_search(arr[],arr[]+size ,  indx)</span><br><span class="line"><span class="selector-tag">b</span>.参数说明：</span><br><span class="line">    arr[]： 数组首地址</span><br><span class="line">    size：数组元素个数</span><br><span class="line">    indx:需要查找的值</span><br><span class="line">c.函数功能：  在数组中以二分法检索的方式查找，若在数组(要求数组元素非递减)中查找到indx元素则真，若查找不到则返回值为假。</span><br></pre></td></tr></table></figure><p></p><h3 id="lower-bound"><a href="#lower-bound" class="headerlink" title="lower_bound"></a>lower_bound</h3><p>查找第一个大于或等于某个元素的位置<br>使用方法：<br></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">a</span>.函数模板：lower_bound(arr[],arr[]+size ,  indx):</span><br><span class="line">b.参数说明：</span><br><span class="line">    arr[]： 数组首地址</span><br><span class="line">    size：数组元素个数</span><br><span class="line">    indx:需要查找的值</span><br><span class="line">c.函数功能:函数lower_bound()在<span class="keyword">first</span>和<span class="keyword">last</span>中的前闭后开区间进行二分查找，返回大于或等于val的第一个元素位置(注意是地址)。如果所有元素都小于val，则返回<span class="keyword">last</span>的位置</span><br><span class="line">d.举例如下：</span><br><span class="line">　　一个数组<span class="built_in">number</span>序列为：<span class="number">4</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">30</span>,<span class="number">69</span>,<span class="number">70</span>,<span class="number">96</span>,<span class="number">100.</span>设要插入数字<span class="number">3</span>,<span class="number">9</span>,<span class="number">111.</span>pos为要插入的位置的下标，则</span><br><span class="line">　　<span class="comment">/*注意因为返回值是一个指针，所以减去数组的指针就是int变量了*/</span></span><br><span class="line">　　pos = lower_bound( <span class="built_in">number</span>, <span class="built_in">number</span> + <span class="number">8</span>, <span class="number">3</span>) - <span class="built_in">number</span>，pos = <span class="number">0.</span>即<span class="built_in">number</span>数组的下标为<span class="number">0</span>的位置。</span><br><span class="line">　　pos = lower_bound( <span class="built_in">number</span>, <span class="built_in">number</span> + <span class="number">8</span>, <span class="number">9</span>) - <span class="built_in">number</span>， pos = <span class="number">1</span>，即<span class="built_in">number</span>数组的下标为<span class="number">1</span>的位置（即<span class="number">10</span>所在的位置）。</span><br><span class="line">　　pos = lower_bound( <span class="built_in">number</span>, <span class="built_in">number</span> + <span class="number">8</span>, <span class="number">111</span>) - <span class="built_in">number</span>， pos = <span class="number">8</span>，即<span class="built_in">number</span>数组的下标为<span class="number">8</span>的位置（但下标上限为<span class="number">7</span>，所以返回最后一个元素的下一个元素）。</span><br><span class="line">e.注意：函数lower_bound()在<span class="keyword">first</span>和<span class="keyword">last</span>中的前闭后开区间进行二分查找，返回大于或等于val的第一个元素位置。如果所有元素都小于val，则返回<span class="keyword">last</span>的位置，且<span class="keyword">last</span>的位置是越界的！</span><br></pre></td></tr></table></figure><p></p><h3 id="upper-bound-查找第一个大于某个位置的元素的位置"><a href="#upper-bound-查找第一个大于某个位置的元素的位置" class="headerlink" title="upper_bound: 查找第一个大于某个位置的元素的位置"></a>upper_bound: 查找第一个大于某个位置的元素的位置</h3><p>使用方法：<br></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>.函数模板：<span class="selector-tag">upper_bound</span>(arr[],arr[]+size ,  indx):</span><br><span class="line"><span class="selector-tag">b</span>.参数说明：</span><br><span class="line">    <span class="selector-tag">arr</span><span class="selector-attr">[]</span>： 数组首地址</span><br><span class="line">    <span class="selector-tag">size</span>：数组元素个数</span><br><span class="line">    <span class="selector-tag">indx</span>:需要查找的值</span><br><span class="line"><span class="selector-tag">c</span>.函数功能：函数<span class="selector-tag">upper_bound</span>()返回的在前闭后开区间查找的关键字的上界，返回大于<span class="selector-tag">val</span>的第一个元素位置</span><br><span class="line">　　例如：一个数组<span class="selector-tag">number</span>序列<span class="selector-tag">1</span>,<span class="selector-tag">2</span>,<span class="selector-tag">2</span>,<span class="selector-tag">4</span><span class="selector-class">.upper_bound</span>(<span class="number">2</span>)后，返回的位置是<span class="selector-tag">3</span>（下标）也就是<span class="selector-tag">4</span>所在的位置,同样，如果插入元素大于数组中全部元素，返回的是<span class="selector-tag">last</span>。(注意：数组下标越界)</span><br><span class="line">　　返回查找元素的最后一个可安插位置，也就是“元素值&gt;查找值”的第一个元素的位置 。</span><br></pre></td></tr></table></figure><p></p><h2 id="unique函数"><a href="#unique函数" class="headerlink" title="unique函数"></a>unique函数</h2><p>类属性算法unique的作用是从输入序列中“删除”所有相邻的重复元素。</p><p>该算法删除相邻的重复元素，然后重新排列输入范围内的元素，并且返回一个迭代器（容器的长度没变，只是元素顺序改变了），表示无重复的值范围得结束。<br></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sort words alphabetically so we can find the duplicates</span></span><br><span class="line"><span class="built_in">sort</span>(words.<span class="built_in">begin</span>(), words.<span class="keyword">end</span>());</span><br><span class="line"> <span class="built_in">vector</span>&lt;<span class="keyword">string</span>&gt;::iterator end_unique =  <span class="built_in">unique</span>(words.<span class="built_in">begin</span>(), words.<span class="keyword">end</span>());</span><br><span class="line"> words.erase(end_unique, words.end());</span><br></pre></td></tr></table></figure><p></p><p>在STL中unique函数是一个去重函数， unique的功能是去除相邻的重复元素(只保留一个),其实它并不真正把重复的元素删除，是把重复的元素移到后面去了，然后依然保存到了原数组中，然后 返回去重后最后一个元素的地址，因为unique去除的是相邻的重复元素，所以一般用之前都会要排一下序。<br>若调用sort后，vector的对象的元素按次序排列如下：<br>sort jumps over quick red red slow the the turtle<br><img src="https://i.loli.net/2019/08/12/24TpqaLng3NoZWU.png" alt="下载.png"><br>注意，words的大小并没有改变，依然保存着10个元素；只是这些元素的顺序改变了。调用unique“删除”了相邻的重复值。给“删除”加上引号是因为unique实际上并没有删除任何元素，而是将无重复的元素复制到序列的前段，从而覆盖相邻的重复元素。unique返回的迭代器指向超出无重复的元素范围末端的下一个位置。</p><p>注意：算法不直接修改容器的大小。如果需要添加或删除元素，则必须使用容器操作。<br>Eg:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span></span></span><br><span class="line"> <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;"Illustrating the generic unique algorithm."&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">11</span>;</span><br><span class="line">    <span class="keyword">int</span> array1[N]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector1;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;++i)</span><br><span class="line">        vector1.push_back(array1[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator new_end;</span><br><span class="line">    new_end=unique(vector1.begin(),vector1.end());    <span class="comment">//"删除"相邻的重复元素</span></span><br><span class="line">    assert(vector1.size()==N);</span><br><span class="line"></span><br><span class="line">    vector1.erase(new_end,vector1.end());  <span class="comment">//删除（真正的删除）重复的元素</span></span><br><span class="line">    copy(vector1.begin(),vector1.end(),ostream_iterator&lt;<span class="keyword">int</span>&gt;(<span class="built_in">cout</span>,<span class="string">" "</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="gcd的前缀后缀维护"><a href="#gcd的前缀后缀维护" class="headerlink" title="gcd的前缀后缀维护"></a>gcd的前缀后缀维护</h2><p>说到gcd,就不得不提一下<br>C++11中子代有内置gcd函数,用法是 __gcd(a, b);</p><p>题目链接：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=6025" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=6025</a></p><p><code>持续更新</code><br>PS:暂时不会讲解，先看代码吧，等以后理解透了在讲解<br>code:<br></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"><span class="keyword">int</span> gcd(<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)&#123;</span><br><span class="line"><span class="keyword">int</span> t=a;</span><br><span class="line">a=b;b=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000005</span>],<span class="string">q[1000005]</span>,h[<span class="number">1000005</span>];</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">memset(<span class="keyword">q</span>,<span class="number">0</span>,sizeof(<span class="keyword">q</span>));</span><br><span class="line">memset(h,<span class="number">0</span>,sizeof(h));</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">q[0]</span>=a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n-<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="string">q[i]</span>=gcd(<span class="string">q[i-1]</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">h[n-<span class="number">1</span>]=a[n-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(i=n-<span class="number">2</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">h[i]=gcd(h[i+<span class="number">1</span>],a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=max(<span class="string">q[n-2]</span>,h[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">ans=max(ans,gcd(<span class="string">q[i-1]</span>,h[i+<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="C-中auto的用法"><a href="#C-中auto的用法" class="headerlink" title="C++中auto的用法"></a>C++中auto的用法</h2><h3 id="C-98-auto"><a href="#C-98-auto" class="headerlink" title="C++98 auto"></a>C++98 auto</h3><p>早在C++98标准中就存在了auto关键字，那时的auto用于声明变量为自动变量，自动变量意为拥有自动的生命期，这是多余的，因为就算不使用auto声明，变量依旧拥有自动的生命期：<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a =<span class="number">10</span> ;  <span class="comment">//拥有自动生命期</span></span><br><span class="line"><span class="keyword">auto</span> <span class="keyword">int</span> b = <span class="number">20</span> ;<span class="comment">//拥有自动生命期</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> c = <span class="number">30</span> ;<span class="comment">//延长了生命期</span></span><br></pre></td></tr></table></figure><p></p><p>C++98中的auto多余且极少使用，C++11已经删除了这一用法，取而代之的是全新的auto：变量的自动类型推断。</p><h3 id="C-11-auto"><a href="#C-11-auto" class="headerlink" title="C++11 auto"></a>C++11 auto</h3><p>auto可以在声明变量的时候根据变量初始值的类型自动为此变量选择匹配的类型，类似的关键字还有decltype。举个例子：<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">auto</span> au_a = a;<span class="comment">//自动类型推断，au_a为int类型</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">typeid</span>(au_a).name() &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p></p><p>typeid运算符可以输出变量的类型。程序的运行结果输出了<br>int<br>这种用法就类似于C#中的var关键字。auto的自动类型推断发生在编译期，所以使用auto并不会造成程序运行时效率的降低。而是否会造成编译期的时间消耗，我认为是不会的，在未使用auto时，编译器也需要得知右操作数的类型，再与左操作数的类型进行比较，检查是否可以发生相应的转化，是否需要进行隐式类型转换。</p><h3 id="为什么用auto"><a href="#为什么用auto" class="headerlink" title="为什么用auto:"></a>为什么用auto:</h3><p>用于代替冗长复杂、变量使用范围专一的变量声明。<br>想象一下在没有auto的时候，我们操作标准库时经常需要这样：<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vs;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;::iterator i = vs.begin(); i != vs.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>使用auto 可以简化代码:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vs;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = vs.begin(); i != vs.end(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//..</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="pair的用法"><a href="#pair的用法" class="headerlink" title="pair的用法"></a>pair的用法</h2><h3 id="pair的应用"><a href="#pair的应用" class="headerlink" title="pair的应用"></a>pair的应用</h3><p>pair是将2个数据组合成一组数据，当需要这样的需求时就可以使用pair，如stl中的map就是将key和value放在一起来保存。<br>另一个应用是，当一个函数需要返回2个数据的时候，可以选择pair。 pair的实现是一个结构体，主要的两个成员变量是first second 因为是使用struct不是class，所以可以直接使用pair的成员变量。<br></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;T1, T2&gt; p1;            //创建一个空的pair对象（使用默认构造），它的两个元素分别是T1和T2类型，采用值初始化。</span><br><span class="line">pair&lt;T1, T2&gt; p1(v1, v2);    //创建一个pair对象，它的两个元素分别是T1和T2类型，其中first成员初始化为v1，second成员初始化为v2。</span><br><span class="line">make_pair(v1, v2);          // 以v1和v2的值创建一个新的pair对象，其元素类型分别是v1和v2的类型。</span><br><span class="line">p1 &lt; p2;                    // 两个pair对象间的小于运算，其定义遵循字典次序：如 p1.first &lt; p2.first 或者 !(p2.first &lt; p1.first) &amp;&amp; (p1.second &lt; p2.second) 则返回true。</span><br><span class="line">p1 == p2；                  // 如果两个对象的first和second依次相等，则这两个对象相等；该运算使用元素的==操作符。</span><br><span class="line">p1.first;                   // 返回对象p1中名为first的公有数据成员</span><br><span class="line">p1.second;                 // 返回对象p1中名为second的公有数据成员</span><br></pre></td></tr></table></figure><p></p><h3 id="pair的创建和初始化"><a href="#pair的创建和初始化" class="headerlink" title="pair的创建和初始化"></a>pair的创建和初始化</h3><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pair</span>包含两个数值，与容器一样，<span class="built_in">pair</span>也是一种模板类型。但是又与之前介绍的容器不同；</span><br><span class="line">在创建<span class="built_in">pair</span>对象时，必须提供两个类型名，两个对应的类型名的类型不必相同</span><br><span class="line"></span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; anon;        <span class="comment">// 创建一个空对象anon，两个元素类型都是string</span></span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, int&gt; word_count;     <span class="comment">// 创建一个空对象 word_count, 两个元素类型分别是string和int类型</span></span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, vector&lt;int&gt; &gt; line;  <span class="comment">// 创建一个空对象line，两个元素类型分别是string和vector类型</span></span><br><span class="line"></span><br><span class="line">当然也可以在定义时进行成员初始化：</span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; author(<span class="string">"James"</span>,<span class="string">"Joy"</span>);    <span class="comment">// 创建一个author对象，两个元素类型分别为string类型，并默认初始值为James和Joy。</span></span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, int&gt; name_age(<span class="string">"Tom"</span>, <span class="string">"18"</span>);</span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="built_in">string</span>, int&gt; name_age2(name_age);    <span class="comment">// 拷贝构造初始化</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pair类型的使用相当的繁琐，如果定义多个相同的pair类型对象，可以使用<span class="keyword">typedef</span>简化声明：</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt; Author;</span><br><span class="line"><span class="function">Author <span class="title">proust</span><span class="params">(<span class="string">"March"</span>,<span class="string">"Proust"</span>)</span></span>;</span><br><span class="line"><span class="function">Author <span class="title">Joy</span><span class="params">(<span class="string">"James"</span>,<span class="string">"Joy"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">变量间赋值：</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">double</span>&gt; p1(<span class="number">1</span>, <span class="number">1.2</span>);</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">double</span>&gt; p2 = p1;     <span class="comment">//operator =</span></span><br></pre></td></tr></table></figure><h2 id="pair对象的操作"><a href="#pair对象的操作" class="headerlink" title="pair对象的操作"></a>pair对象的操作</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;<span class="keyword">int</span> ,<span class="keyword">double</span>&gt; p1;</span><br><span class="line">p1.first = <span class="number">1</span>;</span><br><span class="line">p1.second = <span class="number">2.5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;p1.first&lt;&lt;<span class="string">' '</span>&lt;&lt;p1.second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果：1 2.5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> firstBook;</span><br><span class="line"><span class="keyword">if</span>(author.first==<span class="string">"James"</span> &amp;&amp; author.second==<span class="string">"Joy"</span>)</span><br><span class="line">    firstBook=<span class="string">"Stephen Hero"</span>;</span><br></pre></td></tr></table></figure><h2 id="生成新的pair对象"><a href="#生成新的pair对象" class="headerlink" title="生成新的pair对象"></a>生成新的pair对象</h2><p>还可以利用make_pair创建新的pair对象：<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">double</span>&gt; p1;</span><br><span class="line">p1 = make_pair(<span class="number">1</span>, <span class="number">1.2</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p1.first &lt;&lt; p1.second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output: 1 1.2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">string</span> m = <span class="string">"James"</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; newone;</span><br><span class="line"></span><br><span class="line">newone = make_pair(a, m);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; newone.first &lt;&lt; newone.second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output: 8 James</span></span><br></pre></td></tr></table></figure><p></p><h2 id="通过tie获取pair元素值"><a href="#通过tie获取pair元素值" class="headerlink" title="通过tie获取pair元素值"></a>通过tie获取pair元素值</h2><p>在某些清况函数会以pair对象作为返回值时，可以直接通过std::tie进行接收。比如：<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::pair&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="keyword">int</span>&gt; getPreson() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">std</span>::make_pair(<span class="string">"Sven"</span>, <span class="number">25</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> ages;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::tie(name, ages) = getPreson();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"name: "</span> &lt;&lt; name &lt;&lt; <span class="string">", ages: "</span> &lt;&lt; ages &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="有关字符串的一些用法"><a href="#有关字符串的一些用法" class="headerlink" title="有关字符串的一些用法"></a>有关字符串的一些用法</h2><p>1.isalpha(c) ~判断是否为英文字符<br>2.tolower(c) ~将字符转换成小写<br>3.字符串输入sstream<br>4.将字符串分割成单词：<br>stringstream temp(str); //分割成一个个单词<br>5.将字符串插入进set中，自动排序~</p><h2 id="string的用法"><a href="#string的用法" class="headerlink" title="string的用法"></a>string的用法</h2><p>提到字符串就必须提一句string,这个是真的好用！！！！</p><p>简洁明了string 的用法和 int 基本上没啥差别，也就是定义的类型不同，string功能多一点罢了(string毕竟是字符串嘛)</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义:"></a>定义:</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">string <span class="keyword">str</span>;</span><br><span class="line">string <span class="keyword">str</span>[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">str</span> = <span class="string">"aaa"</span>;<span class="comment">//直接赋值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">cin &gt;&gt; <span class="keyword">str</span>[i];<span class="comment">//输入赋值</span></span><br></pre></td></tr></table></figure><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><p>说起来比较就更令人发指了！！！<br>不知道比起来某个char方便多少呢。<br></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">str1</span> = <span class="string">"abc"</span><span class="comment">;</span></span><br><span class="line"><span class="attribute">str2</span> = <span class="string">"abb"</span><span class="comment">;</span></span><br><span class="line">if(str1 &gt; str2) puts(<span class="string">"1"</span>)<span class="comment">;</span></span><br><span class="line">//输出结果 <span class="number">1</span></span><br></pre></td></tr></table></figure><p></p><p>没错，你没看错！！就是直接比较大小。。<br><code>持续更新string 功能</code></p><h2 id="stringstream的用法："><a href="#stringstream的用法：" class="headerlink" title="stringstream的用法："></a>stringstream的用法：</h2><p>stringstream是 C++ 提供的另一个字串型的串流(stream)物件，和之前学过的iostream、fstream有类似的操作方式。要使用stringstream， 必须先加入这一行：</p><p>#include<sstream><br>stringstream主要是用在將一个字符串分割，可以先用.clear( )以及.str( )將指定字串设定成一开始的內容，再用&gt;&gt;把个別的资料输出。</sstream></p><p>Eg:<br>題目：输入的第一行有一个数字 N 代表接下來有 N 行资料，每一行资料里有不固定个数的整数(最多20个，每行最大200个字元)，编程將每行的总和打印出來。<br>输入：<br>3<br>1 2 3<br>20 17 23 54 77 60<br>111 222 333 444 555 666 777 888 999<br>输出：<br>6<br>251<br>4995<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">stringstream</span> ss;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);  <span class="comment">//读取换行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        getline(<span class="built_in">cin</span>, s);</span><br><span class="line">        ss.clear();</span><br><span class="line">        ss.str(s);</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            ss &gt;&gt; a;</span><br><span class="line">            <span class="keyword">if</span>(ss.fail())</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            sum += a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>使用stringstream简化类型转换<br>C++标准库中的<sstream>提供了比ANSI C的&lt;stdio.h&gt;更高级的一些功能，即单纯性、类型安全和可扩展性。接下来，我将举例说明怎样使用这些库来实现安全和自动的类型转换。<br>Eg:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span>(s, <span class="string">"%d"</span>, n);</span><br><span class="line">    <span class="comment">//s中的内容为“10000”</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//到目前为止看起来还不错。但是，对上面代码的一个微小的改变就会使程序发生错误</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">    <span class="built_in">sprintf</span>(s, <span class="string">"%f"</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//错误的格式化符</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></sstream></p><p><code>详细学习链接</code>：<br><a href="http://blog.csdn.net/zhang_xueping/article/details/47846807" target="_blank" rel="noopener">http://blog.csdn.net/zhang_xueping/article/details/47846807</a><br><a href="http://blog.csdn.net/u014097230/article/details/52089530" target="_blank" rel="noopener">http://blog.csdn.net/u014097230/article/details/52089530</a></p><h2 id="优先队列—自动排序！！！"><a href="#优先队列—自动排序！！！" class="headerlink" title="优先队列—自动排序！！！"></a>优先队列—自动排序！！！</h2><p>说道优先队列就必须提一句<br>优先队列别有back()操作，并且第一个元素不是用front()而是top()，，，front()是队列的<br>优先队列是一种特殊的队列，在学习堆排序的时候就有所了解。<br><a href="https://blog.csdn.net/c20182030/article/details/52727101" target="_blank" rel="noopener">堆排序</a></p><h2 id="奇偶剪枝"><a href="#奇偶剪枝" class="headerlink" title="奇偶剪枝"></a>奇偶剪枝</h2><p><a href="https://www.cnblogs.com/wkfvawl/p/9337156.html" target="_blank" rel="noopener">点这里</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;学习就该如贪心！！一直向前-！&quot;&gt;&lt;a href=&quot;#学习就该如贪心！！一直向前-！&quot; class=&quot;headerlink&quot; title=&quot;学习就该如贪心！！一直向前~！&quot;&gt;&lt;/a&gt;&lt;center&gt;学习就该如贪心！！一直向前~！&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;记录一些会用到并且好用的函数&lt;br&gt;或者是容易混淆的知识点&lt;br&gt;&lt;code&gt;持续更新&lt;/code&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/ACM/Algorithm/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="http://yoursite.com/2019/08/26/Linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/08/26/Linux命令/</id>
    <published>2019-08-26T12:38:39.433Z</published>
    <updated>2019-08-26T13:11:51.132Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Linux的一些常用命令整理"><a href="#Linux的一些常用命令整理" class="headerlink" title="Linux的一些常用命令整理"></a><center>Linux的一些常用命令整理</center></h1><p><center>也方便自己以后查询</center></p><a id="more"></a><p><a href="https://www.runoob.com/w3cnote/linux-common-command-2.html" target="_blank" rel="noopener">详情链接</a></p><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><blockquote><p>就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</p></blockquote><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><p>用于新建一个新目录</p><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p>显示当前工作目录</p><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><p>切换文件路径,cd将给定的文件夹(或者目录)设置成当前工作目录<br>eg:</p><blockquote><p>cd desktop</p></blockquote><h2 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h2><p>删除给定目录<br>eg:</p><blockquote><p>mkdir test<br>rmdir test</p></blockquote><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>删除给定的文件</p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><p>对文件进行复制</p><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>对文件或者文件夹进行移动，如果文件或者文件夹存在于当前工作目录，还可以对文件或者文件夹重新命名</p><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p>用于标准输出(监控器或者屏幕)上查看文件内容</p><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><p>默认在标准输出上显示给定文件的最后10行内容，可以使用tail -n N 指定在标准输出上显示文件的最后N行内容。</p><h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><p>按页或按窗口打印文件内容。在查看包含大量文本数据的大文件时是非常有用和高效的。你可以使用Ctrl+F向前翻页，Ctrl+B向后翻页。</p><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>在给定的文件中搜寻指定的字符串。grep -i “” 在搜寻时会忽略字符串的大小写，而grep -r “” 则会在当前工作目录的文件中递归搜寻指定的字符串。</p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>这个命令会在给定位置搜寻与条件匹配的文件。你可以使用find -name 的-name选项来进行区分大小写的搜寻，find -iname 来进行不区分大小写的搜寻。</p><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><p>命令能创建、查看和提取tar压缩文件。tar -cvf 是创建对应压缩文件，tar -tvf 来查看对应压缩文件，tar -xvf 来提取对应压缩文件。</p><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p>命令创建和提取gzip压缩文件，还可以用gzip -d 来提取压缩文件。</p><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><p>会在终端列出所有可用的命令,可以使用任何命令的-h或-help选项来查看该命令的具体用法。图就省略啦，会有详细列表显示出来的。</p><h2 id="whatis"><a href="#whatis" class="headerlink" title="whatis"></a>whatis</h2><p>会用单行来描述给定的命令，就是解释当前命令。</p><h2 id="exit"><a href="#exit" class="headerlink" title="exit"></a>exit</h2><p>用于结束当前的终端会话。</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><p>通过发送数据包ping远程主机(服务器)，常用与检测网络连接和服务器状态。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Linux的一些常用命令整理&quot;&gt;&lt;a href=&quot;#Linux的一些常用命令整理&quot; class=&quot;headerlink&quot; title=&quot;Linux的一些常用命令整理&quot;&gt;&lt;/a&gt;&lt;center&gt;Linux的一些常用命令整理&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;也方便自己以后查询&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://yoursite.com/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="兴趣" scheme="http://yoursite.com/tags/%E5%85%B4%E8%B6%A3/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>html基础</title>
    <link href="http://yoursite.com/2019/08/24/html/"/>
    <id>http://yoursite.com/2019/08/24/html/</id>
    <published>2019-08-23T16:00:00.000Z</published>
    <updated>2019-08-26T13:37:18.100Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a><center>html基础</center></h1><p><center>学习一下页面的构造和前端的玩法<br>学习自己写网页<br><a id="more"></a></center></p><p><a href="https://www.runoob.com/html/html-elements.html" target="_blank" rel="noopener">详情链接</a></p><h2 id="标签："><a href="#标签：" class="headerlink" title="标签："></a>标签：</h2><h3 id="内容："><a href="#内容：" class="headerlink" title="内容："></a>内容：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.由尖括号包裹单词构成，eg：<span class="tag">&lt;<span class="name">html</span>&gt;</span>,所以标签不可能以数字开头</span><br><span class="line">2.标签不区分大小写，推荐小写</span><br><span class="line">3.标签可以嵌套，但不能交叉嵌套</span><br><span class="line">错误示例：<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">正确示例：<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用样式及属性："><a href="#使用样式及属性：" class="headerlink" title="使用样式及属性："></a>使用样式及属性：</h3><h4 id="标签使用样式"><a href="#标签使用样式" class="headerlink" title="标签使用样式"></a>标签使用样式</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开始标签<span class="tag">&lt;<span class="name">a</span> &gt;</span>标签体<span class="tag">&lt;/<span class="name">a</span>&gt;</span>结束标签</span><br><span class="line">自闭合标签，eg：<span class="tag">&lt;<span class="name">br</span>&gt;</span>,<span class="tag">&lt;<span class="name">hr</span>&gt;</span>,<span class="tag">&lt;<span class="name">img</span>&gt;</span>,<span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="标签属性："><a href="#标签属性：" class="headerlink" title="标签属性："></a>标签属性：</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>.通常为键值对形式出现，eg：<span class="attribute">color</span>=“red” id = ‘eat’</span><br><span class="line"><span class="selector-tag">b</span>.属性只能出现在开始标签和自闭和标签内</span><br><span class="line">c.属性名字全部小写，属性值必须用单引或者双引包裹</span><br><span class="line">d.如属性名和属性值完全一样，直接写属性名即可</span><br><span class="line">eg：“readonly”（input标签属性）</span><br></pre></td></tr></table></figure><h3 id="html文件各部分标签详解"><a href="#html文件各部分标签详解" class="headerlink" title="html文件各部分标签详解"></a>html文件各部分标签详解</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">块级标签和内联标签</span><br><span class="line">块级标签：<span class="tag">&lt;<span class="name">p</span>&gt;</span>/<span class="tag">&lt;<span class="name">h1</span>&gt;</span>/<span class="tag">&lt;<span class="name">table</span>&gt;</span>/<span class="tag">&lt;<span class="name">ol</span>&gt;</span>/<span class="tag">&lt;<span class="name">ul</span>&gt;</span>/<span class="tag">&lt;<span class="name">form</span>&gt;</span>/<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">内联标签：<span class="tag">&lt;<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">input</span>/&gt;</span>/<span class="tag">&lt;<span class="name">img</span>/&gt;</span>/<span class="tag">&lt;<span class="name">sub</span>&gt;</span>/<span class="tag">&lt;<span class="name">sup</span>&gt;</span>/<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>/<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="块级元素的特点："><a href="#块级元素的特点：" class="headerlink" title="块级元素的特点："></a>块级元素的特点：</h4><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">总在新行上开始</span><br><span class="line">高度，行高以及外边距和内边距都可控制</span><br><span class="line">宽度缺省，则是它容器的<span class="number">100</span><span class="comment">%</span></span><br><span class="line">它可以容纳内联元素和其他块元素</span><br></pre></td></tr></table></figure><h4 id="inline元素特点："><a href="#inline元素特点：" class="headerlink" title="inline元素特点："></a>inline元素特点：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">和其他元素在一行上</span><br><span class="line">高，行高以及外边距和内边距不可改变</span><br><span class="line">宽度就是其文字或图片宽度，不可改变</span><br><span class="line">内联元素只能容纳文本或者其他内联元素</span><br></pre></td></tr></table></figure><h4 id="行内元素注意："><a href="#行内元素注意：" class="headerlink" title="行内元素注意："></a>行内元素注意：</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置宽度<span class="attribute">width</span>无效</span><br><span class="line">设置高度<span class="attribute">height</span>无效</span><br><span class="line">设置<span class="attribute">margin</span>只有左右<span class="attribute">margin</span>有效，上下无效</span><br><span class="line">设置<span class="attribute">padding</span>只有左右<span class="attribute">padding</span>有效，上下则无效，注意元素范围是增大了，但是对元素周围的内容是没影响的。</span><br></pre></td></tr></table></figure><h3 id="常用标签："><a href="#常用标签：" class="headerlink" title="常用标签："></a>常用标签：</h3><h4 id="块级标签"><a href="#块级标签" class="headerlink" title="块级标签"></a>块级标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">总在新的一行上开始（会换行）</span><br><span class="line"></span><br><span class="line">标题标签（header）：一般用在文章的标题，有h1~h6 （只有6级），会加粗</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>/<span class="tag">&lt;<span class="name">h1</span>&gt;</span>/<span class="tag">&lt;<span class="name">table</span>&gt;</span>/<span class="tag">&lt;<span class="name">ol</span>&gt;</span>/<span class="tag">&lt;<span class="name">ul</span>&gt;</span>/<span class="tag">&lt;<span class="name">form</span>&gt;</span>/<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;p&gt;</span>：段落标签，换行</span><br><span class="line"><span class="params">&lt;hn&gt;</span>：标题标签</span><br><span class="line"><span class="params">&lt;table&gt;</span>：表格</span><br><span class="line"><span class="params">&lt;ul&gt;</span>：无序标签</span><br><span class="line"><span class="params">&lt;ol&gt;</span>：有序标签</span><br><span class="line"><span class="params">&lt;form&gt;</span>：表单，用于提交数据/上传数据时候要把想要上传的内容写在form表单里面</span><br><span class="line"><span class="params">&lt;div&gt;</span>：容器，用于分区和页面的整体布局</span><br><span class="line"></span><br><span class="line">段落标签（Paragraph）：会把 HTML文档 分割成若干段落</span><br><span class="line">列表标签：分为：有序列表<span class="params">&lt;ol&gt;</span>、无序列表<span class="params">&lt;ul&gt;</span>以及自定义列表<span class="params">&lt;dl&gt;</span>(含有列表<span class="params">&lt;dt&gt;</span>与列表项<span class="params">&lt;dd&gt;</span>)</span><br><span class="line">div标签：用于分化一个一个的区域</span><br><span class="line"><span class="symbol">px:</span>像素</span><br></pre></td></tr></table></figure><h4 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">不管写多少行都在一行上</span><br><span class="line">图片标签&lt;img <span class="attribute">src</span>=<span class="string">"图片的路径"</span> <span class="attribute">alt</span>=<span class="string">"下载失败时的替换文字"</span> <span class="attribute">title</span>=<span class="string">"鼠标移动到图片时的提示文字"</span>&gt;，插入图片 ：图片标签，用于向页面插入图片;图片格式：png,gif,jepg</span><br><span class="line">粗体&lt;strong&gt;/斜体 &lt;em&gt;：粗体标签将文字加粗，斜体标签将文字倾斜 &lt;em&gt;</span><br><span class="line">超链接标签&lt;a <span class="attribute">href</span>=<span class="string">"跳转网址"</span>&gt;&lt;/a&gt;：超链接标签其实就是 a 标签，一般用于网页之间的跳转还能做锚点，进行跳转。网页之间的跳转，还可以进行本页之间的跳转</span><br><span class="line">.&lt;a <span class="attribute">href</span>=“目标网址” <span class="attribute">title</span>=“鼠标滑过显示的文本” <span class="attribute">target</span>=“_blank”（用于指定实在本页还是新的网页打开的）&gt;链接显示的文本&lt;/a&gt; ：实现网页跳转和本页内跳转（要注意目标网址的区别）</span><br><span class="line"></span><br><span class="line">文字标签:Span 标签是单纯的文字标签，只有配合 CSS 才能有效果</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;html基础&quot;&gt;&lt;a href=&quot;#html基础&quot; class=&quot;headerlink&quot; title=&quot;html基础&quot;&gt;&lt;/a&gt;&lt;center&gt;html基础&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;学习一下页面的构造和前端的玩法&lt;br&gt;学习自己写网页&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="兴趣" scheme="http://yoursite.com/tags/%E5%85%B4%E8%B6%A3/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>装逼神器之atom</title>
    <link href="http://yoursite.com/2019/08/22/Atom/"/>
    <id>http://yoursite.com/2019/08/22/Atom/</id>
    <published>2019-08-21T16:00:00.000Z</published>
    <updated>2019-08-27T08:43:47.236Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a><center>Atom</center></h1><p><center>本篇主要介绍一下好用的编译器-&gt;atom<br><img src="https://i.loli.net/2019/08/27/ZyHEkwpedOV9CJY.jpg" alt><br><a id="more"></a></center></p><h2 id="下载atom"><a href="#下载atom" class="headerlink" title="下载atom"></a>下载atom</h2><p><a href="https://atom.io/" target="_blank" rel="noopener">安装链接</a><br>下载完成就好了</p><h2 id="配置atom"><a href="#配置atom" class="headerlink" title="配置atom"></a>配置atom</h2><p>下载完成之后你可能会一脸懵逼<br>但是没关系，我已经经历过的东西当然不可能让正在看的你也经历这种事情，嘿嘿嘿</p><p>首先点击左上角的File，找到settings.进去，点到install里面<br>接下来就是我们的为所欲为了</p><blockquote><p>PS：你要知道一点的是：atom是文本编译器，不要想着什么东西都给你配置好了,atom的美观度取决于你在这上面下了多少工夫</p></blockquote><blockquote><p>好的，废话不多说，直接上一些我认为比较好的插件</p></blockquote><blockquote><p>插入一下，如果不想看配置gcc就直接跳过下面这一阶段就好</p></blockquote><h2 id="配置gcc-g"><a href="#配置gcc-g" class="headerlink" title="配置gcc/g++"></a>配置gcc/g++</h2><h3 id="用到的软件"><a href="#用到的软件" class="headerlink" title="用到的软件"></a>用到的软件</h3><p><a href="https://osdn.net/projects/mingw/releases/" target="_blank" rel="noopener">下载链接</a><br><img src="https://i.loli.net/2019/08/23/a1BzKqJschpHMui.png" alt="1.png"><br>然后就进去这个<a href="https://cdreamer.cn/2019/08/22/Atom%E9%85%8D%E7%BD%AEgcc%E7%8E%AF%E5%A2%83/#more" target="_blank" rel="noopener">地方</a>看如何配置环境，在此就不多写了</p><p>配置完后(注意一定要先配置完环境)</p><h3 id="gcc插件"><a href="#gcc插件" class="headerlink" title="gcc插件"></a>gcc插件</h3><p>一共有<code>linter-gcc</code>,<code>linter</code>,<code>gcc-make-run</code>三个插件</p><p>去settings,然后install，搜索<code>linter-gcc</code>和<code>linter</code>安装</p><blockquote><p>PS:如果没有安装成功，多试验几次就好</p></blockquote><p>然后进入packages里面找到刚刚安装好的<code>linter-gcc</code>，进入这个插件的settings,将路径(带Path的一遍表示路径)改为<code>g++</code>或者<code>gcc</code>(如果环境没有配置好，你就gg了)，勾选<code>Lint on-the-fly</code>这句表示在书写的同时进行编译(如果不勾选的话，只有在保存的时候才会编译)</p><p>OK了，这个时候在安装一个可以让我们编写的代码能够运行的插件就大功告成了,老办法，安装<code>gcc-make-run</code>，安装完，按F6就OK了</p><h2 id="该介绍装逼的插件了"><a href="#该介绍装逼的插件了" class="headerlink" title="该介绍装逼的插件了"></a>该介绍装逼的插件了</h2><p><code>Activate Power Mode</code>:写代码效果很好(亲测)，安装完就能用<br><code>minimap</code>:用过subline的应该都知道这个吧,不知道也没事,就是给一个缩小版的代码<br><code>Emmet</code>:Web开发者必不可少的工具，都说是神器<br><code>color-picker</code>：取色器<br><code>atom-html-preview</code>:实时预览HTML页面<br><code>language-JavaScript-jsx</code>:支持JSX语法<br><code>vim-mode</code>:用过vim的都知道好,基本实现了大部分的功能,不过造成许多快捷键冲突，这也是其他编辑器不具备的功能<br></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git-plus:</span><br><span class="line">git的插件与Sublime Text 的sublimegit功能基本一致,命令控制面板快捷键</span><br><span class="line">MacOS快捷键：<span class="built_in">Cmd</span>+<span class="built_in">Shift</span>+H</span><br><span class="line">Windows + Linux快捷键：Ctrl+<span class="built_in">Shift</span>+H</span><br></pre></td></tr></table></figure><p></p><p><code>file-icons</code>:让文件前面边好看点的图片<br><code>docblockr</code>:方便写代码注释<br><code>autocomplete-plus</code>:当输入的时候，提供可能的候选项<br><code>simplified-chinese-menu</code>:ATOM的汉化插件<br><code>atom-beautify</code>:代码格式一键美化<br><code>last-cursor-position</code>:光标自由切换到上一次/下一次编辑位置<br><code>markdown-preview-plus</code>:markdown预览<br><code>quick-highlight</code>:代码高亮<br><code>advanced-open-file</code>:快速的打开文件或新建文件，同时支持路径补全<br><code>regex-railroad-diagram</code>:正则表达式图形化<br><code>autocomplete-paths</code>:填写路径的时候有提示</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Atom&quot;&gt;&lt;a href=&quot;#Atom&quot; class=&quot;headerlink&quot; title=&quot;Atom&quot;&gt;&lt;/a&gt;&lt;center&gt;Atom&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;本篇主要介绍一下好用的编译器-&amp;gt;atom&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/27/ZyHEkwpedOV9CJY.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="资源" scheme="http://yoursite.com/categories/%E8%B5%84%E6%BA%90/"/>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E8%B5%84%E6%BA%90/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="资源" scheme="http://yoursite.com/tags/%E8%B5%84%E6%BA%90/"/>
    
      <category term="兴趣" scheme="http://yoursite.com/tags/%E5%85%B4%E8%B6%A3/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>atom配置gcc环境</title>
    <link href="http://yoursite.com/2019/08/22/Atom%E9%85%8D%E7%BD%AEgcc%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/08/22/Atom配置gcc环境/</id>
    <published>2019-08-21T16:00:00.000Z</published>
    <updated>2019-08-27T08:43:57.487Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a><center>Atom</center></h1><p><center>本篇主要介绍一下atom关于gcc的配置<br><img src="https://i.loli.net/2019/08/27/Ryne83MUNo1LX9k.jpg" alt><br><a id="more"></a></center></p><h2 id="安装gcc-g"><a href="#安装gcc-g" class="headerlink" title="安装gcc/g++"></a>安装gcc/g++</h2><p>win7或者win10，在前面都是一样的，首先去官网下载mingw-get-setup.exe<br><a href="https://osdn.net/projects/mingw/releases/" target="_blank" rel="noopener">下载链接</a><br>如图，点击这个下载即可。<br><img src="https://i.loli.net/2019/08/23/a1BzKqJschpHMui.png" alt="1.png"></p><p>下载之后直接打开会出现下面这样<br><img src="https://i.loli.net/2019/08/23/GrSXbB7yWUiwfIm.png" alt="2.png"></p><p>下面这一步想改路径的可以该路径，不想改的直接无脑continue或者next就行了，如果改变了路径，要记住改到哪里了，后面要用到</p><p><img src="https://i.loli.net/2019/08/23/sioxY5TLQ7bc2mn.png" alt="3.png"></p><p>等待安装</p><p><img src="https://i.loli.net/2019/08/23/TtePcJkwNAHDEij.png" alt="4.png"></p><p>安装完下面的窗口会自动弹出来，按照步骤安装即可</p><p><img src="https://i.loli.net/2019/08/23/VZUzamrY1yIKPgh.png" alt="5.png"></p><p><img src="https://i.loli.net/2019/08/23/m57Uv89n4C1WoR3.png" alt="6.png"></p><p><img src="https://i.loli.net/2019/08/23/yfDMLSpJheizdH2.png" alt="7.png"></p><p>win7的话，按下面步骤安装，win10的话往下面看</p><p><img src="https://i.loli.net/2019/08/23/jWEZmDwgJnSvfAL.png" alt="8.png"></p><p><img src="https://i.loli.net/2019/08/23/svKfhbAqywExLYC.png" alt="9.png"></p><p>找到<code>path</code>，选中后点击编辑</p><p><img src="https://i.loli.net/2019/08/23/wmAhoBEpRsdkaVD.png" alt="10.1.png"></p><p>在后面添加<code>;C:\MinGW\bin</code>，这个英文的分好不能少了</p><p><img src="https://i.loli.net/2019/08/23/6xOLYJtBhm8vpV4.png" alt="10.2.png"></p><p>win10的就简单了，前面打开步骤相同，这一步直接新建添加就行</p><p><img src="https://i.loli.net/2019/08/23/Tlpydco3CePHXjF.png" alt="11.png"></p><blockquote><p>PS：如果么没有成功就看一下是不是哪一步操作失误了，应该不会错吧，哈哈</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Atom&quot;&gt;&lt;a href=&quot;#Atom&quot; class=&quot;headerlink&quot; title=&quot;Atom&quot;&gt;&lt;/a&gt;&lt;center&gt;Atom&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;本篇主要介绍一下atom关于gcc的配置&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/27/Ryne83MUNo1LX9k.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="资源" scheme="http://yoursite.com/categories/%E8%B5%84%E6%BA%90/"/>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E8%B5%84%E6%BA%90/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="资源" scheme="http://yoursite.com/tags/%E8%B5%84%E6%BA%90/"/>
    
      <category term="兴趣" scheme="http://yoursite.com/tags/%E5%85%B4%E8%B6%A3/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Day30</title>
    <link href="http://yoursite.com/2019/08/19/Day30/"/>
    <id>http://yoursite.com/2019/08/19/Day30/</id>
    <published>2019-08-18T16:00:00.000Z</published>
    <updated>2019-08-26T12:27:58.013Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Day30"><a href="#Day30" class="headerlink" title="Day30"></a><center>Day30</center></h1><p><center>今天学到的是<code>网络流之最大流</code><br>好好学习！！！<br><img src="https://i.loli.net/2019/08/26/LTFaD63cC5trhm4.jpg" alt><br><a id="more"></a></center></p><h2 id="链式前向星"><a href="#链式前向星" class="headerlink" title="链式前向星"></a>链式前向星</h2><p><a href="https://blog.csdn.net/acdreamers/article/details/16902023" target="_blank" rel="noopener">传送门</a></p><h2 id="网络流之最大流"><a href="#网络流之最大流" class="headerlink" title="网络流之最大流"></a>网络流之最大流</h2><p><a href="https://blog.csdn.net/wzw1376124061/article/details/55001639" target="_blank" rel="noopener">传送门</a></p><h2 id="Drainage-Ditches"><a href="#Drainage-Ditches" class="headerlink" title="Drainage Ditches"></a>Drainage Ditches</h2><p>Description:<br>Every time it rains on Farmer John’s fields, a pond forms over Bessie’s favorite clover patch. This means that the clover is covered by water for awhile and takes quite a long time to regrow. Thus, Farmer John has built a set of drainage ditches so that Bessie’s clover patch is never covered in water. Instead, the water is drained to a nearby stream. Being an ace engineer, Farmer John has also installed regulators at the beginning of each ditch, so he can control at what rate water flows into that ditch.<br>Farmer John knows not only how many gallons of water each ditch can transport per minute but also the exact layout of the ditches, which feed out of the pond and into each other and stream in a potentially complex network.<br>Given all this information, determine the maximum rate at which water can be transported out of the pond and into the stream. For any given ditch, water flows in only one direction, but there might be a way that water can flow in a circle.<br><code>Input</code><br>The input includes several cases. For each case, the first line contains two space-separated integers, N (0 &lt;= N &lt;= 200) and M (2 &lt;= M &lt;= 200). N is the number of ditches that Farmer John has dug. M is the number of intersections points for those ditches. Intersection 1 is the pond. Intersection point M is the stream. Each of the following N lines contains three integers, Si, Ei, and Ci. Si and Ei (1 &lt;= Si, Ei &lt;= M) designate the intersections between which this ditch flows. Water will flow through this ditch from Si to Ei. Ci (0 &lt;= Ci &lt;= 10,000,000) is the maximum rate at which water will flow through the ditch.<br><code>Output</code><br>For each case, output a single integer, the maximum rate at which water may emptied from the pond.<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">5 4</span><br><span class="line">1 2 40</span><br><span class="line">1 4 20</span><br><span class="line">2 4 20</span><br><span class="line">2 3 30</span><br><span class="line">3 4 10</span><br><span class="line">Sample Output</span><br><span class="line">50</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line">ll n,m,s,t,u,v,w,cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll to,dis,nxt;</span><br><span class="line">&#125;G[maxn];</span><br><span class="line">ll head[maxn],d[maxn],cur[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll from,ll to,ll dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[cnt].to=to;</span><br><span class="line">    G[cnt].dis=dis;</span><br><span class="line">    G[cnt].nxt=head[from];</span><br><span class="line">    head[from]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u,ll flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t)    <span class="keyword">return</span> flow;</span><br><span class="line">    ll x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=cur[u];i!=<span class="number">-1</span>;i=G[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        cur[u]=G[i].nxt;</span><br><span class="line">        ll v=G[i].to;</span><br><span class="line">        <span class="keyword">if</span>(d[v]==d[u]+<span class="number">1</span>&amp;&amp;G[i].dis&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ll res=dfs(v,min(flow,G[i].dis));</span><br><span class="line">            flow-=res;</span><br><span class="line">            x+=res;</span><br><span class="line">            G[i].dis-=res;</span><br><span class="line">            G[i^<span class="number">1</span>].dis+=res;</span><br><span class="line">            <span class="keyword">if</span>(flow==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!x)  d[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt; que;</span><br><span class="line">    que.push(s);</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        ll u=que.front();que.pop();</span><br><span class="line">        <span class="keyword">for</span>(ll i=head[u];i!=<span class="number">-1</span>;i=G[i].nxt)</span><br><span class="line">        &#123;</span><br><span class="line">            ll v=G[i].to;</span><br><span class="line">            <span class="keyword">if</span>(d[v]==<span class="number">-1</span>&amp;&amp;G[i].dis&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d[v]=d[u]+<span class="number">1</span>;</span><br><span class="line">                que.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll max_flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="keyword">if</span>(d[t]==<span class="number">-1</span>)    <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)    cur[i]=head[i];</span><br><span class="line">        max_flow+=dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;max_flow&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="number">1</span>,t=n;</span><br><span class="line">        <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v&gt;&gt;w;</span><br><span class="line">            add(u,v,w);</span><br><span class="line">            add(v,u,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dinic();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Island-Transport"><a href="#Island-Transport" class="headerlink" title="Island Transport"></a>Island Transport</h2><p>Description:<br>In the vast waters far far away, there are many islands. People are living on the islands, and all the transport among the islands relies on the ships.<br>You have a transportation company there. Some routes are opened for passengers. Each route is a straight line connecting two different islands, and it is bidirectional. Within an hour, a route can transport a certain number of passengers in one direction. For safety, no two routes are cross or overlap and no routes will pass an island except the departing island and the arriving island. Each island can be treated as a point on the XY plane coordinate system. X coordinate increase from west to east, and Y coordinate increase from south to north.<br>The transport capacity is important to you. Suppose many passengers depart from the westernmost island and would like to arrive at the easternmost island, the maximum number of passengers arrive at the latter within every hour is the transport capacity. Please calculate it.<br><code>Input</code><br>The first line contains one integer T (1&lt;=T&lt;=20), the number of test cases.<br>Then T test cases follow. The first line of each test case contains two integers N and M (2&lt;=N,M&lt;=100000), the number of islands and the number of routes. Islands are number from 1 to N.<br>Then N lines follow. Each line contain two integers, the X and Y coordinate of an island. The K-th line in the N lines describes the island K. The absolute values of all the coordinates are no more than 100000.<br>Then M lines follow. Each line contains three integers I1, I2 (1&lt;=I1,I2&lt;=N) and C (1&lt;=C&lt;=10000) . It means there is a route connecting island I1 and island I2, and it can transport C passengers in one direction within an hour.<br>It is guaranteed that the routes obey the rules described above. There is only one island is westernmost and only one island is easternmost. No two islands would have the same coordinates. Each island can go to any other island by the routes.<br><code>Output</code><br>For each test case, output an integer in one line, the transport capacity.<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">2</span><br><span class="line">5 7</span><br><span class="line">3 3</span><br><span class="line">3 0</span><br><span class="line">3 1</span><br><span class="line">0 0</span><br><span class="line">4 5</span><br><span class="line">1 3 3</span><br><span class="line">2 3 4</span><br><span class="line">2 4 3</span><br><span class="line">1 5 6</span><br><span class="line">4 5 3</span><br><span class="line">1 4 4</span><br><span class="line">3 4 2</span><br><span class="line">6 7</span><br><span class="line">-1 -1</span><br><span class="line">0 1</span><br><span class="line">0 2</span><br><span class="line">1 0</span><br><span class="line">1 1</span><br><span class="line">2 3</span><br><span class="line">1 2 1</span><br><span class="line">2 3 6</span><br><span class="line">4 5 5</span><br><span class="line">5 6 3</span><br><span class="line">1 4 6</span><br><span class="line">2 5 5</span><br><span class="line">3 6 4</span><br><span class="line">Sample Output</span><br><span class="line">9</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h.&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m,start,over;</span><br><span class="line"><span class="keyword">int</span> deep[N],maxflow;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,w,pre;</span><br><span class="line">&#125;a[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">-1</span>,head[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[++cnt].to=to;</span><br><span class="line">    a[cnt].w=w;</span><br><span class="line">    a[cnt].pre=head[from];</span><br><span class="line">    head[from]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span><span class="comment">//这里我们不用队列直接用数组代替</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(deep,<span class="number">-1</span>,<span class="keyword">sizeof</span>(deep));</span><br><span class="line">    <span class="keyword">int</span> q[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> fro,bac;</span><br><span class="line">    fro=bac=<span class="number">0</span>;</span><br><span class="line">    q[bac++]=start,deep[start]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(fro&lt;bac)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> first=q[fro];</span><br><span class="line">        <span class="keyword">if</span>(first==over) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[first];~i;i=a[i].pre)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(deep[a[i].to]==<span class="number">-1</span>&amp;&amp;a[i].w&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                deep[a[i].to]=deep[first]+<span class="number">1</span>;</span><br><span class="line">                q[bac++]=a[i].to;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fro++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==over) <span class="keyword">return</span> cap;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[s];~i;i=a[i].pre)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=a[i].to;</span><br><span class="line">        <span class="keyword">if</span>(deep[to]==deep[s]+<span class="number">1</span>&amp;&amp;a[i].w)</span><br><span class="line">        &#123;</span><br><span class="line">            f=dfs(to,min(cap-flow,a[i].w));</span><br><span class="line">            a[i].w-=f;</span><br><span class="line">            a[i^<span class="number">1</span>].w+=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            <span class="keyword">if</span>(flow==cap)   <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flow==<span class="number">0</span>) deep[s]=<span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tem=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs())</span><br><span class="line">        <span class="keyword">while</span>((tem=dfs(start,INF))&gt;<span class="number">0</span>)</span><br><span class="line">            maxflow+=tem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        maxflow=<span class="number">0</span>,cnt=<span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        start = over = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> x,y,z,x_min=INF,x_max=-INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="keyword">if</span>(x&lt;x_min) start=i,x_min=x;</span><br><span class="line">            <span class="keyword">if</span>(x&gt;x_max) over=i,x_max=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">            add(x,y,z);</span><br><span class="line">            add(y,x,z);</span><br><span class="line">        &#125;</span><br><span class="line">        dinic();</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;maxflow&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Power-Network"><a href="#Power-Network" class="headerlink" title="Power Network"></a>Power Network</h2><p>Description:<br>A power network consists of nodes (power stations, consumers and dispatchers) connected by power transport lines. A node u may be supplied with an amount s(u) &gt;= 0 of power, may produce an amount 0 &lt;= p(u) &lt;= p max(u) of power, may consume an amount 0 &lt;= c(u) &lt;= min(s(u),c max(u)) of power, and may deliver an amount d(u)=s(u)+p(u)-c(u) of power. The following restrictions apply: c(u)=0 for any power station, p(u)=0 for any consumer, and p(u)=c(u)=0 for any dispatcher. There is at most one power transport line (u,v) from a node u to a node v in the net; it transports an amount 0 &lt;= l(u,v) &lt;= l max(u,v) of power delivered by u to v. Let Con=Σ uc(u) be the power consumed in the net. The problem is to compute the maximum value of Con.<br><img src="https://i.loli.net/2019/08/19/sMRZt8G6r7dv3aO.jpg" alt="1c1354d5a7c820146d570a7875b230b3.png"><br>An example is in figure 1. The label x/y of power station u shows that p(u)=x and p max(u)=y. The label x/y of consumer u shows that c(u)=x and c max(u)=y. The label x/y of power transport line (u,v) shows that l(u,v)=x and l max(u,v)=y. The power consumed is Con=6. Notice that there are other possible states of the network but the value of Con cannot exceed 6.<br><code>Input</code><br>There are several data sets in the input. Each data set encodes a power network. It starts with four integers: 0 &lt;= n &lt;= 100 (nodes), 0 &lt;= np &lt;= n (power stations), 0 &lt;= nc &lt;= n (consumers), and 0 &lt;= m &lt;= n^2 (power transport lines). Follow m data triplets (u,v)z, where u and v are node identifiers (starting from 0) and 0 &lt;= z &lt;= 1000 is the value of l max(u,v). Follow np doublets (u)z, where u is the identifier of a power station and 0 &lt;= z &lt;= 10000 is the value of p max(u). The data set ends with nc doublets (u)z, where u is the identifier of a consumer and 0 &lt;= z &lt;= 10000 is the value of c max(u). All input numbers are integers. Except the (u,v)z triplets and the (u)z doublets, which do not contain white spaces, white spaces can occur freely in input. Input data terminate with an end of file and are correct.<br><code>Output</code><br>For each data set from the input, the program prints on the standard output the maximum amount of power that can be consumed in the corresponding network. Each result has an integral value and is printed from the beginning of a separate line.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">2 1 1 2 (0,1)20 (1,0)10 (0)15 (1)20</span><br><span class="line">7 2 3 13 (0,0)1 (0,1)2 (0,2)5 (1,0)1 (1,2)8 (2,3)1 (2,4)7</span><br><span class="line">         (3,5)2 (3,6)5 (4,2)7 (4,3)5 (4,5)1 (6,0)5</span><br><span class="line">         (0)5 (1)2 (3)2 (4)1 (5)4</span><br><span class="line">Sample Output</span><br><span class="line">15</span><br><span class="line">6</span><br><span class="line">Hint</span><br><span class="line">The sample input contains two data sets. The first data set encodes a network with 2 nodes, power station 0 with pmax(0)=15 and consumer 1 with cmax(1)=20, and 2 power transport lines with lmax(0,1)=20 and lmax(1,0)=10. The maximum value of Con is 15. The second data set encodes the network from figure 1.</span><br></pre></td></tr></table></figure><p>code:<br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,dis,nxt;</span><br><span class="line">&#125;G[maxn];</span><br><span class="line"><span class="keyword">int</span> head[maxn],d[maxn];</span><br><span class="line"><span class="keyword">int</span> n,np,nc,m,cnt,s,t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[cnt].to=to;</span><br><span class="line">    G[cnt].dis=dis;</span><br><span class="line">    G[cnt].nxt=head[from];</span><br><span class="line">    head[from]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.push(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();</span><br><span class="line">        <span class="keyword">if</span>(u==t)    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=G[i].nxt)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v=G[i].to;</span><br><span class="line">            <span class="keyword">int</span> dis=G[i].dis;</span><br><span class="line">            <span class="keyword">if</span>(dis&amp;&amp;d[v]==<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d[v]=d[u]+<span class="number">1</span>;</span><br><span class="line">                q.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=G[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=G[i].to;</span><br><span class="line">        <span class="keyword">int</span> dis=G[i].dis;</span><br><span class="line">        <span class="keyword">if</span>(dis&amp;&amp;d[v]==d[u]+<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> f=dfs(v,min(dis,flow-x));</span><br><span class="line">            G[i].dis-=f;</span><br><span class="line">            G[i^<span class="number">1</span>].dis+=f;</span><br><span class="line">            x+=f;</span><br><span class="line">            <span class="keyword">if</span>(x==flow) <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs())</span><br><span class="line">    &#123;</span><br><span class="line">        ans+=dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;np,&amp;nc,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        s=n+<span class="number">1</span>;</span><br><span class="line">        t=s+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x,y,w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" (%d,%d)%d"</span>,&amp;x,&amp;y,&amp;w);</span><br><span class="line">            add(x,y,w);</span><br><span class="line">            add(y,x,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;np;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v,w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" (%d)%d"</span>,&amp;v,&amp;w);</span><br><span class="line">            add(s,v,w);</span><br><span class="line">            add(v,s,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nc;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u,w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" (%d)%d"</span>,&amp;u,&amp;w);</span><br><span class="line">            add(u,t,w);</span><br><span class="line">            add(t,u,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dinic();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h2><p>Description:<br>Years later, Jerry fell in love with a girl, and he often walks for a long time to pay visits to her. But, because he spends too much time with his girlfriend, Tom feels neglected and wants to prevent him from visiting her.<br>After doing some research on the neighbourhood, Tom found that the neighbourhood consists of exactly n houses, and some of them are connected with directed road. To visit his girlfriend, Jerry needs to start from his house indexed 1 and go along the shortest path to hers, indexed n.<br>Now Tom wants to block some of the roads so that Jerry has to walk longer to reach his girl’s home, and he found that the cost of blocking a road equals to its length. Now he wants to know the minimum total cost to make Jerry walk longer.<br>Note, if Jerry can’t reach his girl’s house in the very beginning, the answer is obviously zero. And you don’t need to guarantee that there still exists a way from Jerry’s house to his girl’s after blocking some edges.<br><code>Input</code><br>The input begins with a line containing one integer T(1≤T≤10), the number of test cases.<br>Each test case starts with a line containing two numbers n,m(1≤n,m≤10000), the number of houses and the number of one-way roads in the neighbourhood.<br>m lines follow, each of which consists of three integers x,y,c(1≤x,y≤n,1≤c≤109), denoting that there exists a one-way road from the house indexed x to y of length c.<br><code>Output</code><br>Print T lines, each line containing a integer, the answer.<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">1</span><br><span class="line">3 4</span><br><span class="line">1 2 1</span><br><span class="line">2 3 1</span><br><span class="line">1 3 2</span><br><span class="line">1 3 3</span><br><span class="line">Sample Output</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//EK算法求解最大流</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> ll inf = <span class="number">34338315071127552</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,s,t;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    ll v;</span><br><span class="line">    ll val;</span><br><span class="line">    ll next;</span><br><span class="line">&#125;node[<span class="number">20101</span>];</span><br><span class="line"><span class="keyword">int</span> top=<span class="number">1</span>,head[<span class="number">10101</span>];<span class="comment">//top必须从一个奇数开始，一般用-1但我不习惯，解释见下方</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(n+<span class="number">1</span>));</span><br><span class="line">    top = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addedge</span><span class="params">(ll u,ll v,ll val)</span></span>&#123;</span><br><span class="line">    node[++top].v=v;</span><br><span class="line">    node[top].val=val;</span><br><span class="line">    node[top].next=head[u];</span><br><span class="line">    head[u]=top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(c&gt;<span class="string">'9'</span>||c&lt;<span class="string">'0'</span>)c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)x=x*<span class="number">10</span>+c-<span class="string">'0'</span>,c=getchar();</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line">ll inque[<span class="number">10101</span>];<span class="comment">//点是访问过里</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Pre</span>&#123;</span></span><br><span class="line">    ll v;<span class="comment">//该点的前一个点（从起点过来）</span></span><br><span class="line">    ll edge;<span class="comment">//与该点相连的边（靠近起点的）</span></span><br><span class="line">&#125;pre[<span class="number">10101</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;ll&gt;q;</span><br><span class="line">    <span class="built_in">memset</span>(inque,<span class="number">0</span>,<span class="keyword">sizeof</span>(inque));</span><br><span class="line">    <span class="built_in">memset</span>(pre,<span class="number">-1</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">    inque[s]=<span class="number">1</span>;</span><br><span class="line">    q.push(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        ll u=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=node[i].next)&#123;</span><br><span class="line">            ll d=node[i].v;</span><br><span class="line">            <span class="keyword">if</span>(!inque[d]&amp;&amp;node[i].val)&#123;<span class="comment">//node[i].val==0则已经该路径满了</span></span><br><span class="line">            pre[d].v=u;</span><br><span class="line">            pre[d].edge=i;</span><br><span class="line">            <span class="keyword">if</span>(d==t)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            inque[d]=<span class="number">1</span>;</span><br><span class="line">            q.push(d);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//是否有增广路</span></span><br><span class="line"><span class="function">ll <span class="title">EK</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs())&#123;</span><br><span class="line">        ll mi=inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i!=s;i=pre[i].v)&#123;</span><br><span class="line">            mi=min(mi,node[pre[i].edge].val);<span class="comment">//每次只能增加增广路上最小的边的权值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i!=s;i=pre[i].v)&#123;</span><br><span class="line">            node[pre[i].edge].val-=mi;</span><br><span class="line">            node[pre[i].edge^<span class="number">1</span>].val+=mi;</span><br><span class="line">            <span class="comment">//反向的边的编号是正向边的编号^1</span></span><br><span class="line">            <span class="comment">//这就是为什么top开始时必须是奇数</span></span><br><span class="line">        &#125;</span><br><span class="line">        ans+=mi;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pii;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; G[maxn];</span><br><span class="line">ll dis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">djk</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= n+<span class="number">1</span>;i ++) dis[i] = inf;</span><br><span class="line">    priority_queue&lt;pii,<span class="built_in">vector</span>&lt;pii&gt;,greater&lt;pii&gt; &gt; que;</span><br><span class="line">    dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    que.push(&#123;<span class="number">0</span>,<span class="number">1</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        pii p = que.top();</span><br><span class="line">        ll v = p.second;</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">if</span> (dis[v] &lt; p.first) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; G[v].size();i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            pii p2 = G[v][i];</span><br><span class="line">            <span class="keyword">if</span> (dis[p2.first] &gt; dis[v] + p2.second)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[p2.first] = dis[v] + p2.second;</span><br><span class="line">                que.push(&#123;dis[p2.first],p2.first&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">    <span class="keyword">while</span> (num --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//int n,m;</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">            G[i].clear();</span><br><span class="line">        init(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll u,v,w;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">            G[u].push_back(&#123;v,w&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        djk(n);</span><br><span class="line">        m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; G[i].size();j ++)</span><br><span class="line">            &#123;</span><br><span class="line">                pii p = G[i][j];</span><br><span class="line">                <span class="keyword">if</span> (dis[i] + p.second == dis[p.first])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;"u\t"&lt;&lt;i&lt;&lt;"\tv\t"&lt;&lt;p.first&lt;&lt;"\tw\t"&lt;&lt;p.second&lt;&lt;endl;</span></span><br><span class="line">                    addedge(i,p.first,p.second);</span><br><span class="line">                    addedge(p.first,i,<span class="number">0</span>);</span><br><span class="line">                    m ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        s = <span class="number">1</span>,t = n;</span><br><span class="line">        ll ans = EK();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        <span class="keyword">if</span> (!ans) <span class="built_in">cout</span>&lt;&lt;<span class="string">"dis\t"</span>&lt;&lt;dis[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//7 8</span></span><br><span class="line"><span class="comment">//1 2 2</span></span><br><span class="line"><span class="comment">//1 3 1</span></span><br><span class="line"><span class="comment">//2 4 1</span></span><br><span class="line"><span class="comment">//3 4 2</span></span><br><span class="line"><span class="comment">//4 5 1</span></span><br><span class="line"><span class="comment">//4 6 2</span></span><br><span class="line"><span class="comment">//5 7 1</span></span><br><span class="line"><span class="comment">//6 7 1</span></span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day30&quot;&gt;&lt;a href=&quot;#Day30&quot; class=&quot;headerlink&quot; title=&quot;Day30&quot;&gt;&lt;/a&gt;&lt;center&gt;Day30&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天学到的是&lt;code&gt;网络流之最大流&lt;/code&gt;&lt;br&gt;好好学习！！！&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/26/LTFaD63cC5trhm4.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="集训" scheme="http://yoursite.com/categories/ACM/%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="链式前向星" scheme="http://yoursite.com/tags/%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/"/>
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>Day29</title>
    <link href="http://yoursite.com/2019/08/18/Day29/"/>
    <id>http://yoursite.com/2019/08/18/Day29/</id>
    <published>2019-08-17T16:00:00.000Z</published>
    <updated>2019-08-26T12:28:38.200Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --><h1 id="Day29"><a href="#Day29" class="headerlink" title="Day29"></a><center>Day29</center></h1><p><center>今天学长的积分赛<br>好好学习！！！<br><img src="https://i.loli.net/2019/08/26/6PCxrR2kgmGzJDj.jpg" alt><br><a id="more"></a></center></p><h2 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h2><p>Description:<br>Anxdada有一个长度为n的非负整数序列a1, a2, …, an.<br>他想知道能否将这个序列划分成奇数个子序列,其中每个子序列的第一个数字是奇数,最后一个数字也是奇数,而且这个子序列的长度也是奇数</p><p>子序列就是原序列的一个连续的片段. 例如,{3, 4, 5}和{1}都是{1, 2, 3, 4, 5, 6}的子序列,但是{1, 2, 4}和{7}并不是{1, 2, 3, 4, 5, 6}的子序列</p><p><code>Input</code><br>第一行包含一个正整数n(1 ≤ n ≤ 100) — 原序列的长度.</p><p>第二行包含n个非负整数a1, a2, …, an (0 ≤ ai ≤ 100) — 这个序列的元素.</p><p><code>Output</code><br>如果原序列可以按要求进行划分就输出”Yes”,否则输出”No”.<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Simple Input 1</span><br><span class="line">3</span><br><span class="line">1 3 5</span><br><span class="line">Simple Output 1</span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line">Simple Input 2</span><br><span class="line">5</span><br><span class="line">1 0 1 5 1</span><br><span class="line">Simple Output 2</span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line">Simple Input 3</span><br><span class="line">3</span><br><span class="line">4 3 1</span><br><span class="line">Simple Output 3</span><br><span class="line"><span class="literal">No</span></span><br><span class="line">Simple Input 4</span><br><span class="line">4</span><br><span class="line">3 9 9 3</span><br><span class="line">Simple Output 4</span><br><span class="line"><span class="literal">No</span></span><br><span class="line">Note</span><br><span class="line">在第一个样例中,把原序列划分为1个子序列: &#123;1, 3, 5&#125;满足题目的要求.</span><br><span class="line">在第二个样例中,把原序列划分为3个子序列: &#123;1, 0, 1&#125;, &#123;5&#125;, &#123;1&#125;.</span><br><span class="line">在第三个样例中,其中一个子序列一定以4开头,但是4是偶数,因此不符合题意.</span><br><span class="line">在第四个样例中,把原序列划分为2个部分:&#123;3, 9, 9&#125;,&#123;3&#125;,但是2是偶数不满足题意.</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i ++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(t % <span class="number">2</span> == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((a[<span class="number">1</span>] &amp; <span class="number">1</span>) &amp;&amp; (a[t] &amp; <span class="number">1</span>)) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="搜索漂亮的整数"><a href="#搜索漂亮的整数" class="headerlink" title="搜索漂亮的整数"></a>搜索漂亮的整数</h2><p>Description:<br>小红现在有两个列表的数字.<br>如果一个十进制数至少有一个数字来自列表一且至少有一个数字来自列表二，那么将这个数字叫做小红数，请你找出最小的正小红数<br><code>Input</code><br>第一行包括两个整数 n 和 m (1 ≤ n, m ≤ 9) — 分别代表第一个和第二个列表的长度。<br>第二行包含 n 个不同的数字 a1, a2, …, an (1 ≤ ai ≤ 9) 代表列表一中的元素。<br>第三行包含 m 个不同的数字 b1, b2, …, bm (1 ≤ bi ≤ 9) 代表列表二中的元素</p><p><code>Output</code><br>输出最小正小红数.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">6</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">25</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">8</span> <span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx], b[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> minn, maxn;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++) <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line">sort(a, a + n);</span><br><span class="line">sort(b, b + m);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == b[j])</span><br><span class="line">&#123;</span><br><span class="line">ans = a[i];</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">minn = min(a[<span class="number">0</span>], b[<span class="number">0</span>]);</span><br><span class="line">maxn = max(a[<span class="number">0</span>], b[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; minn * <span class="number">10</span> + maxn &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="hzy-和zsl-的生存挑战"><a href="#hzy-和zsl-的生存挑战" class="headerlink" title="hzy 和zsl 的生存挑战"></a>hzy 和zsl 的生存挑战</h2><p>Description:<br>zsl 和hzy 来到了臭臭城堡，打算挑战臭臭城堡的大魔王hyz，大魔王hyz设置了这样的一个挑战：</p><ol><li>zsl 和hzy两个人各自来到一间密室，期间两人无法以任何形式交流</li><li>大魔王hyz会随机在两个人的脑海里各发送一个数字，0或者是1</li><li>zsl 和 hzy 需要猜对这俩个数字才算通关，但是大魔王hyz觉得人生不能过于无敌，因此降低难度，只要两个人中有一个人答对就算是通关</li></ol><p>现在大魔王hyz 给出的数字可能的情况有 00， 01， 10， 11 四种，请按上述枚举的顺序，计算所有情况下zsl 和hzy 通关的几率。（假设zsl 和 hzy 两个人都足够机智，能够选择出最优决策）<br><code>Input</code><br>(空)<br><code>Output</code><br>输出四个答案，每个答案后面跟随一个换行符并且保留两位小数位，分别对应00，01，10，11的情况下，zsl和hzy通关的几率<br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Sample</span> <span class="selector-tag">Input</span></span><br><span class="line">(空)</span><br><span class="line"><span class="selector-tag">Sample</span> <span class="selector-tag">Output</span></span><br><span class="line">1<span class="selector-class">.00</span></span><br><span class="line">0<span class="selector-class">.00</span></span><br><span class="line">0<span class="selector-class">.50</span></span><br><span class="line">0<span class="selector-class">.55</span> (输出仅做格式参考,不保证正确性)</span><br></pre></td></tr></table></figure><p></p><p><code>评价</code></p><blockquote><p>该题及其SB，不得不吐槽一下<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1.00\n1.00\n1.00\n1.00\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="共享单车"><a href="#共享单车" class="headerlink" title="共享单车"></a>共享单车</h2><p>Description:<br>学长自从上次被打了一顿之后,就想着讨好实验室的人。<br>于是他决定带着实验室的人出去玩。实验室一共有k个人,出去玩需要骑自行车。<br>一共有m家共享单车公司提供自行车,第i家共享单车公司提供的自行车信息用li,ri,ci,pi表示。<br>其中:<br>li,ri表示这家公司从接下来的第li天到ri天,提供共享单车.<br>ci表示这家公司在这些天每天提供的单车数目.<br>pi表示租用每辆车需要的单价.<br>现在学长想在接下来连续的n天,每天都带着实验室的k个人出去玩,要求出行时候每个人都尽可能能坐到单车,即每天都要租k辆车,当然如果某一天所有公司全部加起来都没有提供k辆车,那么就将所有车都租下,让剩下的一些人走路,否则如果够k辆就一定要租k辆.<br>请你输出学长最少需要花多少钱.<br><code>Input</code><br>输入的第一行为3个整数n,k,m(1&lt;=n,k&lt;=10^6,1&lt;=m&lt;=2*10^5).<br>接下来m行,每行4个整数li,ri,ci,pi(1&lt;=li&lt;=ri&lt;=n,1&lt;=ci,pi&lt;=10^6).<br><code>Output</code><br>输出只有一行,表示学长最少需要花费的钱.</p><p><code>题意</code></p><blockquote><p>有很多个活动，每个活动有持续天数，每个活动会在每天提供C个CPU每个CPU价格为P，问需要工作N天，每天需要K个CPU的最少花费。</p></blockquote><p><code>解题思路</code></p><blockquote><p>首先价格越低的活动，肯定是要选的。因此我们对于每一天记录有哪些新活动 加入，哪些活动结束。然后维护一个线段树，线段树的下标是价格。即价格为i的活动，一共能提供多少个CPU，然后加入和删除活动就相当于update(C,+-P,1,MAXC,1)。 然后我们顺便维护一下价格*数量的和。然后利用线段树天然的二分性，快速求出前缀数量和为K的价格和。</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">10</span> <span class="number">1</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">44</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">7</span> <span class="number">13</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">10</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span> <span class="number">10</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">10</span> <span class="number">6</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">10</span> <span class="number">9</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">10</span> <span class="number">8</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">462</span></span><br></pre></td></tr></table></figure><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000005</span>;</span><br><span class="line"></span><br><span class="line">ll num[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line">ll sum[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    num[rt]=num[rt&lt;&lt;<span class="number">1</span>]+num[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">    sum[rt]=sum[rt&lt;&lt;<span class="number">1</span>]+sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> P,<span class="keyword">int</span> C,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        num[rt]+=C;</span><br><span class="line">        sum[rt]+=<span class="number">1l</span>l*P*C;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(P&lt;=m)</span><br><span class="line">        update(P,C,l,m,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        update(P,C,m+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> K,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        <span class="comment">//不到K个</span></span><br><span class="line">        <span class="keyword">if</span>(l==MAXN)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(K&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1l</span>l*K*l;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(num[rt&lt;&lt;<span class="number">1</span>]&gt;=K)&#123;</span><br><span class="line">        <span class="keyword">return</span> query(K,l,m,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sum[rt&lt;&lt;<span class="number">1</span>]+query(K-num[rt&lt;&lt;<span class="number">1</span>],m+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; C[MAXN];<span class="comment">//第i天加入的活动</span></span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; O[MAXN];<span class="comment">//第i天结束的活动</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> K,M;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;K,&amp;M);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> l,r,c,p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;l,&amp;r,&amp;c,&amp;p);</span><br><span class="line">        C[l].push_back(make_pair(p,c));<span class="comment">//加入的活动</span></span><br><span class="line">        O[r].push_back(make_pair(p,c));<span class="comment">//退出的活动</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="comment">//新活动加入</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;C[i].size();j++)</span><br><span class="line">            update(C[i][j].first,C[i][j].second,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">        ans+=query(K,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//活动结束</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;O[i].size();j++)</span><br><span class="line">            update(O[i][j].first,-O[i][j].second,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="最小值最大值"><a href="#最小值最大值" class="headerlink" title="最小值最大值"></a>最小值最大值</h2><p>Description:<br>给出一个有n个整数的数组 a1, a2, …, an 和一个整数k。你被要求把这个数组分成k 个非空的子段。 然后从每个k 个子段拿出最小值，再从这些最小值中拿出最大值。求这个最大值最大能为多少？</p><p><code>Input</code><br>第一行输入两个整数 n 和 k (1 ≤ k ≤ n ≤  105) — 数组a 的大小和要求分成子段的数目</p><p>第二行包含 n 整数 a1,  a2,  …,  an ( - 109  ≤  ai ≤  109).</p><p><code>Output</code><br>输出答案——在你分离的每个子段中最小值中的最大值k<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">5</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">-4</span> <span class="number">-5</span> <span class="number">-3</span> <span class="number">-2</span> <span class="number">-1</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">-5</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>PS:对2也要特判一下<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[<span class="number">100001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">2</span>) <span class="built_in">cout</span> &lt;&lt; max(a[<span class="number">1</span>], a[n]) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; a[<span class="number">1</span>] &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; a[n] &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="Ring"><a href="#Ring" class="headerlink" title="Ring"></a>Ring</h2><p>Description:<br>邓布利多教授正在帮助哈利摧毁魂器。当他怀疑一个魂器出现在那里时，他去了冈特沙克。他看到Marvolo Gaunt的戒指，并将其确定为魂器。虽然他摧毁了它，但仍然受到诅咒的影响。斯内普教授正在帮助邓布利多解除诅咒。为此，他想给Dumbledore提供他制作的药水x滴。<br>x的值被计算为给定p，q，r和阵列a1，a2，……的p·ai + q·aj + r·ak的最大值，使得1≤i≤j≤k≤n。帮助Snape找到x的值。请注意x的值可能是负数。<br><code>Input</code><br>第一行输入包含4个整数n，p，q，r（ - 1e9≤p，q，r≤1e9, 1≤n≤1e5）。<br>下一行输入包含n个空格分隔的整数a1，a2，… an（ - 1e9≤ai≤1e9）。<br><code>Output</code><br>输出p≤ai+ q·aj + r·ak的最大值，只要1≤i≤j≤k≤n即可得到。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">30</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">-3</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-2</span> <span class="number">-3</span> <span class="number">-4</span> <span class="number">-5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">12</span></span><br><span class="line">Note</span><br><span class="line">In the first sample case, we can take i = j = k = <span class="number">5</span>, thus making the answer as <span class="number">1</span>·<span class="number">5</span> + <span class="number">2</span>·<span class="number">5</span> + <span class="number">3</span>·<span class="number">5</span> = <span class="number">30.</span></span><br><span class="line"></span><br><span class="line">In second sample case, selecting i = j = <span class="number">1</span> and k = <span class="number">5</span> gives the answer <span class="number">12.</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>找到a[i]<em>p+a[j]</em>q+a[k]*r的最大值，i&lt;=j&lt;=k;<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//每次更新</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n,a1,a2,a3,a=<span class="number">-8e18</span>,b=<span class="number">-8e18</span>,c=<span class="number">-8e18</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a1&gt;&gt;a2&gt;&gt;a3; <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        a=max(a,a1*x);</span><br><span class="line">        b=max(b,a+a2*x);</span><br><span class="line">        c=max(c,b+a3*x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前后缀维护</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> L[N],R[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> p,q,r;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p &gt;&gt; q &gt;&gt; r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    L[<span class="number">1</span>] = a[<span class="number">1</span>]*p;R[n] = a[n]*r;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">        L[i] = max(L[i<span class="number">-1</span>],a[i]*p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-1</span>;i &gt;= <span class="number">1</span>;i--)</span><br><span class="line">        R[i] = max(R[i+<span class="number">1</span>],a[i]*r);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> maxn = -(<span class="number">1l</span>l&lt;&lt;<span class="number">63</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        maxn = max(maxn , L[i]+a[i]*q+R[i]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxn &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="赛题分析"><a href="#赛题分析" class="headerlink" title="赛题分析"></a>赛题分析</h2><p>Description:<br>著名出题人小Q每次比赛后都会写一份《赛题分析》，包含比赛概况、每题的参考算法以及一些统计数值。<br>对于一道题来说，小Q会统计最短的验题人代码长度(Shortest judge solution)以及赛内参赛队伍最短的AC代码长度(Shortest team solution)。<br>统计验题人代码长度比较容易，因为验题人最多也不会超过20个。但是统计选手代码长度就不容易了，因为大赛区动辄三四百支队伍。<br>请写一个程序，帮助小Q统计最短代码长度。<br><code>Input</code><br>第一行包含一个正整数T(1≤T≤13)，表示赛题数量。<br>每道题第一行包含两个整数n,m(2≤n≤20,0≤m≤500)，分别表示验题人数量以及AC了该题的队伍数量。<br>第二行包含n个正整数a1,a2,…,an(50≤ai≤65536)，依次表示每个验题人的代码字节数。<br>第三行包含m个正整数b1,b2,…,bn(50≤bi≤65536)，依次表示每支AC队伍的代码字节数。若m=0则该行为空行。<br><code>Output</code><br>对于第i(1≤i≤T)道题，输出三行，第一行输出Problem x:，其中x=i+1000。<br>第二行输出Shortest judge solution: y bytes.，其中y表示最短的验题人代码字节数。<br>第三行输出Shortest team solution: z bytes.，其中z表示最短的选手代码字节数，若不存在请输出N/A。<br>注意：间隔都是一个空格。<br></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="keyword">Input</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">3627</span> <span class="number">1460</span> <span class="number">5288</span></span><br><span class="line"><span class="number">2365</span> <span class="number">2671</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">5510</span> <span class="number">7682</span></span><br><span class="line">Sample Output</span><br><span class="line">Problem <span class="number">1001</span>:</span><br><span class="line"><span class="keyword">Shortest</span> judge solution: <span class="number">1460</span> bytes.</span><br><span class="line"><span class="keyword">Shortest</span> team solution: <span class="number">2365</span> bytes.</span><br><span class="line">Problem <span class="number">1002</span>:</span><br><span class="line"><span class="keyword">Shortest</span> judge solution: <span class="number">5510</span> bytes.</span><br><span class="line"><span class="keyword">Shortest</span> team solution: <span class="keyword">N</span>/A bytes.</span><br></pre></td></tr></table></figure><p></p><blockquote><p>排序题</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30</span>], b[<span class="number">600</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">1001</span>;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">sort(a, a + n);</span><br><span class="line">sort(b, b + m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Problem %d:\n"</span>,k ++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Shortest judge solution: %d bytes.\n"</span>,a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span>(m != <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Shortest team solution: %d bytes.\n"</span>,b[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Shortest team solution: N/A bytes.\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="差异的可分割性"><a href="#差异的可分割性" class="headerlink" title="差异的可分割性"></a>差异的可分割性</h2><p>Description:<br>现在有n个整数，在这n个数中找出k个数，保证这k个数中任意两个数差的绝对值可以被m整除。<br><code>Input</code><br>第一行输入三个整数n，k，m(2&lt;=k&lt;=n&lt;=100000,1&lt;=m&lt;=100000)。<br>第二行包含n个整数a1，a2，…，  an（0 &lt;= ai &lt;= 10^9 )。<br><code>Output</code><br>如果不存在这样的k个数，输出”No”；<br>否则输出”Yes”后，在下一行输出这k个数,数与数之间用空格隔开。 (存在多种情况，输出任意一种)。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line">Output</span><br><span class="line">Yes</span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line">Output</span><br><span class="line">No</span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">7</span> <span class="number">7</span> <span class="number">7</span></span><br><span class="line">Output</span><br><span class="line">Yes</span><br><span class="line"><span class="number">2</span> <span class="number">7</span> <span class="number">7</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>用数组记录每个数对m取模余数相等的有多少个<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> nu[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,k,m,i;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;++i) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;nu[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> u=nu[i]%m;</span><br><span class="line">        ++cnt[u];</span><br><span class="line">        <span class="keyword">if</span>(cnt[u]==k) &#123;</span><br><span class="line">            ans=u;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">-1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nu[i]%m==ans) &#123;</span><br><span class="line">                --k;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;nu[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(k==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="扫雷"><a href="#扫雷" class="headerlink" title="扫雷"></a>扫雷</h2><p>Description:<br>扫雷游戏是晨晨和小璐特别喜欢的智力游戏，她俩最近沉迷其中无法自拔。<br>该游戏的界面是一个矩阵，矩阵中有些格子中有一个地雷，其余格子中没有地雷。 游戏中，格子可能处于己知和未知的状态。如果一个己知的格子中没有地雷，那么该 格子上会写有一个一位数，表示与这个格子八连通相邻的格子中地雷总的数量。<br>现在，晨晨和小璐在一个3行N列（均从1开始用连续正整数编号）的矩阵中进 行游戏，在这个矩阵中，第2行的格子全部是己知的，并且其中均没有地雷；而另外 两行中是未知的，并且其中的地雷总数量也是未知的。<br>晨晨和小璐想知道，第1行和第3行有多少种合法的埋放地雷的方案。<br><code>Input</code><br>包含多组测试数据，第一行一个正整数T，表示数据组数。<br>每组数据由一行仅由数字组成的长度为N的非空字符串组成，表示矩阵有3行N 列，字符串的第i个数字字符表示矩阵中第2行第i个格子中的数字。<br>保证字符串长度N &lt;= 10000，数据组数&lt;= 100。<br><code>Output</code><br>每行仅一个数字，表示安放地雷的方案数mod100,000,007的结果。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">000</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>这一题，你会发现确定了第一列的摆放方案，后面所有的都就确定了。。所以我们就枚举第一列的方案数，一共就有0,1,2三种，注意我们操作的是每一列，所以注意不能超过2个。。然后，模拟姿势就是，因为这个是身边的八个格子，枚举当前列的时候，我们要把它当成八个格子三列中的最后一列，以中间列为标准，设dp为枚举状态每一列已经放的个数，num为题目告诉的雷数，那么枚举每一列的时候，都要看前一列（八个格子三列中的中间列），用num[i-1]-dp[i-2]-dp[i-1]，即减去中间列左面放的，自己这一列放的，就是右边放的了，这样就满足了num[i]的数量。。姿势很重要。。然后就是计数了，如果当前放了0个或者两个，i列跟i-1列的方案数是一样的，如果是1的话，那i列就是i-1列的两倍了。。</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod = <span class="number">1e8</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn], dp[maxn];</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            num[i+<span class="number">1</span>] = str[i] - <span class="string">'0'</span>;</span><br><span class="line">        ll ans = <span class="number">1</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num[<span class="number">1</span>]; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; <span class="number">2</span>) <span class="keyword">break</span>;  <span class="comment">//控制条件</span></span><br><span class="line">            dp[<span class="number">1</span>] = i;</span><br><span class="line">            <span class="keyword">int</span> j;</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">2</span>; j &lt;= n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> k = num[j<span class="number">-1</span>] - dp[j<span class="number">-1</span>] - dp[j<span class="number">-2</span>];</span><br><span class="line">                <span class="keyword">if</span>(k &gt; <span class="number">2</span> || k &lt; <span class="number">0</span>) <span class="keyword">break</span>;  <span class="comment">//控制条件，这些都容易漏</span></span><br><span class="line">                dp[j] = k;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j &lt;= n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(dp[n<span class="number">-1</span>] + dp[n] != num[n]) <span class="keyword">continue</span>;   <span class="comment">//这里一定要有，区域赛的题好几题都是策略完了，然后要判定一下。。按照这个策略，看看最后两列是不是相同</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[i] == <span class="number">1</span>)</span><br><span class="line">                    ans = (ans * <span class="number">2</span>) % Mod;</span><br><span class="line">            &#125;</span><br><span class="line">            res = (res + ans) % Mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="派对柠檬水"><a href="#派对柠檬水" class="headerlink" title="派对柠檬水"></a>派对柠檬水</h2><p>Description:<br>点完菜，他们发现好像觉得少了点什么？</p><p>想想马上就要回老家了某不愿透露姓名的林姓学长再次却陷入了沉思。。。。。。。。。<br>他默默的去前台打算点几瓶二锅头。<br>他发现菜单上有n 种不同毫升的酒. 第 i 种有2i - 1 毫升价格为ci 元.商店中每种类型的酒的数量可以被认为是无限的。.<br>他对于自己能喝多少还是有点B-Tree的，但是他认为喝酒一定要喝的尽兴，于是他打算买至少L 毫升，但是又要花最少的钱，现在他想知道他最少需要花多少钱</p><p><code>Input</code><br>第一行输入两个整数 n and L (1 ≤ n ≤ 30; 1 ≤ L ≤ 109) — 代表有n总酒和需要买的数量<br>第二行输入 n个整数s c1, c2, …, cn (1 ≤ ci ≤ 109) —代表第i种酒需要的钱数<br><code>Output</code><br>输出一个整数，他买至少L 了毫升，所花的最少钱数<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span> <span class="number">12</span></span><br><span class="line"><span class="number">20</span> <span class="number">30</span> <span class="number">70</span> <span class="number">90</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">150</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">10000</span> <span class="number">1000</span> <span class="number">100</span> <span class="number">10</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">10</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">100</span> <span class="number">1000</span> <span class="number">10000</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">30</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">5</span> <span class="number">787787787</span></span><br><span class="line"><span class="number">123456789</span> <span class="number">234567890</span> <span class="number">345678901</span> <span class="number">456789012</span> <span class="number">987654321</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">44981600785557577</span></span><br><span class="line">Note</span><br><span class="line">在第一个例子中，你应该花<span class="number">90</span>元购买一个<span class="number">8</span>毫升的，花<span class="number">60</span>元的购买两个<span class="number">2</span>毫升的。总共你会得到<span class="number">12</span>毫升只要<span class="number">150</span>元。</span><br><span class="line"></span><br><span class="line">在第二个例子中，即使你只需要<span class="number">3</span>毫升，但是购买一个<span class="number">10</span>元<span class="number">8</span>毫升的便宜一些。</span><br><span class="line"></span><br><span class="line">在第三个例子中，最好<span class="number">10</span>元购买三个<span class="number">1</span>毫升的。</span><br></pre></td></tr></table></figure><p></p><p><code>题目大意</code></p><blockquote><p>有 n 种柠檬汁，第 i 种每瓶的容量为 2^(i-1) 升，价格为 Ci，问至少买 L 升柠檬汁最少花多少钱？</p></blockquote><p><code>题解</code></p><blockquote><p>一看题，第一感觉是 DP，但是由于购买数可以超过 L 升，并且 L 太大了，所以不能用 DP解决。我们采取贪心的策略：优先买单价更低的。这样会出现一个问题，剩余量如果不够一瓶，我们是买一瓶单价最低的呢？还是从单价更高的中拼一下呢？因为买一瓶单价最低的话会产生一点浪费。所以我们就可以按照这个思路用 DFS做。<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line">LL n,mn;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LL cost,lit; <span class="comment">//每瓶的价格和容量</span></span><br><span class="line"><span class="keyword">double</span> v; <span class="comment">//单价 /升</span></span><br><span class="line">&#125; a[<span class="number">33</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.v&lt;b.v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL dep,LL res,LL ans)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//参数：当前位置，剩余量，当前花费</span></span><br><span class="line"><span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ans&gt;=mn) <span class="keyword">return</span>; <span class="comment">//如果当前花费比最小值大则退出</span></span><br><span class="line"><span class="keyword">if</span>(dep==n||res&lt;=<span class="number">0</span>)</span><br><span class="line">&#123; <span class="comment">//如果搜索完毕或者已经购买完，则更新最小值并退出</span></span><br><span class="line"><span class="keyword">if</span>(ans&lt;mn) mn=ans;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL x=res/a[dep].lit; <span class="comment">//当前种柠檬汁可以买多少瓶</span></span><br><span class="line"><span class="keyword">if</span>(res%a[dep].lit!=<span class="number">0</span>)</span><br><span class="line">&#123; <span class="comment">//如果剩余不够一瓶，则多买一瓶</span></span><br><span class="line">x++;</span><br><span class="line">f=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans+=x*a[dep].cost; <span class="comment">//先多买一瓶当前种的</span></span><br><span class="line">res-=x*a[dep].lit;</span><br><span class="line">dfs(dep+<span class="number">1</span>,res,ans);</span><br><span class="line"><span class="keyword">if</span>(f==<span class="number">1</span>)</span><br><span class="line">&#123; <span class="comment">//如果多买了，则在回溯时还原</span></span><br><span class="line">ans-=a[dep].cost;</span><br><span class="line">res+=a[dep].lit;</span><br><span class="line">dfs(dep+<span class="number">1</span>,res,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL i,l;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;l))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i].cost);</span><br><span class="line">a[i].lit=<span class="number">1</span>&lt;&lt;i;</span><br><span class="line">a[i].v=(<span class="keyword">double</span>)a[i].cost/a[i].lit;</span><br><span class="line">&#125;</span><br><span class="line">sort(a,a+n,cmp); <span class="comment">//按单价升序排序</span></span><br><span class="line">mn=<span class="number">0x7fffffffffffffff</span>;</span><br><span class="line">dfs(<span class="number">0</span>,l,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,mn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="Count"><a href="#Count" class="headerlink" title="Count"></a>Count</h2><p>Description:<br>Farmer John有n头奶牛.<br>某天奶牛想要数一数有多少头奶牛,以一种特殊的方式:<br>第一头奶牛为1号,第二头奶牛为2号,第三头奶牛之后,假如当前奶牛是第n头,那么他的编号就是2倍的第n-2头奶牛的编号加上第n-1头奶牛的编号再加上自己当前的n的三次方为自己的编号.<br>现在Farmer John想知道,第n头奶牛的编号是多少,估计答案会很大,你只要输出答案对于123456789取模.<br><code>Input</code><br>第一行输入一个T,表示有T组样例<br>接下来T行,每行有一个正整数n,表示有n头奶牛 (n&gt;=3)<br>其中，T=10^4,n&lt;=10^18<br><code>Output</code><br>共T行,每行一个正整数表示所求的答案<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">700</span></span><br><span class="line"><span class="number">7486</span></span><br><span class="line"><span class="number">64651</span></span><br><span class="line"><span class="number">527023</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>数据范围这么大，直接矩阵快速幂解决<br><code>题意</code><br>f[n] = 2*f[n-2] + f[n-1] + n^3，n&lt;=1e18，求f[n] 。</p></blockquote><p><code>题解</code><br>在计算 f[n+1] 的时候， 要变为 ，所以构造的矩阵中需要有这几项，然后因为引入了 ，所以 要变为 ，因为 项、项、常数项都已经存在，所以不需要引入新的项，其余各项均可通过这几项计算出。<br>code:<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">typedef long long ll;</span><br><span class="line"></span><br><span class="line">const int MAX = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line">const int mod = <span class="number">123456789</span>;</span><br><span class="line"></span><br><span class="line">ll n;</span><br><span class="line"></span><br><span class="line">typedef struct &#123;</span><br><span class="line">ll m[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125;Matrix;</span><br><span class="line"></span><br><span class="line">Matrix Mul(Matrix a, Matrix b)</span><br><span class="line">&#123;</span><br><span class="line">Matrix c;</span><br><span class="line">memset(c.m, <span class="number">0</span>, sizeof(c.m));</span><br><span class="line">for (int i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">for (int k = <span class="number">0</span>; k &lt; <span class="number">6</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">c.m[i][j] += ((a.m[i][k] * b.m[k][j]) % mod + mod) % mod;</span><br><span class="line">c.m[i][j] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Matrix fastm(Matrix a, ll num)</span><br><span class="line">&#123;</span><br><span class="line">Matrix res;</span><br><span class="line">memset(res.m, <span class="number">0</span>, sizeof(res.m));</span><br><span class="line">for (int i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">res.m[i][i] = <span class="number">1</span>;</span><br><span class="line">while (num)</span><br><span class="line">&#123;</span><br><span class="line">if (num &amp; <span class="number">1</span>)</span><br><span class="line">res = Mul(res, a);</span><br><span class="line">num &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = Mul(a, a);</span><br><span class="line">&#125;</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int T;</span><br><span class="line">scanf(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">Matrix a;</span><br><span class="line">memset(a.m, <span class="number">0</span>, sizeof(a.m));</span><br><span class="line">a.m[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>, a.m[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">a.m[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">a.m[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">1</span>, a.m[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">a.m[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>, a.m[<span class="number">3</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">a.m[<span class="number">4</span>][<span class="number">2</span>] = <span class="number">1</span>, a.m[<span class="number">4</span>][<span class="number">3</span>] = <span class="number">2</span>, a.m[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">a.m[<span class="number">5</span>][<span class="number">2</span>] = <span class="number">1</span>, a.m[<span class="number">5</span>][<span class="number">3</span>] = <span class="number">3</span>, a.m[<span class="number">5</span>][<span class="number">4</span>] = <span class="number">3</span>, a.m[<span class="number">5</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line">ll st[<span class="number">10</span>];</span><br><span class="line">st[<span class="number">0</span>] = <span class="number">2</span>, st[<span class="number">1</span>] = <span class="number">1</span>, st[<span class="number">2</span>] = <span class="number">27</span>, st[<span class="number">3</span>] = <span class="number">27</span>, st[<span class="number">4</span>] = <span class="number">9</span>, st[<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line">while (T--)</span><br><span class="line">&#123;</span><br><span class="line">scanf(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">n -= <span class="number">2</span>;</span><br><span class="line">Matrix b = fastm(a, n);</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line">for (int i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">ans = (ans + b.m[i][<span class="number">0</span>] * st[i] % mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line">printf(<span class="string">"%lld<span class="subst">\n</span>"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="诊断"><a href="#诊断" class="headerlink" title="诊断"></a>诊断</h2><p>Description:<br>Hao得了重感冒。他将要去看 n 名医生来找出确切的诊断。每个医生都需要之前医生的所有的诊断信息，所以Hao需要按照规定的顺序访问医生（比如Hao应该先访问 1号医生,2号医生, 然后是3号医生，等等）。 Hao将从上一位医生那里获取关于他的健康信息。</p><p>医生有一个奇怪的工作表。第i名医生从si天起工作之后会每隔di 天再工作.所以医生在si, si + di, si + 2di, ….这段时间是处以上班状态</p><p>Hao一天只能访问一名医生，Hao访问完所有医生之后所花费的最短时间是多少？</p><p><code>Input</code><br>First line contains an integer n — number of doctors (1 ≤ n ≤ 1000).</p><p>Next n lines contain two numbers si and di (1 ≤ si, di ≤ 1000).</p><p><code>Output</code><br>Output a single integer — the minimum day at which Borya can visit the last doctor.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">Input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">4</span></span><br><span class="line">Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span></span><br><span class="line"><span class="number">6</span> <span class="number">5</span></span><br><span class="line">Output</span><br><span class="line"><span class="number">11</span></span><br><span class="line">Note</span><br><span class="line">In the first sample case, Borya can visit all doctors on days <span class="number">2</span>, <span class="number">3</span> and <span class="number">4.</span></span><br><span class="line"></span><br><span class="line">In the second sample case, Borya can visit all doctors on days <span class="number">10</span> and <span class="number">11.</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>题目大意说的是找到最晚的一天，那就一只加呗，直到最后一天<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">&#125;e[<span class="number">1001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i ++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;e[i].x, &amp;e[i].y);</span><br><span class="line"><span class="keyword">int</span> ans = e[<span class="number">1</span>].x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= t;)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[i].x &gt; ans)</span><br><span class="line">&#123;</span><br><span class="line">ans = e[i].x;</span><br><span class="line">i ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(e[i].x &lt;= ans)</span><br><span class="line">&#123;</span><br><span class="line">e[i].x += e[i].y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:54 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day29&quot;&gt;&lt;a href=&quot;#Day29&quot; class=&quot;headerlink&quot; title=&quot;Day29&quot;&gt;&lt;/a&gt;&lt;center&gt;Day29&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天学长的积分赛&lt;br&gt;好好学习！！！&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/26/6PCxrR2kgmGzJDj.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="集训" scheme="http://yoursite.com/categories/ACM/%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Day28</title>
    <link href="http://yoursite.com/2019/08/17/Day28/"/>
    <id>http://yoursite.com/2019/08/17/Day28/</id>
    <published>2019-08-16T16:00:00.000Z</published>
    <updated>2019-08-26T12:26:46.274Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Day28"><a href="#Day28" class="headerlink" title="Day28"></a><center>Day28</center></h1><p><center>今天积分赛<br>好好学习！！！<br><img src="https://i.loli.net/2019/08/26/kXoqOGB3evIcWxH.jpg" alt><br><a id="more"></a></center></p><h2 id="Steve的水池"><a href="#Steve的水池" class="headerlink" title="Steve的水池"></a>Steve的水池</h2><p>Description:<br>Steve 拥有深棕色头发，晒黑的褐色皮肤，紫色的眼睛，身穿青蓝色的衬衫，一条紫蓝色牛仔裤以及灰黑色的鞋子。他还拥有2px至4px大小的胳膊。Steve 似乎拥有轻微的浅棕色胡子茬，或者拥有一张嘴，这取决于你怎样看他。</p><p>Steve 需要种庄稼，圈养动物来获得食物来源，为了抵抗怪物，他需要挖矿获得铁锭，金锭，甚至钻石来制作更高级的武器装备，通常，他还需要对武器装备附魔，来提升效果，为此，他不得不需要经常下矿。</p><p>在经历了枯燥又乏味的矿工生活后，Steve 打算建造一个水池来放松放松，他打算把水池建造成一个高度为1，长宽分别为N,M的水池，为此，他需要向水池中倒水，但Steve 只有一个水桶，他不想要浪费更多的铁锭来制作更多的水桶，为此，他需要尽可能少的往水池里倒水以尽快建造好水池，但是Steve 的世界有一个很奇怪的特性，每向一个区域倒水的时候，在这个区域会形成一个水源，当一个区域四个方向中至少有两个方向紧挨着这个区域的地方都为水源的话，这个区域也将会形成水源，Steve 想要知道最少他需要倒多少次水才能使水池每处都形成水源。</p><p><code>输入格式</code><br>输入第1行为一个整数T。（1 ≤ T ≤ 1000）<br>第2行到第T+1行每行为两个整数N,M代表水池的长宽。（1 ≤ N,M ≤ 10^9）</p><p><code>输出格式</code><br>输出为T行，每行输出一个整数，代表Steve 最少需要的倒水次数。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>规律题:规律为(n+m)/2</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">ceil</span>(<span class="number">1.0</span> * (n + m) / <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="掷骰子"><a href="#掷骰子" class="headerlink" title="掷骰子"></a>掷骰子</h2><p>Description:<br>骰子，中国传统民间娱乐用来投掷的博具，早在战国时期就已经被发明。</p><p>现在给你 n 个骰子，求 n 个骰子掷出点数之和为 a 的概率是多少。<br><code>输入格式</code><br>第一行输入一个整数 T，表示有 T 组测试数据（1≤T≤10）<br>每组测试数据输入两个整数n,a，表示共有n个骰子，骰子点数总和为a(1≤n≤1000,n≤a≤6∗n)</p><p><code>输出格式</code><br>如题。答案对 109+7 取余。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">166666668</span></span><br><span class="line"><span class="number">27777778</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>dp[i][j]表示投掷玩i个骰子和为j的方案书，dp[i][j]=求和（dp[i-1][j-k]）,k为第i个骰子的点数。暴力转移即可</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>+<span class="number">10</span>;</span><br><span class="line">ll dp[maxn][maxn*<span class="number">6</span>];</span><br><span class="line"><span class="function">ll <span class="title">quickpow</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">ll res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">a=a*a%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">int</span> n,a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;a);</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=<span class="number">6</span>*n;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j<span class="number">-6</span>;k&lt;j;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(k&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">dp[i][j]=(dp[i][j]+dp[i<span class="number">-1</span>][k])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[n][a]*quickpow(quickpow(<span class="number">6</span>,n),mod<span class="number">-2</span>)%mod);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">solve();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Subsequence"><a href="#Subsequence" class="headerlink" title="Subsequence"></a>Subsequence</h2><p>Description:<br>Steve 和 Alex 喜欢研究字符串，今天他们学到了一个新名词—“Subsequence“。对于字符串 s 和 t 来说，t 被称为 s 的”Subsequence“当且仅当 s 删除若干字母后能得到 t （也可以不删)。</p><p>例如：”ab”,”ac”,”bc”都是”abc”的”Subsequence“，而”ba”和”ca”则不是。</p><p>现在 Steve 和 Alex 手中各自有一个只由小写字母组成的字符串 s 和 t ，请判断 t 是否是 s 的”Subsequence“。</p><p><code>输入格式</code><br>第一行输入一个T,代表数据组数。<br>接下来输入T组，每组包含两行，第一行输入s，第二行输入t。<br>(1≤T≤1000,1≤|t|≤|s|≤10000)</p><p><code>输出格式</code><br>输出T行，如果t是s的”Subsequence“，输入”YES”,否则输出”NO”。<br></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">样例</span></span><br><span class="line"><span class="string">input</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"><span class="string">ac</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"><span class="string">ba</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"><span class="string">a</span></span><br><span class="line"><span class="string">output</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">YES</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>设置一个指针j,如果s1i = s2j,j往后移，判断到最后j是否为m即可，m为t的长度</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> s1, s2;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line"><span class="keyword">int</span> n = s1.size();</span><br><span class="line"><span class="keyword">int</span> m = s2.size();</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; n &amp;&amp; j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s1[i] == s2[j]) j ++;</span><br><span class="line">i ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j == m) <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Steve的游戏名"><a href="#Steve的游戏名" class="headerlink" title="Steve的游戏名"></a>Steve的游戏名</h2><p>Description:<br>定义一个字符串s是一步字符串，当 s 满足以下两个条件：</p><p>s 中仅包含小写字母。<br>对于任意的1≤i&lt;|s|满足，s[i]+1=s[i+1]，也就是说，s[i]在英文字母表中的位置的下一位是s[i+1]，特别的，我们认为z的下一位是a，其中|s|表示s的长度。<br>举个例子：abc、zab 都是一步字符串，而 acd、zbc不是。<br>Steve 特别喜欢长长的名字，因此他在 Minecraft 中的名字特别特别的长。<br>Alex 对 Steve 的名字特别感兴趣，她想知道 Steve 的名字中有多少个子串是一步字符串。<br>形式化来说，对于一个字符串 s，问有多少对 &lt;i,j&gt; 满足 1≤i≤j≤n，且 s[i]…s[j] 是一步字符串。<br>保证 Steve 在 Minecraft 中的名字仅包含小写英文字母。</p><p><code>输入格式</code><br>输入包含多组测试数据。<br>第一行一个数字 T ，表示测试数据个数。<br>接下来每两行表示一个测试数据。<br>第一行一个数字 n 。<br>第二行一个长度为 n 的字符串 s。</p><p>数据范围：1≤T≤100,1≤n≤2⋅105</p><p><code>输出格式</code><br>一个数字表示答案。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">abc</span><br><span class="line"><span class="number">3</span></span><br><span class="line">zab</span><br><span class="line">output</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code></p><blockquote><p>O(|s|)的遍历即可,遇到不满足条件的更新最新的满足条件的最大区间|l,r|,答案加上(r-l+1)*(r-l)/2</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t, n;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">ll x = <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((str[i] - <span class="string">'a'</span> + <span class="number">1</span>) % <span class="number">26</span> == (str[i + <span class="number">1</span>] - <span class="string">'a'</span>) % <span class="number">26</span>) x ++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ans += (<span class="number">1</span> + x) * x / <span class="number">2</span> - x;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x) ans += (<span class="number">1</span> + x) * x / <span class="number">2</span> - x;</span><br><span class="line">ans += n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="数字串"><a href="#数字串" class="headerlink" title="数字串"></a>数字串</h2><p>Description:<br>给你一个长度为 n 的数字串，找出其中位数不超过15位的不包含前导0和后导0的数 x ,使得 x+f(x) 是一个回文数,其中 f(x) 表示将 x 反转过来的数。</p><p><code>输入格式</code><br>多组输入，处理到文件结束,样例保证不超过1000组。<br>每组第一行一个整数 n ，表示数字串的长度(1≤n≤1000)，<br>接下来一行输入一个长度为 n 的数字串。</p><p><code>输出格式</code><br>第一行一个数 m 表示数字串中符合条件的数的个数(数可以重复)。<br>第二行从小到大输出 m 个数，每个数字之间以空格隔开。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">output</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">12</span> <span class="number">23</span> <span class="number">123</span></span><br><span class="line">提示</span><br><span class="line"><span class="number">1</span>+<span class="number">1</span>=<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>+<span class="number">2</span>=<span class="number">4</span>,</span><br><span class="line"><span class="number">3</span>+<span class="number">3</span>=<span class="number">6</span>,</span><br><span class="line"><span class="number">12</span>+<span class="number">21</span>=<span class="number">33</span>,</span><br><span class="line"><span class="number">23</span>+<span class="number">32</span>=<span class="number">55</span>,</span><br><span class="line"><span class="number">123</span>+<span class="number">321</span>=<span class="number">444</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>暴力即可过<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function">ll <span class="title">fan</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        res=res*<span class="number">10</span>+x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n))&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'0'</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ll x=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">15</span> &amp;&amp; i+j&lt;n;j++)&#123;</span><br><span class="line">                x=x*<span class="number">10</span>+s[i+j]-<span class="string">'0'</span>;</span><br><span class="line">                <span class="keyword">if</span>(s[i+j]==<span class="string">'0'</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(x+fan(x)==fan(x+fan(x)))&#123;</span><br><span class="line">                    a[sum++]=x;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+sum);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sum;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">solve();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="Alex的午饭"><a href="#Alex的午饭" class="headerlink" title="Alex的午饭"></a>Alex的午饭</h2><p>Description:<br>Steve和Alex每天都在为午饭吃什么而发愁，因为吃的东西实在是太多了，而且很多都特别好吃。为了解决吃什么的问题，Alex决定每次吃饭前发布一个问卷调查，让他的好朋友选出他们今天最想吃的食物，然后Alex会根据问卷的结果来确定吃什么</p><p>每个问卷只收集一种食物，每个食物都由一个数字num来表示。Alex会选出问卷中出现次数超过问卷总数一半的数字来决定今天的午饭</p><p><code>输入格式</code><br>单组输入，每组两行<br>第一行有一个整数N (1≤N≤2×10^7)<br>第二行有N个整数num (num≤10^18)，代表每个问卷中的数字</p><p><code>输出格式</code><br>输出一个整数，即出现次数超过N/2的数<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">output</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>ps:用map做的话会超时<br>好像是什么xx摩尔算法吧</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">ll x, ans;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; t; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(!res)</span><br><span class="line">ans = x;</span><br><span class="line"><span class="keyword">if</span>(x == ans)</span><br><span class="line">res ++;</span><br><span class="line"><span class="keyword">if</span>(x != ans)</span><br><span class="line">res --;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="The-war-land"><a href="#The-war-land" class="headerlink" title="The war land"></a>The war land</h2><p>Description:<br>Steve 和 Alex 开始玩一款叫做战争大陆的游戏，整个地图由 n 个岛屿和 n−1 条桥梁组成，第 i 个岛屿的战略能力为 wi ，整个地图是联通的。游戏开始 Steve 和 Alex 需要断掉一座桥梁，这样整个地图就被划分为了两个联通的区域 A 和 B 并且 A 和 B 之间无法到达。<br>为了使游戏尽可能公平，现在他们想让 A 和 B 的战略能力之和的差值的绝对值最小。</p><p><code>输入格式</code><br>第一行输入T代表数据组数。<br>接下来T组，对于每一组：<br>第一行输入n，接下来n−1行，每行输入两个数字u,v代表u和v之间的岛屿有一座桥梁，最后一行输入n个数，第i个数代表第i个岛屿的战略值wi。<br>(1≤T≤10,1≤n≤100000,1≤wi≤10^9,1≤u,v≤n)</p><p><code>输出格式</code><br>输出T组，对于每组输入，输出最小的差值的绝对值。<br><img src="https://i.loli.net/2019/08/18/esabHtQ9OGoc3ZS.png" alt="picg.9GafXAtx.png"><br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">7</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p></p><p><code>题意</code></p><blockquote><p>这是一棵树，我们以1为根节点DFS统计以i为根的子树的大小，然后切一条边其实就是割掉一个子树，处理之后枚举即可。复杂度O(T·n)</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200001</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> siz[N],w[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> par)</span></span>&#123;</span><br><span class="line">    siz[u]=w[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])&#123;</span><br><span class="line">        <span class="keyword">if</span>(v==par) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(v,u);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(siz,<span class="number">0</span>,<span class="keyword">sizeof</span>(siz));</span><br><span class="line">        <span class="keyword">int</span> n;<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) G[i].clear();</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">            G[u].push_back(v);</span><br><span class="line">            G[v].push_back(u);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">999999999999999999</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            ans=min(ans,<span class="built_in">abs</span>(siz[<span class="number">1</span>]<span class="number">-2</span>*siz[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Number-throry"><a href="#Number-throry" class="headerlink" title="Number throry"></a>Number throry</h2><p>Description:<br>steve 学完了快速幂，现在会他快速的计算：(i^j)%d , Alex 作为一个数学大师，给了 steve 一个问题：已知<br>i∈[1,n],j∈[1,m] ，计算满足 (i^j)%d=0 的 (i,j) 的对数。</p><p><code>输入格式</code><br>T组输入，对于每一组输入三个数n,m,d。<br>(1≤T≤1000,1≤n,m,d≤10^9)。</p><p><code>输出格式</code><br>对于每组输入，输出答案，每个答案占一行。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">10</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">30</span> <span class="number">6</span></span><br><span class="line"><span class="number">100</span> <span class="number">100</span> <span class="number">8</span></span><br><span class="line">output</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">4937</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code><br><img src="https://i.loli.net/2019/08/18/AcCYrNwXRdnGZjF.png" alt="质因子分解.png"></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a);</span><br><span class="line">a=(a*a);</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">ll n,m,d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;m,&amp;d);</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;ll,ll&gt; &gt; prs;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=d;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(d%i==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(d%i==<span class="number">0</span>)&#123;</span><br><span class="line">d/=i;cnt++;</span><br><span class="line">&#125;</span><br><span class="line">prs.push_back(&#123;i,cnt&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">1</span>) prs.push_back(&#123;d,<span class="number">1</span>&#125;);</span><br><span class="line"><span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;=min(m,<span class="number">1L</span>L*<span class="number">30</span>);j++)&#123;</span><br><span class="line">ll g=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:prs)&#123;</span><br><span class="line">g*=qpow(v.first,(v.second+j<span class="number">-1</span>)/j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">30</span>) res+=(m<span class="number">-29</span>)*(n/g);</span><br><span class="line"><span class="keyword">else</span> res+=n/g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Steve的难题"><a href="#Steve的难题" class="headerlink" title="Steve的难题"></a>Steve的难题</h2><p>Description:<br>Steve参加了2019年的暑期集训，在集训最后一场积分赛时，Steve英勇AC，提交了几十发全A了。Steve顿时惊叹，这不都是水题吗，于是接下来碰到的问题却难倒了他。求1n! 模p意义下的值。</p><p><code>输入格式</code><br>多组输入，处理到文件结束。<br>每行输入两个数n,p,(1≤n≤10^5,n&lt;p≤10^9).<br>数据保证 p 是个质数。<br><code>输出格式</code><br>如题<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">7</span></span><br><span class="line"><span class="number">3</span> <span class="number">11</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>求解逆元裸题，可以用exgcd(扩展gcd)，也可以用费马小定理，由于p为质数，因此x的逆元为x^(p-2)%p</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">quick_pow</span><span class="params">(ll a, ll b, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(b &lt;= <span class="number">0</span>) <span class="keyword">return</span> res;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = res * a % p;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = a * a % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//x 的逆元为 x^(p - 2) % p;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n, p;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>, &amp;n, &amp;p))</span><br><span class="line">&#123;</span><br><span class="line">ll res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line">res = res * quick_pow(i, p - <span class="number">2</span>, p) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Steve’s-Shortest-Path"><a href="#Steve’s-Shortest-Path" class="headerlink" title="Steve’s Shortest Path"></a>Steve’s Shortest Path</h2><p>Description:<br>Alex 和 Steve 来到了一个神奇的国度，这个国家有 n 个城市和 m 条道路。这 m 条道路都是双向的，而且这个国家的客车有个特点，每辆客车除出发城市和到达城市外有且仅可经过一个城市。</p><p>假设u城市到v有一条道路并且 v 到 p 有一条道路,那么客车从 u 出发不能到达 v 但是能到达 p，Steve 和 Alex 在编号为 1 的城市,他们想知道能不能到达编号为 n 的城市，如果能，最少需要坐几次客车？</p><p><code>输入格式</code><br>单组输入。<br>第一行输入 n 和 m 代表城市的个数和路径的条数。<br>接下来 m 行每行输入两个数 u 和 v 代表 u 到 v 之间有条路。(2≤n,m≤10^6,1≤u,v≤n)。</p><p><code>输出格式</code><br>如果 Steve 和 Alex 能够到达终点，输出最少需要坐几次车才能到达，否则输出−1。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">样例</span><br><span class="line">input</span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">-1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p></p><p><code>题解</code></p><blockquote><p>直接BFS/Dijkstra即可，记录两个状态分别代表到达i点最短路为奇偶的情况.即dis[i][0]代表到i点走了偶数步的最短路，dis[i][1]代表到i点走了奇数步的最短路，然后答案即为dis[i][0]/2</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec[maxn];</span><br><span class="line"><span class="keyword">int</span> step[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line">    que.push(x);</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    step[x]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        x=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> y=vec[x][i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;vec[y].size();j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> z=vec[y][j];</span><br><span class="line">                <span class="keyword">if</span>(vis[z]) <span class="keyword">continue</span>;</span><br><span class="line">                vis[z]=<span class="number">1</span>;</span><br><span class="line">                step[z]=step[x]+<span class="number">1</span>;</span><br><span class="line">                que.push(z);</span><br><span class="line">                <span class="keyword">if</span>(z==n) <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">        vec[u].push_back(v);</span><br><span class="line">        vec[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    bfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(step[n]==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,step[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day28&quot;&gt;&lt;a href=&quot;#Day28&quot; class=&quot;headerlink&quot; title=&quot;Day28&quot;&gt;&lt;/a&gt;&lt;center&gt;Day28&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天积分赛&lt;br&gt;好好学习！！！&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/26/kXoqOGB3evIcWxH.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="集训" scheme="http://yoursite.com/categories/ACM/%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Day27</title>
    <link href="http://yoursite.com/2019/08/16/Day27/"/>
    <id>http://yoursite.com/2019/08/16/Day27/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2019-08-26T12:26:58.141Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Day27"><a href="#Day27" class="headerlink" title="Day27"></a><center>Day27</center></h1><p><center>今天讲的是 <code>KPM + hash算法</code><br>好好学习！！！<br><a href="https://vjudge.net/contest/320166" target="_blank" rel="noopener">OJ</a><br><img src="https://i.loli.net/2019/08/26/YbZjzyvTSpnhMo5.jpg" alt><br><a id="more"></a></center></p><p><code>PS</code>:</p><blockquote><p>这次的题基本上都是用KMP写的,hash算法的写法等理解好了再补</p></blockquote><h2 id="KMP算法解释"><a href="#KMP算法解释" class="headerlink" title="KMP算法解释"></a>KMP算法解释</h2><blockquote><p>详情注意一下链接<br><a href="https://blog.csdn.net/buppt/article/details/78531384" target="_blank" rel="noopener">前后缀数组的理解</a><br><a href="https://blog.csdn.net/v_july_v/article/details/7041827" target="_blank" rel="noopener">KMP解释</a><br><a href="https://www.cnblogs.com/yjiyjige/p/3263858.html" target="_blank" rel="noopener">KMP白话讲解</a><br><a href="https://www.cnblogs.com/SYCstudio/p/7194315.html" target="_blank" rel="noopener">KMP生动一点的讲解</a></p></blockquote><p>贴一个板子<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,t;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; cal_nxt(<span class="built_in">string</span> s)&#123;</span><br><span class="line">    <span class="keyword">int</span> n=(<span class="keyword">int</span>)s.length();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nxt(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j=nxt[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j]&amp;&amp;j&gt;<span class="number">0</span>) j=nxt[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j]) j++;</span><br><span class="line">        nxt[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nxt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    m=t.length();</span><br><span class="line">    n=s.length();</span><br><span class="line">    <span class="built_in">string</span> T=t+<span class="string">'#'</span>+s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nxt=cal_nxt(T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m+<span class="number">1</span>;i&lt;(<span class="keyword">int</span>)T.length();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nxt[i]==m)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//另一个板子</span></span><br><span class="line"><span class="built_in">string</span> start,en;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">1000010</span>];</span><br><span class="line"><span class="comment">//得到nxt维护数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">-1</span>, nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从头比或相等则比较下去并记录最长公共真前、后缀长度</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[j] == en[k])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//j之前的最长公共真前、后缀长度为k，前缀下标0~k-1，后缀下标j-k~j-1</span></span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];<span class="comment">//k回退到Next[k]的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">getnxt();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//k==-1相当于从start的开始（重新）比较，相等就比下去</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[k] == start[j])</span><br><span class="line">&#123;</span><br><span class="line">++ j;</span><br><span class="line">++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line"><span class="keyword">if</span>(k == m)</span><br><span class="line">&#123;</span><br><span class="line">k = nxt[k];<span class="comment">//把j位置的字符和k位置的字符对齐，便于下次比较</span></span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="hash算法解释"><a href="#hash算法解释" class="headerlink" title="hash算法解释"></a>hash算法解释</h2><blockquote><p>详情注意一下链接<br><a href="https://www.jishuwen.com/d/2AU3#tuit" target="_blank" rel="noopener">解释</a></p></blockquote><p>加一个板子<br></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace  std;</span><br><span class="line">typedef unsigned long long ull;</span><br><span class="line">const ull <span class="built_in">base</span> = <span class="number">2333</span>;</span><br><span class="line">const ull <span class="built_in">mod</span> = <span class="number">1</span>e9+<span class="number">9</span>;</span><br><span class="line">const <span class="built_in">int</span> <span class="built_in">N</span> = <span class="number">1</span>e6+<span class="number">100</span>;</span><br><span class="line">ull hashes[<span class="built_in">N</span>],p[<span class="built_in">N</span>];</span><br><span class="line">ull gethashes(<span class="built_in">int</span> l,<span class="built_in">int</span> r)&#123;</span><br><span class="line">    return (hashes[r]%<span class="built_in">mod</span>-(hashes[l-<span class="number">1</span>]%<span class="built_in">mod</span>*p[r-l+<span class="number">1</span>]%<span class="built_in">mod</span>)%<span class="built_in">mod</span>+<span class="built_in">mod</span>)%<span class="built_in">mod</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">char</span> s[<span class="built_in">N</span>],<span class="built_in">t</span>[<span class="built_in">N</span>];</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">T</span>;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;<span class="built_in">T</span>);</span><br><span class="line">    while(<span class="built_in">T</span>--)&#123;</span><br><span class="line">        scanf(<span class="string">"%s %s"</span>,<span class="built_in">t</span>+<span class="number">1</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">int</span> <span class="built_in">n</span>=strlen(s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">int</span> m=strlen(<span class="built_in">t</span>+<span class="number">1</span>);</span><br><span class="line">        p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">n</span>;i++)&#123;</span><br><span class="line">            hashes[i]=(hashes[i-<span class="number">1</span>]*<span class="built_in">base</span>%<span class="built_in">mod</span>+s[i]%<span class="built_in">mod</span>)%<span class="built_in">mod</span>;</span><br><span class="line">            p[i]=(p[i-<span class="number">1</span>]%<span class="built_in">mod</span>*<span class="built_in">base</span>%<span class="built_in">mod</span>)%<span class="built_in">mod</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ull ans=<span class="number">0</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=m;i++) ans=(ans*<span class="built_in">base</span>%<span class="built_in">mod</span>+<span class="built_in">t</span>[i]%<span class="built_in">mod</span>)%<span class="built_in">mod</span>;</span><br><span class="line">        <span class="built_in">int</span> res=<span class="number">0</span>;</span><br><span class="line">        for(<span class="built_in">int</span> i=m;i&lt;=<span class="built_in">n</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">if</span>(gethashes(i-m+<span class="number">1</span>,i)==ans)&#123;</span><br><span class="line">                res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Number-Sequence"><a href="#Number-Sequence" class="headerlink" title="Number Sequence"></a>Number Sequence</h2><p>Description:<br>Given two sequences of numbers : a[1], a[2], …… , a[N], and b[1], b[2], …… , b[M] (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). Your task is to find a number K which make a[K] = b[1], a[K + 1] = b[2], …… , a[K + M - 1] = b[M]. If there are more than one K exist, output the smallest one.<br><code>Input</code><br>The first line of input is a number T which indicate the number of cases. Each case contains three lines. The first line is two numbers N and M (1 &lt;= M &lt;= 10000, 1 &lt;= N &lt;= 1000000). The second line contains N integers which indicate a[1], a[2], …… , a[N]. The third line contains M integers which indicate b[1], b[2], …… , b[M]. All integers are in the range of [-1000000, 1000000].<br><code>Output</code><br>For each test case, you should output one line which only contain K described above. If no such K exists, output -1 instead.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">13</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">13</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[maxx], b[maxx];</span><br><span class="line"><span class="keyword">int</span> nxt[maxx];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, k = <span class="number">-1</span>;</span><br><span class="line">nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || b[k] == b[j])</span><br><span class="line">&#123;</span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kpm</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">getnxt();</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || b[k] == a[j])</span><br><span class="line">&#123;</span><br><span class="line">++ j;</span><br><span class="line">++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line"><span class="keyword">if</span>(k == m)</span><br><span class="line">&#123;</span><br><span class="line">res = j;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> res - m + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++) <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; kpm() &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Oulipo"><a href="#Oulipo" class="headerlink" title="Oulipo"></a>Oulipo</h2><p>Description:<br>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’. He was a member of the Oulipo group. A quote from the book:</p><p>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…</p><p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.</p><p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.<br><code>Input</code><br>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p><p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.<br><code>Output</code><br>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">3</span></span><br><span class="line">BAPC</span><br><span class="line">BAPC</span><br><span class="line">AZA</span><br><span class="line">AZAZAZA</span><br><span class="line">VERDI</span><br><span class="line">AVERDXIVYERDIAN</span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> start,en;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">1000010</span>];</span><br><span class="line"><span class="comment">//得到nxt维护数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">-1</span>, nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从头比或相等则比较下去并记录最长公共真前、后缀长度</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[j] == en[k])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//j之前的最长公共真前、后缀长度为k，前缀下标0~k-1，后缀下标j-k~j-1</span></span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];<span class="comment">//k回退到Next[k]的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">getnxt();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//k==-1相当于从start的开始（重新）比较，相等就比下去</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[k] == start[j])</span><br><span class="line">&#123;</span><br><span class="line">++ j;</span><br><span class="line">++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line"><span class="keyword">if</span>(k == m)</span><br><span class="line">&#123;</span><br><span class="line">k = nxt[k];<span class="comment">//把j位置的字符和k位置的字符对齐，便于下次比较</span></span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; en &gt;&gt; start;</span><br><span class="line">n = start.size();</span><br><span class="line">m = en.size();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; kmp() &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="剪花布条"><a href="#剪花布条" class="headerlink" title="剪花布条"></a>剪花布条</h2><p>Description:<br>一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？<br><code>Input</code><br>输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。<br><code>Output</code><br>输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。<br></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sample</span> <span class="keyword">Input</span></span><br><span class="line">abcde a3</span><br><span class="line">aaaaaa  aa</span><br><span class="line">#</span><br><span class="line"><span class="keyword">Sample</span> Output</span><br><span class="line">0</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> start,en;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">10010</span>];</span><br><span class="line"><span class="comment">//得到nxt维护数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">-1</span>, nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从头比或相等则比较下去并记录最长公共真前、后缀长度</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[j] == en[k])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//j之前的最长公共真前、后缀长度为k，前缀下标0~k-1，后缀下标j-k~j-1</span></span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];<span class="comment">//k回退到Next[k]的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">getnxt();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j, k;</span><br><span class="line">j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//k==-1相当于从start的开始（重新）比较，相等就比下去</span></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || en[k] == start[j])</span><br><span class="line">&#123;</span><br><span class="line">++ j;</span><br><span class="line">++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line"><span class="keyword">if</span>(k == m)</span><br><span class="line">&#123;</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; start)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(start == <span class="string">"#"</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; en;</span><br><span class="line">n = start.size();</span><br><span class="line">m = en.size();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; kmp() &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Cyclic-Nacklace"><a href="#Cyclic-Nacklace" class="headerlink" title="Cyclic Nacklace"></a>Cyclic Nacklace</h2><p>Description:<br>CC always becomes very depressed at the end of this month, he has checked his credit card yesterday, without any surprise, there are only 99.9 yuan left. he is too distressed and thinking about how to tide over the last days. Being inspired by the entrepreneurial spirit of “HDU CakeMan”, he wants to sell some little things to make money. Of course, this is not an easy task.</p><p>As Christmas is around the corner, Boys are busy in choosing christmas presents to send to their girlfriends. It is believed that chain bracelet is a good choice. However, Things are not always so simple, as is known to everyone, girl’s fond of the colorful decoration to make bracelet appears vivid and lively, meanwhile they want to display their mature side as college students. after CC understands the girls demands, he intends to sell the chain bracelet called CharmBracelet. The CharmBracelet is made up with colorful pearls to show girls’ lively, and the most important thing is that it must be connected by a cyclic chain which means the color of pearls are cyclic connected from the left to right. And the cyclic count must be more than one. If you connect the leftmost pearl and the rightmost pearl of such chain, you can make a CharmBracelet. Just like the pictrue below, this CharmBracelet’s cycle is 9 and its cyclic count is 2:</p><p>Now CC has brought in some ordinary bracelet chains, he wants to buy minimum number of pearls to make CharmBracelets so that he can save more money. but when remaking the bracelet, he can only add color pearls to the left end and right end of the chain, that is to say, adding to the middle is forbidden.<br>CC is satisfied with his ideas and ask you for help.<br><code>Input</code><br>The first line of the input is a single integer T ( 0 &lt; T &lt;= 100 ) which means the number of test cases.<br>Each test case contains only one line describe the original ordinary chain to be remade. Each character in the string stands for one pearl and there are 26 kinds of pearls being described by ‘a’ ~’z’ characters. The length of the string Len: ( 3 &lt;= Len &lt;= 100000 ).<br><code>Output</code><br>For each case, you are required to output the minimum count of pearls added to make a CharmBracelet.<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">3</span><br><span class="line">aaa</span><br><span class="line">abca</span><br><span class="line">abcde</span><br><span class="line">Sample Output</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, k = <span class="number">-1</span>;</span><br><span class="line">nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || str[k] == str[j])</span><br><span class="line">&#123;</span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">ll t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">n = str.size();</span><br><span class="line">kmp();</span><br><span class="line"><span class="comment">//n - nxt[n]为最小循环长度</span></span><br><span class="line"><span class="keyword">if</span>(nxt[n] &amp;&amp; n % (n - nxt[n]) == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="comment">//一个循环节的长度减去多余的长度，就是需要补的长度。</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n - nxt[n] - n % (n - nxt[n]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Period"><a href="#Period" class="headerlink" title="Period"></a>Period</h2><p>Description:<br>For each prefix of a given string S with N characters (each character has an ASCII code between 97 and 126, inclusive), we want to know whether the prefix is a periodic string. That is, for each i (2 &lt;= i &lt;= N) we want to know the largest K &gt; 1 (if there is one) such that the prefix of S with length i can be written as A K ,that is A concatenated K times, for some string A. Of course, we also want to know the period K.<br><code>Input</code><br>The input consists of several test cases. Each test case consists of two lines. The first one contains N (2 &lt;= N &lt;= 1 000 000) – the size of the string S.The second line contains the string S. The input file ends with a line, having the<br>number zero on it.<br><code>Output</code><br>For each test case, output “Test case #” and the consecutive test case number on a single line; then, for each prefix with length i that has a period K &gt; 1, output the prefix size i and the period K separated by a single space; the prefix sizes must be in increasing order. Print a blank line after each test case.<br></p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">3</span><br><span class="line">aaa</span><br><span class="line">12</span><br><span class="line">aabaabaabaab</span><br><span class="line">0</span><br><span class="line">Sample Output</span><br><span class="line"><span class="keyword">Test </span>case #1</span><br><span class="line">2 2</span><br><span class="line">3 3</span><br><span class="line"></span><br><span class="line"><span class="keyword">Test </span>case #2</span><br><span class="line">2 2</span><br><span class="line">6 2</span><br><span class="line">9 3</span><br><span class="line">12 4</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">int</span> nextval[N];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>;</span><br><span class="line">nextval[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(i != len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">-1</span> || s[i] == s[j])</span><br><span class="line">nextval[++i] = ++j;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">j = nextval[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> length, add;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;len) &amp;&amp; len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">getnext(s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Test case #%d\n"</span>, T++);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; ++i)</span><br><span class="line">&#123;</span><br><span class="line">length = i - nextval[i]; <span class="comment">//循环节的长度</span></span><br><span class="line"><span class="keyword">if</span>(i != length &amp;&amp; i % length == <span class="number">0</span>) <span class="comment">//如果有多个循环</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, i / length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Power-Strings"><a href="#Power-Strings" class="headerlink" title="Power Strings"></a>Power Strings</h2><p>Description:<br>Given two strings a and b we define a<em>b to be their concatenation. For example, if a = “abc” and b = “def” then a</em>b = “abcdef”. If we think of concatenation as multiplication, exponentiation by a non-negative integer is defined in the normal way: a^0 = “” (the empty string) and a^(n+1) = a*(a^n).<br><code>Input</code><br>Each test case is a line of input representing s, a string of printable characters. The length of s will be at least 1 and will not exceed 1 million characters. A line containing a period follows the last test case.<br><code>Output</code><br>For each s you should print the largest n such that s = a^n for some string a.<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">abcd</span><br><span class="line">aaaa</span><br><span class="line">ababab</span><br><span class="line">.</span><br><span class="line">Sample Output</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">Hint</span><br><span class="line">This problem has huge input, <span class="keyword">use</span> scanf instead <span class="keyword">of</span> cin <span class="keyword">to</span> avoid <span class="built_in">time</span> <span class="keyword">limit</span> exceed.</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">1000010</span>];</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnxt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, k = <span class="number">-1</span>;</span><br><span class="line">nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">-1</span> || str[j] == str[k])</span><br><span class="line">&#123;</span><br><span class="line">nxt[++ j] = ++ k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nxt[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; str)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(str == <span class="string">"."</span>) <span class="keyword">break</span>;</span><br><span class="line">n = str.size();</span><br><span class="line">getnxt();</span><br><span class="line"><span class="keyword">int</span> len = n - nxt[n];</span><br><span class="line"><span class="keyword">if</span>(n % len == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n / len);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Seek-the-Name-Seek-the-Fame"><a href="#Seek-the-Name-Seek-the-Fame" class="headerlink" title="Seek the Name, Seek the Fame"></a>Seek the Name, Seek the Fame</h2><p>Description:<br>The little cat is so famous, that many couples tramp over hill and dale to Byteland, and asked the little cat to give names to their newly-born babies. They seek the name, and at the same time seek the fame. In order to escape from such boring job, the innovative little cat works out an easy but fantastic algorithm:</p><p>Step1. Connect the father’s name and the mother’s name, to a new string S.<br>Step2. Find a proper prefix-suffix string of S (which is not only the prefix, but also the suffix of S).</p><p>Example: Father=’ala’, Mother=’la’, we have S = ‘ala’+’la’ = ‘alala’. Potential prefix-suffix strings of S are {‘a’, ‘ala’, ‘alala’}. Given the string S, could you help the little cat to write a program to calculate the length of possible prefix-suffix strings of S? (He might thank you by giving your baby a name:)<br><code>Input</code><br>The input contains a number of test cases. Each test case occupies a single line that contains the string S described above.</p><p>Restrictions: Only lowercase letters may appear in the input. 1 &lt;= Length of S &lt;= 400000.<br><code>Output</code><br>For each test case, output a single line with integer numbers in increasing order, denoting the possible length of the new baby’s name.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line">ababcababababcabab</span><br><span class="line">aaaaa</span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">9</span> <span class="number">18</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">400005</span>;</span><br><span class="line"><span class="keyword">char</span> p[N];</span><br><span class="line"><span class="keyword">int</span> next[N],arr[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> p[],<span class="keyword">int</span> m,<span class="keyword">int</span> next[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">-1</span>;</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j&lt;m)&#123;</span><br><span class="line"><span class="keyword">if</span>(t&lt;<span class="number">0</span>||p[j]==p[t])&#123;</span><br><span class="line">next[++j]=++t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> t=next[t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,p)!=EOF)&#123;</span><br><span class="line"><span class="keyword">int</span> m=<span class="built_in">strlen</span>(p);</span><br><span class="line">getNext(p,m,next);</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=m;next[i]!=<span class="number">-1</span>;i=next[i])</span><br><span class="line">   arr[cnt++]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=cnt<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"%d "</span>,arr[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,arr[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Compress-Words"><a href="#Compress-Words" class="headerlink" title="Compress Words"></a>Compress Words</h2><p>Description:<br>Amugae has a sentence consisting of n words. He want to compress this sentence into one word. Amugae doesn’t like repetitions, so when he merges two words into one word, he removes the longest prefix of the second word that coincides with a suffix of the first word. For example, he merges “sample” and “please” into “samplease”.</p><p>Amugae will merge his sentence left to right (i.e. first merge the first two words, then merge the result with the third word and so on). Write a program that prints the compressed word after the merging process ends.</p><p><code>Input</code><br>The first line contains an integer n (1≤n≤105), the number of the words in Amugae’s sentence.</p><p>The second line contains n words separated by single space. Each words is non-empty and consists of uppercase and lowercase English letters and digits (‘A’, ‘B’, …, ‘Z’, ‘a’, ‘b’, …, ‘z’, ‘0’, ‘1’, …, ‘9’). The total length of the words does not exceed 106.</p><p><code>Output</code><br>In the only line output the compressed word after the merging process ends as described in the problem.</p><p><code>题解</code></p><blockquote><p>KMP模板题，用第二个串与第一个串中等长后缀进行匹配即可，比如第一个串长度为n，第二个串长度为m，n&gt;m，则从第一个串的n-m处开始与第二个串匹配，最大匹配长度即为可以合并的长度。<br></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Examples</span><br><span class="line"><span class="keyword">Input</span></span><br><span class="line">5</span><br><span class="line">I want to <span class="keyword">order</span> pizza</span><br><span class="line">Output</span><br><span class="line">Iwantorderpizza</span><br><span class="line"><span class="keyword">Input</span></span><br><span class="line">5</span><br><span class="line"><span class="keyword">sample</span> please ease <span class="keyword">in</span> <span class="keyword">out</span></span><br><span class="line">Output</span><br><span class="line">sampleaseinout</span><br></pre></td></tr></table></figure><p></p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> nxt[maxn];</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="keyword">char</span> ans[maxn];</span><br><span class="line"><span class="keyword">int</span> lenn,lenm;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">-1</span>, j = <span class="number">0</span>;</span><br><span class="line">    nxt[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; lenm)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">-1</span> || str[j] == str[k]) nxt[++j] = ++k;</span><br><span class="line">        <span class="keyword">else</span> k = nxt[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回最长匹配长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</span><br><span class="line">get_next();</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = pos; i &lt; lenn; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j&amp;&amp;ans[i] != str[j])j = nxt[j];</span><br><span class="line"><span class="keyword">if</span> (ans[i] == str[j])j++;</span><br><span class="line"><span class="keyword">if</span> (j == lenm) &#123;</span><br><span class="line"><span class="keyword">return</span> lenm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,ans);</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">0</span>;</span><br><span class="line">lenn=<span class="built_in">strlen</span>(ans);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        lenm=<span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">int</span> now=KMP(max(pos-lenm,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=now;j&lt;lenm;j++)&#123;</span><br><span class="line">            ans[lenn++]=str[j];</span><br><span class="line">        &#125;</span><br><span class="line">        pos=lenn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lenn;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day27&quot;&gt;&lt;a href=&quot;#Day27&quot; class=&quot;headerlink&quot; title=&quot;Day27&quot;&gt;&lt;/a&gt;&lt;center&gt;Day27&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天讲的是 &lt;code&gt;KPM + hash算法&lt;/code&gt;&lt;br&gt;好好学习！！！&lt;br&gt;&lt;a href=&quot;https://vjudge.net/contest/320166&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OJ&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/26/YbZjzyvTSpnhMo5.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="集训" scheme="http://yoursite.com/categories/ACM/%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="KPM" scheme="http://yoursite.com/tags/KPM/"/>
    
      <category term="hash算法" scheme="http://yoursite.com/tags/hash%E7%AE%97%E6%B3%95/"/>
    
      <category term="匹配字符串算法" scheme="http://yoursite.com/tags/%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JAVA实现大数相加</title>
    <link href="http://yoursite.com/2019/08/16/JAVA%E5%AE%9E%E7%8E%B0%E5%A4%A7%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
    <id>http://yoursite.com/2019/08/16/JAVA实现大数相加/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2019-08-26T10:01:27.460Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Day27"><a href="#Day27" class="headerlink" title="Day27"></a><center>Day27</center></h1><p><center>今天无意间看到了，就记录下来吧，等有时间了再补上<br>好好学习！！！</center></p><a id="more"></a><h2 id="简单的介绍一下Java"><a href="#简单的介绍一下Java" class="headerlink" title="简单的介绍一下Java"></a>简单的介绍一下Java</h2><p>Java的大数相加：</p><h3 id="先导入包（和python有点点像）"><a href="#先导入包（和python有点点像）" class="headerlink" title="先导入包（和python有点点像）"></a>先导入包（和python有点点像）</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.*;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.*;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.math.*;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>*</code>就不用解释了吧(就是通配符，写一个*的话表示可以用到这个包下面)</p></blockquote><h4 id="介绍一下常用的包"><a href="#介绍一下常用的包" class="headerlink" title="介绍一下常用的包"></a>介绍一下常用的包</h4><table><thead><tr><th>所用到的包名</th><th>说明</th></tr></thead><tbody><tr><td>java.lang</td><td>该包提供了Java编程的基础类，例如 Object、Math、String、StringBuffer、System、Thread等，不使用该包就很难编写Java代码了。</td></tr><tr><td>java.util</td><td>该包提供了包含集合框架、遗留的集合类、事件模型、日期和时间实施、国际化和各种实用工具类（字符串标记生成器、随机数生成器和位数组）。</td></tr><tr><td>java.io</td><td>该包通过文件系统、数据流和序列化提供系统的输入与输出。</td></tr><tr><td>java.net</td><td>该包提供实现网络应用与开发的类。</td></tr><tr><td>java.sql</td><td>该包提供了使用Java语言访问并处理存储在数据源（通常是一个关系型数据库）中的数据API。</td></tr><tr><td>java.awt</td><td>这两个包提供了GUI设计与开发的类。java.awt包提供了创建界面和绘制图形图像的所有类，而javax.swing包提供了一组“轻量级”的组件，尽量让这些组件在所有平台上的工作方式相同。</td></tr><tr><td>java.swing</td><td></td></tr><tr><td>java.text</td><td>提供了与自然语言无关的方式来处理文本、日期、数字和消息的类和接口。</td></tr></tbody></table><p><code>详情链接</code></p><p><a href="https://beyond429.iteye.com/blog/344024" target="_blank" rel="noopener">java.lang 详解</a></p><p><a href="http://blog.csdn.net/abeetle/article/details/1497706" target="_blank" rel="noopener">java.util 详解</a></p><p><a href="http://blog.csdn.net/yczz/article/details/38761237" target="_blank" rel="noopener">java.io 详解</a></p><p><a href="https://zhidao.baidu.com/question/87061018.html" target="_blank" rel="noopener">java.net 详解</a></p><p><a href="http://www.360doc.com/content/12/0329/09/1200324_198823027.shtml" target="_blank" rel="noopener">java.sql 详解</a></p><p><a href="http://blog.csdn.net/u013147587/article/details/49815031" target="_blank" rel="noopener">java.awt 详解</a></p><p><a href="http://blog.sina.com.cn/s/blog_4a7979120100087g.html" target="_blank" rel="noopener">javax.swing 详解</a></p><p><a href="http://www.cnblogs.com/beibeibao/p/3411750.html" target="_blank" rel="noopener">java.text 详解</a></p><h3 id="书写格式"><a href="#书写格式" class="headerlink" title="书写格式"></a>书写格式</h3><p>主要入口为public static void main(String[] args){}<br>其中<code>String[] args</code>也可以写成<code>String args[]</code>，但还是推荐写第一种</p><h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Text</span><span class="params">(自己命名)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特别注意！！"><a href="#特别注意！！" class="headerlink" title="特别注意！！"></a>特别注意！！</h3><p>Java中十分敏感大小写!!!<br>每一个单词的开头字母都要大写<br>Eg：First FirstApple</p><h3 id="JAVA实现大数相加模板"><a href="#JAVA实现大数相加模板" class="headerlink" title="JAVA实现大数相加模板"></a>JAVA实现大数相加模板</h3><p>对应题目HDU1002<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.*;</span><br><span class="line"><span class="comment">//注意一下，在OJ上交JAVA题的时候要把`自己命名`改成Main不然不给过编译</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner cin = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> t = cin.nextInt();</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(t&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=<span class="number">0</span>)System.out.println(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">else</span> x=<span class="number">1</span>;</span><br><span class="line">BigInteger a = cin.nextBigInteger();</span><br><span class="line">BigInteger b = cin.nextBigInteger();</span><br><span class="line">System.out.println(<span class="string">"Case "</span>+num+<span class="string">":"</span>);</span><br><span class="line">System.out.println(a+<span class="string">" + "</span>+b+<span class="string">" = "</span>+a.add(b));</span><br><span class="line">num++;</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="其他的大数模拟的例子"><a href="#其他的大数模拟的例子" class="headerlink" title="其他的大数模拟的例子"></a>其他的大数模拟的例子</h2><p><code>链接</code><br><a href="https://blog.csdn.net/Hpuer_Random/article/details/83663194" target="_blank" rel="noopener">(づ￣3￣)づ╭❤～</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day27&quot;&gt;&lt;a href=&quot;#Day27&quot; class=&quot;headerlink&quot; title=&quot;Day27&quot;&gt;&lt;/a&gt;&lt;center&gt;Day27&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天无意间看到了，就记录下来吧，等有时间了再补上&lt;br&gt;好好学习！！！&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JAVA" scheme="http://yoursite.com/categories/JAVA/"/>
    
      <category term="大数相加" scheme="http://yoursite.com/categories/JAVA/%E5%A4%A7%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="JAVA" scheme="http://yoursite.com/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Day26</title>
    <link href="http://yoursite.com/2019/08/15/Day26/"/>
    <id>http://yoursite.com/2019/08/15/Day26/</id>
    <published>2019-08-14T16:00:00.000Z</published>
    <updated>2019-08-26T12:27:23.672Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --><h1 id="Day26"><a href="#Day26" class="headerlink" title="Day26"></a><center>Day26</center></h1><p><center>今天讲的是 <code>容斥定理 + 鸽巢原理</code><br>好好学习！！！<br><a href="https://vjudge.net/contest/317712#overview" target="_blank" rel="noopener">OJ</a><br><img src="https://i.loli.net/2019/08/26/wqWhTAltavRi8MZ.jpg" alt><br><a id="more"></a></center></p><h2 id="内容讲解"><a href="#内容讲解" class="headerlink" title="内容讲解"></a>内容讲解</h2><p><a href="https://blog.csdn.net/qq_42757965/article/details/99060042" target="_blank" rel="noopener">传送门</a></p><h2 id="Ekka-Dokka"><a href="#Ekka-Dokka" class="headerlink" title="Ekka Dokka"></a>Ekka Dokka</h2><p>Description:<br>Ekka and his friend Dokka decided to buy a cake. They both love cakes and that’s why they want to share the cake after buying it. As the name suggested that Ekka is very fond of odd numbers and Dokka is very fond of even numbers, they want to divide the cake such that Ekka gets a share of N square centimeters and Dokka gets a share of M square centimeters where N is odd and M is even. Both N and M are positive integers.</p><p>They want to divide the cake such that N * M = W, where W is the dashing factor set by them. Now you know their dashing factor, you have to find whether they can buy the desired cake or not.</p><p><code>Input</code><br>Input starts with an integer T (≤ 10000), denoting the number of test cases.</p><p>Each case contains an integer W (2 ≤ W &lt; 2^63). And W will not be a power of 2.</p><p><code>Output</code><br>For each case, print the case number first. After that print “Impossible” if they can’t buy their desired cake. If they can buy such a cake, you have to print N and M. If there are multiple solutions, then print the result where M is as small as possible.<br></p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="keyword">Input</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: <span class="number">5</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: Impossible</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span>: <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t, w;</span><br><span class="line">ll k = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;w);</span><br><span class="line">ll x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(w % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(w % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x *= <span class="number">2</span>;</span><br><span class="line">w /= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %lld: %lld %lld\n"</span>,k ++, w, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Case %lld: Impossible\n"</span>,k ++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="How-many-integers-can-you-find"><a href="#How-many-integers-can-you-find" class="headerlink" title="How many integers can you find"></a>How many integers can you find</h2><p>Description:<br>Now you get a number N, and a M-integers set, you should find out how many integers which are small than N, that they can divided exactly by any integers in the set. For example, N=12, and M-integer set is {2,3}, so there is another set {2,3,4,6,8,9,10}, all the integers of the set can be divided exactly by 2 or 3. As a result, you just output the number 7.<br><code>Input</code><br>There are a lot of cases. For each case, the first line contains two integers N and M. The follow line contains the M integers, and all of them are different from each other. 0&lt;N&lt;2^31,0&lt;M&lt;=10, and the M integer are non-negative and won’t exceed 20.<br><code>Output</code><br>For each case, output the number.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">12</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> !b ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a / gcd(a, b) * b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n, m, cnt;</span><br><span class="line">ll sum, cnt1, LCM;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n, &amp;m))</span><br><span class="line">&#123;</span><br><span class="line">ll x;</span><br><span class="line">cnt = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(x != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[cnt ++] = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span> &lt;&lt; cnt); i ++)</span><br><span class="line">&#123;</span><br><span class="line">cnt1 = <span class="number">0</span>, LCM = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i &gt;&gt; j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt1 ++;</span><br><span class="line">LCM = lcm(LCM, a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt1 % <span class="number">2</span> == <span class="number">0</span>) sum -= (n - <span class="number">1</span>) / LCM;</span><br><span class="line"><span class="keyword">else</span> sum += (n - <span class="number">1</span>) / LCM;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Co-prime"><a href="#Co-prime" class="headerlink" title="Co-prime"></a>Co-prime</h2><p>Description:<br>Given a number N, you are asked to count the number of integers between A and B inclusive which are relatively prime to N.<br>Two integers are said to be co-prime or relatively prime if they have no common positive divisors other than 1 or, equivalently, if their greatest common divisor is 1. The number 1 is relatively prime to every integer.<br><code>Input</code><br>The first line on input contains T (0 &lt; T &lt;= 100) the number of test cases, each of the next T lines contains three integers A, B, N where (1 &lt;= A &lt;= B &lt;= 10^15) and (1 &lt;=N &lt;= 10^9).<br><code>Output</code><br>For each test case, print the number of integers between A and B inclusive which are relatively prime to N. Follow the output format below.<br></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">10</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">15</span> <span class="number">5</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 5</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: 10</span></span><br><span class="line"></span><br><span class="line">Hint</span><br><span class="line"><span class="keyword">In</span> the first test <span class="keyword">case</span>, the five integers <span class="keyword">in</span> range [<span class="number">1</span>,<span class="number">10</span>] which are relatively prime <span class="keyword">to</span> <span class="number">2</span> are &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;.</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> aa[<span class="number">10001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t, a, b, n;</span><br><span class="line">ll k = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line">ll cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n % i == <span class="number">0</span>)</span><br><span class="line">aa[++ cnt] = i;</span><br><span class="line"><span class="keyword">while</span>(n % i == <span class="number">0</span>)</span><br><span class="line">n = n / i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">1</span>)</span><br><span class="line">aa[++ cnt] = n;</span><br><span class="line">ll sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span> &lt;&lt; cnt); i ++)</span><br><span class="line">&#123;</span><br><span class="line">ll ans = <span class="number">0</span>, sum1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> &amp; (i &gt;&gt; j))</span><br><span class="line">&#123;</span><br><span class="line">sum1 = sum1 * aa[j + <span class="number">1</span>];</span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum += b / sum1;</span><br><span class="line">sum -= (a - <span class="number">1</span>) / sum1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sum -= b / sum1;</span><br><span class="line">sum += (a - <span class="number">1</span>) / sum1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>, k ++, b - a + <span class="number">1</span> - sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Find-a-multiple"><a href="#Find-a-multiple" class="headerlink" title="Find a multiple"></a>Find a multiple</h2><p>Description:<br>The input contains N natural (i.e. positive integer) numbers ( N &lt;= 10000 ). Each of that numbers is not greater than 15000. This numbers are not necessarily different (so it may happen that two or more of them will be equal). Your task is to choose a few of given numbers ( 1 &lt;= few &lt;= N ) so that the sum of chosen numbers is multiple for N (i.e. N * k = (sum of chosen numbers) for some natural number k).<br><code>Input</code><br>The first line of the input contains the single number N. Each of next N lines contains one number from the given set.<br><code>Output</code><br>In case your program decides that the target set of numbers can not be found it should print to the output the single number 0. Otherwise it should print the number of the chosen numbers in the first line followed by the chosen numbers themselves (on a separate line each) in arbitrary order.</p><p>If there are more than one set of numbers with required properties you should print to the output only one (preferably your favorite) of them.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p></p><blockquote><p>这一题的解不是固定的<br>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"><span class="keyword">int</span> sum[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span> sum);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sum[i] = (sum[i - <span class="number">1</span>] + a[i]) % n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(sum[i] == sum[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,j - i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt;= j; k ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[k] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//另一种写法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"><span class="keyword">int</span> sum[maxx];</span><br><span class="line"><span class="keyword">int</span> b[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span> sum);</span><br><span class="line"><span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span> b);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sum[i] = (sum[i - <span class="number">1</span>] + a[i]) % n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(sum[i] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j != <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>, a[j]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b[sum[i]] == <span class="number">0</span>)</span><br><span class="line">b[sum[i]] = i;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i - b[sum[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = b[sum[i]] + <span class="number">1</span>; j &lt;= i; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j != b[sum[i]] + <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[j]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p></blockquote><h2 id="吃糖果"><a href="#吃糖果" class="headerlink" title="吃糖果"></a>吃糖果</h2><p>Description:<br>HOHO，终于从Speakless手上赢走了所有的糖果，是Gardon吃糖果时有个特殊的癖好，就是不喜欢将一样的糖果放在一起吃，喜欢先吃一种，下一次吃另一种，这样；可是Gardon不知道是否存在一种吃糖果的顺序使得他能把所有糖果都吃完？请你写个程序帮忙计算一下。<br><code>Input</code><br>第一行有一个整数T，接下来T组数据，每组数据占2行，第一行是一个整数N（0&lt;N&lt;=1000000)，第二行是N个数，表示N种糖果的数目Mi(0&lt;Mi&lt;=1000000)。<br><code>Output</code><br>对于每组数据，输出一行，包含一个”Yes”或者”No”。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">Sample Output</span><br><span class="line">No</span><br><span class="line">Yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Please use function scanf</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line">ll sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t, n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sum += a[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[n] &lt;= sum - a[n] + <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="Teacher-Bo"><a href="#Teacher-Bo" class="headerlink" title="Teacher Bo"></a>Teacher Bo</h2><p>Description:<br>Teacher BoBo is a geography teacher in the school.One day in his class,he marked N points in the map,the i-th point is at (Xi,Yi).He wonders,whether there is a tetrad (A,B,C,D)(A&lt;B,C&lt;D,A≠CorB≠D) such that the manhattan distance between A and B is equal to the manhattan distance between C and D.</p><p>If there exists such tetrad,print “YES”,else print “NO”.<br><code>Input</code><br>First line, an integer T. There are T test cases.(T≤50)</p><p>In each test case,the first line contains two intergers, N, M, means the number of points and the range of the coordinates.(N,M≤105).</p><p>Next N lines, the i-th line shows the coordinate of the i-th point.(Xi,Yi)(0≤Xi,Yi≤M).<br><code>Output</code><br>T lines, each line is “YES” or “NO”.<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">10</span></span><br><span class="line"><span class="number">8</span> <span class="number">8</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">4</span></span><br><span class="line">Sample Output</span><br><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><p></p><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span> &gt; mp;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">&#125;e[maxx];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">mp.clear();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;e[i].x, &amp;e[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">abs</span>(e[i].x - e[j].x) + <span class="built_in">abs</span>(e[i].y - e[j].y);</span><br><span class="line">mp[x] ++;</span><br><span class="line"><span class="keyword">if</span>(mp[x] &gt;= <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="跳蚤"><a href="#跳蚤" class="headerlink" title="跳蚤"></a>跳蚤</h2><p>Description:<br>Z城市居住着很多只跳蚤。在Z城市周六生活频道有一个娱乐节目。一只跳蚤将被请上一个高空钢丝的正中央。钢丝很长，可以看作是无限长。节目主持人会给该跳蚤发一张卡片。卡片上写有N+1个自然数。其中最后一个是M，而前N个数都不超过M，卡片上允许有相同的数字。跳蚤每次可以从卡片上任意选择一个自然数S，然后向左，或向右跳S个单位长度。而他最终的任务是跳到距离他左边一个单位长度的地方，并捡起位于那里的礼物。<br>比如当N=2，M=18时，持有卡片(10, 15, 18)的跳蚤，就可以完成任务：他可以先向左跳10个单位长度，然后再连向左跳3次，每次15个单位长度，最后再向右连跳3次，每次18个单位长度。而持有卡片(12, 15, 18)的跳蚤，则怎么也不可能跳到距他左边一个单位长度的地方。<br>当确定N和M后，显然一共有M^N张不同的卡片。现在的问题是，在这所有的卡片中，有多少张可以完成任务。<br><code>Input</code><br>两个整数N和M(N &lt;= 15 , M &lt;= 100000000)。<br><code>Output</code><br>可以完成任务的卡片数。<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">12</span></span><br><span class="line">Hint</span><br><span class="line">这<span class="number">12</span>张卡片分别是：</span><br><span class="line">(<span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>), (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>), (<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>), (<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>), (<span class="number">4</span>, <span class="number">1</span>, <span class="number">4</span>), (<span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p></p><blockquote><p>设卡片号为 a1,a2,…,an,m，跳蚤跳到对应号的次数是 x1,x2,…,xn，跳 m 个单位长度的次数是 xn+1<br>那么问题就转化为求：a[1]<em>x1+a[2]</em>x2+…+a[n]<em>xn+m</em>x(n+1)=1，一共有多少种情况而上述公式实质是求：GCD(a1,a2,…,an,m)=1<br>故先对 m 进行素因子分解，求出总的排列组合个数，即有：m^n 种，再根据容斥定理排除公因子非 1 的情况即可<br>设 g 为公因子非 1 的情况数，f(i) 表示有 i 个公因子的情况数，根据奇加偶减，有：g=f(1)-f(2)+f(3)-…f(k)<br>设g为公因子非1的情况数，f(i) 表示有 i 个公因子的情况数，由容斥原理得：g = f(1) - f(2) + f(3) -… f(k)</p></blockquote><p>code:<br></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx = <span class="number">111</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxx], num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_prime</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[++ num] = i;</span><br><span class="line"><span class="keyword">while</span>(n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n = n / i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n &gt; <span class="number">1</span>) a[++ num] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">quick_pow</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b &amp; <span class="number">1</span>) res = res * a;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = a *  a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">ll temp, ans;</span><br><span class="line"><span class="keyword">int</span> aa[<span class="number">110</span>], n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> b, <span class="keyword">int</span> cnt, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt == c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x = m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= c; i ++)</span><br><span class="line">&#123;</span><br><span class="line">x = x / aa[i];</span><br><span class="line">&#125;</span><br><span class="line">temp += quick_pow(x, n);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = b + <span class="number">1</span>; i &lt;= num; i ++)</span><br><span class="line">&#123;</span><br><span class="line">aa[cnt + <span class="number">1</span>] = a[i];</span><br><span class="line">dfs(i, cnt + <span class="number">1</span>, c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n, &amp;m))</span><br><span class="line">&#123;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">get_prime(m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; i ++)</span><br><span class="line">&#123;</span><br><span class="line">temp = <span class="number">0</span>;</span><br><span class="line">dfs(<span class="number">0</span>, <span class="number">0</span>, i);</span><br><span class="line"><span class="keyword">if</span>(i &amp; <span class="number">1</span>) ans += temp;</span><br><span class="line"><span class="keyword">else</span> ans -= temp;</span><br><span class="line">&#125;</span><br><span class="line">ans = quick_pow(m, n) - ans;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 24 2019 20:50:53 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;Day26&quot;&gt;&lt;a href=&quot;#Day26&quot; class=&quot;headerlink&quot; title=&quot;Day26&quot;&gt;&lt;/a&gt;&lt;center&gt;Day26&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;&lt;center&gt;今天讲的是 &lt;code&gt;容斥定理 + 鸽巢原理&lt;/code&gt;&lt;br&gt;好好学习！！！&lt;br&gt;&lt;a href=&quot;https://vjudge.net/contest/317712#overview&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OJ&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08/26/wqWhTAltavRi8MZ.jpg&quot; alt&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
      <category term="集训" scheme="http://yoursite.com/categories/ACM/%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="容斥原理" scheme="http://yoursite.com/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/"/>
    
      <category term="鸽巢定理" scheme="http://yoursite.com/tags/%E9%B8%BD%E5%B7%A2%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
</feed>
